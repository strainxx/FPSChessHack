#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioFunctions

#include "Basic.hpp"

#include "Sounds_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AudioFunctions.AudioFunctions_C.PlayRandomSoundAtLocation
// 0x0450 (0x0450 - 0x0000)
struct AudioFunctions_C_PlayRandomSoundAtLocation final
{
public:
	ESounds                                       SoundType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch_Multiplier;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomPitchOffset;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume_Multiplier;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_11;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_13;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_16;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      Temp_object_Variable_19;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_20;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_27;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_37;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_38;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_39;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_40;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_41;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_42;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_43;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_44;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_45;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_46;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_47;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_48;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_49;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_50;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_51;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_52;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_53;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_54;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_55;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_56;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_57;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_58;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_59;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_60;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_61;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_62;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_63;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_64;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_65;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_66;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_67;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_68;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESounds                                       Temp_byte_Variable;                                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_69;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_70;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_71;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_72;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_3;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_4;       // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_4;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_5;       // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_5;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_6;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_6;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_7;       // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_7;                           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_8;       // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_8;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_9;       // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_9;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_10;      // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_10;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_11;      // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_11;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_12;      // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_12;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_13;      // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_13;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_14;      // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_14;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_15;      // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_15;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_16;      // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_16;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_17;      // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_17;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_18;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_19;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioFunctions_C_PlayRandomSoundAtLocation) == 0x000008, "Wrong alignment on AudioFunctions_C_PlayRandomSoundAtLocation");
static_assert(sizeof(AudioFunctions_C_PlayRandomSoundAtLocation) == 0x000450, "Wrong size on AudioFunctions_C_PlayRandomSoundAtLocation");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, SoundType) == 0x000000, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::SoundType' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Location) == 0x000004, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Location' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Pitch_Multiplier) == 0x000010, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Pitch_Multiplier' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, RandomPitchOffset) == 0x000014, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::RandomPitchOffset' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Volume_Multiplier) == 0x000018, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Volume_Multiplier' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, AttenuationOverride) == 0x000020, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, __WorldContext) == 0x000028, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable) == 0x000030, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable) == 0x000040, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_1) == 0x000050, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_2) == 0x000058, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_3) == 0x000060, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_1) == 0x000068, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_4) == 0x000070, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_5) == 0x000078, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_6) == 0x000080, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_7) == 0x000088, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_2) == 0x000090, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_8) == 0x000098, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_9) == 0x0000A0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_10) == 0x0000A8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_3) == 0x0000B0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_11) == 0x0000B8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_12) == 0x0000C0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_4) == 0x0000C8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_13) == 0x0000D0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_14) == 0x0000D8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_15) == 0x0000E0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_5) == 0x0000E8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_16) == 0x0000F0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_17) == 0x0000F8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_18) == 0x000100, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_bool_Variable) == 0x000108, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_19) == 0x000110, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_6) == 0x000118, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_20) == 0x000120, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default) == 0x000128, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_21) == 0x000130, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_22) == 0x000138, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_23) == 0x000140, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_24) == 0x000148, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_25) == 0x000150, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_26) == 0x000158, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_7) == 0x000160, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_27) == 0x000168, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_28) == 0x000170, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_29) == 0x000178, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_8) == 0x000180, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_30) == 0x000188, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_31) == 0x000190, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_32) == 0x000198, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_33) == 0x0001A0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_34) == 0x0001A8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_35) == 0x0001B0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_36) == 0x0001B8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_9) == 0x0001C0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_37) == 0x0001C8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_38) == 0x0001D0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_39) == 0x0001D8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_10) == 0x0001E0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_40) == 0x0001E8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_41) == 0x0001F0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_42) == 0x0001F8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_43) == 0x000200, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_44) == 0x000208, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_11) == 0x000210, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_45) == 0x000218, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_46) == 0x000220, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_12) == 0x000228, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_47) == 0x000230, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_48) == 0x000238, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_49) == 0x000240, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_13) == 0x000248, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_50) == 0x000250, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_51) == 0x000258, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_52) == 0x000260, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_53) == 0x000268, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_14) == 0x000270, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_54) == 0x000278, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_55) == 0x000280, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_56) == 0x000288, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_57) == 0x000290, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_15) == 0x000298, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_58) == 0x0002A0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_59) == 0x0002A8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_60) == 0x0002B0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_61) == 0x0002B8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_62) == 0x0002C0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_63) == 0x0002C8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_16) == 0x0002D0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_64) == 0x0002D8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_65) == 0x0002E0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_66) == 0x0002E8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_int_Variable_17) == 0x0002F0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_67) == 0x0002F8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_68) == 0x000300, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_byte_Variable) == 0x000308, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_69) == 0x000310, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_70) == 0x000318, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_71) == 0x000320, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, Temp_object_Variable_72) == 0x000328, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000330, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000334, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_1) == 0x000338, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000340, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_2) == 0x000348, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x000350, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_3) == 0x000358, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_4) == 0x000360, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_4) == 0x000368, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_5) == 0x000370, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_5) == 0x000378, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_6) == 0x000380, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_6) == 0x000388, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_7) == 0x000390, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_7) == 0x000398, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_8) == 0x0003A0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_8) == 0x0003A8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_9) == 0x0003B0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_9) == 0x0003B8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_10) == 0x0003C0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_10) == 0x0003C8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_11) == 0x0003D0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_11) == 0x0003D8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_12) == 0x0003E0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_12) == 0x0003E8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_13) == 0x0003F0, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_13) == 0x0003F8, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_14) == 0x000400, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_14) == 0x000408, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_15) == 0x000410, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_15) == 0x000418, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_16) == 0x000420, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_16) == 0x000428, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, CallFunc_RandomIntegerInRange_ReturnValue_17) == 0x000430, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::CallFunc_RandomIntegerInRange_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_17) == 0x000438, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_18) == 0x000440, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_PlayRandomSoundAtLocation, K2Node_Select_Default_19) == 0x000448, "Member 'AudioFunctions_C_PlayRandomSoundAtLocation::K2Node_Select_Default_19' has a wrong offset!");

// Function AudioFunctions.AudioFunctions_C.Test
// 0x01D8 (0x01D8 - 0x0000)
struct AudioFunctions_C_Test final
{
public:
	ESounds                                       SoundType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch_Multiplier;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomPitchOffset;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume_Multiplier;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_14;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_17;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESounds                                       Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_20;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_32;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_33;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_34;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_35;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_36;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_4;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_3;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_4;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_5;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioFunctions_C_Test) == 0x000008, "Wrong alignment on AudioFunctions_C_Test");
static_assert(sizeof(AudioFunctions_C_Test) == 0x0001D8, "Wrong size on AudioFunctions_C_Test");
static_assert(offsetof(AudioFunctions_C_Test, SoundType) == 0x000000, "Member 'AudioFunctions_C_Test::SoundType' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Location) == 0x000004, "Member 'AudioFunctions_C_Test::Location' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Pitch_Multiplier) == 0x000010, "Member 'AudioFunctions_C_Test::Pitch_Multiplier' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, RandomPitchOffset) == 0x000014, "Member 'AudioFunctions_C_Test::RandomPitchOffset' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Volume_Multiplier) == 0x000018, "Member 'AudioFunctions_C_Test::Volume_Multiplier' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, __WorldContext) == 0x000020, "Member 'AudioFunctions_C_Test::__WorldContext' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_int_Variable) == 0x000028, "Member 'AudioFunctions_C_Test::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'AudioFunctions_C_Test::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable) == 0x000030, "Member 'AudioFunctions_C_Test::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'AudioFunctions_C_Test::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'AudioFunctions_C_Test::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_1) == 0x000040, "Member 'AudioFunctions_C_Test::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_2) == 0x000048, "Member 'AudioFunctions_C_Test::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_3) == 0x000050, "Member 'AudioFunctions_C_Test::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_int_Variable_1) == 0x000058, "Member 'AudioFunctions_C_Test::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_4) == 0x000060, "Member 'AudioFunctions_C_Test::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_5) == 0x000068, "Member 'AudioFunctions_C_Test::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_6) == 0x000070, "Member 'AudioFunctions_C_Test::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_7) == 0x000078, "Member 'AudioFunctions_C_Test::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_int_Variable_2) == 0x000080, "Member 'AudioFunctions_C_Test::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_8) == 0x000088, "Member 'AudioFunctions_C_Test::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_9) == 0x000090, "Member 'AudioFunctions_C_Test::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_10) == 0x000098, "Member 'AudioFunctions_C_Test::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_11) == 0x0000A0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_12) == 0x0000A8, "Member 'AudioFunctions_C_Test::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_13) == 0x0000B0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_int_Variable_3) == 0x0000B8, "Member 'AudioFunctions_C_Test::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_14) == 0x0000C0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_15) == 0x0000C8, "Member 'AudioFunctions_C_Test::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_16) == 0x0000D0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_int_Variable_4) == 0x0000D8, "Member 'AudioFunctions_C_Test::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_17) == 0x0000E0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_18) == 0x0000E8, "Member 'AudioFunctions_C_Test::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_19) == 0x0000F0, "Member 'AudioFunctions_C_Test::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_byte_Variable) == 0x0000F8, "Member 'AudioFunctions_C_Test::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_20) == 0x000100, "Member 'AudioFunctions_C_Test::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_21) == 0x000108, "Member 'AudioFunctions_C_Test::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_22) == 0x000110, "Member 'AudioFunctions_C_Test::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_23) == 0x000118, "Member 'AudioFunctions_C_Test::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_24) == 0x000120, "Member 'AudioFunctions_C_Test::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_25) == 0x000128, "Member 'AudioFunctions_C_Test::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_26) == 0x000130, "Member 'AudioFunctions_C_Test::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_27) == 0x000138, "Member 'AudioFunctions_C_Test::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_28) == 0x000140, "Member 'AudioFunctions_C_Test::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_29) == 0x000148, "Member 'AudioFunctions_C_Test::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_30) == 0x000150, "Member 'AudioFunctions_C_Test::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_31) == 0x000158, "Member 'AudioFunctions_C_Test::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_32) == 0x000160, "Member 'AudioFunctions_C_Test::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_33) == 0x000168, "Member 'AudioFunctions_C_Test::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_34) == 0x000170, "Member 'AudioFunctions_C_Test::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_35) == 0x000178, "Member 'AudioFunctions_C_Test::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, Temp_object_Variable_36) == 0x000180, "Member 'AudioFunctions_C_Test::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000188, "Member 'AudioFunctions_C_Test::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00018C, "Member 'AudioFunctions_C_Test::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default) == 0x000190, "Member 'AudioFunctions_C_Test::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000198, "Member 'AudioFunctions_C_Test::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default_1) == 0x0001A0, "Member 'AudioFunctions_C_Test::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x0001A8, "Member 'AudioFunctions_C_Test::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default_2) == 0x0001B0, "Member 'AudioFunctions_C_Test::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, CallFunc_RandomIntegerInRange_ReturnValue_4) == 0x0001B8, "Member 'AudioFunctions_C_Test::CallFunc_RandomIntegerInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default_3) == 0x0001C0, "Member 'AudioFunctions_C_Test::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default_4) == 0x0001C8, "Member 'AudioFunctions_C_Test::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AudioFunctions_C_Test, K2Node_Select_Default_5) == 0x0001D0, "Member 'AudioFunctions_C_Test::K2Node_Select_Default_5' has a wrong offset!");

}

