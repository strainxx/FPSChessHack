#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_3DMainMenuPawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_3DMainMenuPawn.BP_3DMainMenuPawn_C
// 0x0040 (0x02C0 - 0x0280)
class ABP_3DMainMenuPawn_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UCameraComponent*                       Camera1;                                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Clickable_C>      SelectedPiece;                                     // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MenuUnselectable;                                  // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HostButtun_C*                       DefaultPiece;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsingGamepad;                                    // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMenuAxisPressed;                                 // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_3DMainMenuPawn(int32 EntryPoint);
	void InpAxisEvt_MouseMovement_K2Node_InputAxisEvent_2(float AxisValue);
	void EnableAxisInput();
	void InpAxisEvt_MenuVertical_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MenuHorizontal_K2Node_InputAxisEvent_0(float AxisValue);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InpActEvt_MouseFocus_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_MenuRight_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_MenuLeft_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_MenuDown_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_MenuUp_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_SelectPiece_K2Node_InputActionEvent_5(const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_3DMainMenuPawn_C">();
	}
	static class ABP_3DMainMenuPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_3DMainMenuPawn_C>();
	}
};
static_assert(alignof(ABP_3DMainMenuPawn_C) == 0x000008, "Wrong alignment on ABP_3DMainMenuPawn_C");
static_assert(sizeof(ABP_3DMainMenuPawn_C) == 0x0002C0, "Wrong size on ABP_3DMainMenuPawn_C");
static_assert(offsetof(ABP_3DMainMenuPawn_C, UberGraphFrame) == 0x000280, "Member 'ABP_3DMainMenuPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, Camera1) == 0x000288, "Member 'ABP_3DMainMenuPawn_C::Camera1' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, DefaultSceneRoot) == 0x000290, "Member 'ABP_3DMainMenuPawn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, SelectedPiece) == 0x000298, "Member 'ABP_3DMainMenuPawn_C::SelectedPiece' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, MenuUnselectable) == 0x0002A8, "Member 'ABP_3DMainMenuPawn_C::MenuUnselectable' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, DefaultPiece) == 0x0002B0, "Member 'ABP_3DMainMenuPawn_C::DefaultPiece' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, IsUsingGamepad) == 0x0002B8, "Member 'ABP_3DMainMenuPawn_C::IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(ABP_3DMainMenuPawn_C, IsMenuAxisPressed) == 0x0002B9, "Member 'ABP_3DMainMenuPawn_C::IsMenuAxisPressed' has a wrong offset!");

}

