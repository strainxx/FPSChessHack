#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Arrow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Arrow.BP_Arrow_C
// 0x0060 (0x0280 - 0x0220)
class ABP_Arrow_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKillcamRecorder_C*                     KillcamRecorder;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       StickSphere;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   arrow;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0250(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeathTimer;                                        // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        OwningChar;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDoneDamage;                                     // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachedTo;                                        // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanHeadshot;                                       // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanHitOwner;                                       // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KnockbackScale;                                    // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharKnockbackScale;                                // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharZOverride;                                     // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Arrow(int32 EntryPoint);
	void BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void EnableCollision();
	void Destroy();
	void EnableArrow();
	void Arrow_Hit_Calc(class AActor* Other, class UPrimitiveComponent* Other_Comp, const struct FVector& Hit_Location, bool Hit);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Initialize(class ABP_PieceChar_C* OwningChar_0, float Damage_0, const struct FVector& Impulse);
	void ReceiveBeginPlay();
	void ArrowHit(const struct FVector& Location, class USceneComponent* Parent, bool Hit);
	void Detach();
	void TurnBlack();
	void InitAsReplayActor();
	void CustomDamageOverride(float* Damage_0, bool* Overrided);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Arrow_C">();
	}
	static class ABP_Arrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Arrow_C>();
	}
};
static_assert(alignof(ABP_Arrow_C) == 0x000008, "Wrong alignment on ABP_Arrow_C");
static_assert(sizeof(ABP_Arrow_C) == 0x000280, "Wrong size on ABP_Arrow_C");
static_assert(offsetof(ABP_Arrow_C, UberGraphFrame) == 0x000220, "Member 'ABP_Arrow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, KillcamRecorder) == 0x000228, "Member 'ABP_Arrow_C::KillcamRecorder' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, StickSphere) == 0x000230, "Member 'ABP_Arrow_C::StickSphere' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, Trail) == 0x000238, "Member 'ABP_Arrow_C::Trail' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, Scene) == 0x000240, "Member 'ABP_Arrow_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, arrow) == 0x000248, "Member 'ABP_Arrow_C::arrow' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, Damage) == 0x000250, "Member 'ABP_Arrow_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, DeathTimer) == 0x000254, "Member 'ABP_Arrow_C::DeathTimer' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, OwningChar) == 0x000258, "Member 'ABP_Arrow_C::OwningChar' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, HasDoneDamage) == 0x000260, "Member 'ABP_Arrow_C::HasDoneDamage' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, AttachedTo) == 0x000268, "Member 'ABP_Arrow_C::AttachedTo' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, CanHeadshot) == 0x000270, "Member 'ABP_Arrow_C::CanHeadshot' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, CanHitOwner) == 0x000271, "Member 'ABP_Arrow_C::CanHitOwner' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, KnockbackScale) == 0x000274, "Member 'ABP_Arrow_C::KnockbackScale' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, CharKnockbackScale) == 0x000278, "Member 'ABP_Arrow_C::CharKnockbackScale' has a wrong offset!");
static_assert(offsetof(ABP_Arrow_C, CharZOverride) == 0x00027C, "Member 'ABP_Arrow_C::CharZOverride' has a wrong offset!");

}

