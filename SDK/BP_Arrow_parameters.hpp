#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Arrow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Arrow.BP_Arrow_C.ExecuteUbergraph_BP_Arrow
// 0x0360 (0x0360 - 0x0000)
struct BP_Arrow_C_ExecuteUbergraph_BP_Arrow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CustomDamageOverride_Damage;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CustomDamageOverride_Overrided;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_Parent;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hit_1;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldOffset_SweepHitResult;         // 0x003C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_OwningChar;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Impulse;                        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0148(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Other;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Other_Comp;                     // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Hit_Location;                   // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hit;                            // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointInHead_In_Head;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_233[0x1];                                      // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0234(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0248(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253[0x1];                                      // 0x0253(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0254(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0290(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow) == 0x000008, "Wrong alignment on BP_Arrow_C_ExecuteUbergraph_BP_Arrow");
static_assert(sizeof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow) == 0x000360, "Wrong size on BP_Arrow_C_ExecuteUbergraph_BP_Arrow");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, EntryPoint) == 0x000000, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_CustomDamageOverride_Damage) == 0x000004, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_CustomDamageOverride_Damage' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_CustomDamageOverride_Overrided) == 0x000008, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_CustomDamageOverride_Overrided' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Location) == 0x00000C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Parent) == 0x000018, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Parent' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Hit_1) == 0x000020, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_K2_AddWorldOffset_SweepHitResult) == 0x00003C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_K2_AddWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_OwningChar) == 0x0000C8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_OwningChar' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Damage) == 0x0000D0, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Impulse) == 0x0000D4, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Impulse' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000E8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000F0, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000F8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000100, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_MyComp) == 0x000108, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_Other) == 0x000110, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_OtherComp) == 0x000118, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_bSelfMoved) == 0x000120, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_HitLocation) == 0x000124, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_HitNormal) == 0x000130, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_NormalImpulse) == 0x00013C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_Event_Hit) == 0x000148, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001D4, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_HasAuthority_ReturnValue) == 0x0001D5, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Other) == 0x0001D8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Other' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Other_Comp) == 0x0001E0, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Other_Comp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Hit_Location) == 0x0001E8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CustomEvent_Hit) == 0x0001F4, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_AsActor) == 0x0001F8, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000201, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_AsBP_Destructible) == 0x000208, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_AsBP_Piece) == 0x000218, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_bSuccess_2) == 0x000220, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000228, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_DynamicCast_bSuccess_3) == 0x000230, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_PointInHead_In_Head) == 0x000231, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_PointInHead_In_Head' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_BooleanAND_ReturnValue) == 0x000232, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CreateDelegate_OutputDelegate) == 0x000234, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000248, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_HasAuthority_ReturnValue_1) == 0x000250, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_HasAuthority_ReturnValue_2) == 0x000251, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_HasAuthority_ReturnValue_3) == 0x000252, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_CreateDelegate_OutputDelegate_1) == 0x000254, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000268, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000270, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherActor) == 0x000278, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherComp) == 0x000280, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000288, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_bFromSweep) == 0x00028C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, K2Node_ComponentBoundEvent_SweepResult) == 0x000290, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_SelectFloat_ReturnValue) == 0x00031C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000320, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_Conv_FloatToString_ReturnValue) == 0x000328, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_Not_PreBool_ReturnValue) == 0x000338, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_BooleanAND_ReturnValue_1) == 0x000339, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00033A, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00033B, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00033C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_BreakVector_X) == 0x000348, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_BreakVector_Y) == 0x00034C, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_BreakVector_Z) == 0x000350, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ExecuteUbergraph_BP_Arrow, CallFunc_MakeVector_ReturnValue) == 0x000354, "Member 'BP_Arrow_C_ExecuteUbergraph_BP_Arrow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_Arrow_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.Arrow Hit Calc
// 0x0020 (0x0020 - 0x0000)
struct BP_Arrow_C_Arrow_Hit_Calc final
{
public:
	class AActor*                                 Other;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Other_Comp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Arrow_C_Arrow_Hit_Calc) == 0x000008, "Wrong alignment on BP_Arrow_C_Arrow_Hit_Calc");
static_assert(sizeof(BP_Arrow_C_Arrow_Hit_Calc) == 0x000020, "Wrong size on BP_Arrow_C_Arrow_Hit_Calc");
static_assert(offsetof(BP_Arrow_C_Arrow_Hit_Calc, Other) == 0x000000, "Member 'BP_Arrow_C_Arrow_Hit_Calc::Other' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_Arrow_Hit_Calc, Other_Comp) == 0x000008, "Member 'BP_Arrow_C_Arrow_Hit_Calc::Other_Comp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_Arrow_Hit_Calc, Hit_Location) == 0x000010, "Member 'BP_Arrow_C_Arrow_Hit_Calc::Hit_Location' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_Arrow_Hit_Calc, Hit) == 0x00001C, "Member 'BP_Arrow_C_Arrow_Hit_Calc::Hit' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Arrow_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Arrow_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Arrow_C_ReceiveHit");
static_assert(sizeof(BP_Arrow_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_Arrow_C_ReceiveHit");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Arrow_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Arrow_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Arrow_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Arrow_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_Arrow_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_Arrow_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_Arrow_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_Arrow_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Arrow_C_BndEvt__BP_Arrow_StickSphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.Initialize
// 0x0018 (0x0018 - 0x0000)
struct BP_Arrow_C_Initialize final
{
public:
	class ABP_PieceChar_C*                        OwningChar_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_0;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Arrow_C_Initialize) == 0x000008, "Wrong alignment on BP_Arrow_C_Initialize");
static_assert(sizeof(BP_Arrow_C_Initialize) == 0x000018, "Wrong size on BP_Arrow_C_Initialize");
static_assert(offsetof(BP_Arrow_C_Initialize, OwningChar_0) == 0x000000, "Member 'BP_Arrow_C_Initialize::OwningChar_0' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_Initialize, Damage_0) == 0x000008, "Member 'BP_Arrow_C_Initialize::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_Initialize, Impulse) == 0x00000C, "Member 'BP_Arrow_C_Initialize::Impulse' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.ArrowHit
// 0x0020 (0x0020 - 0x0000)
struct BP_Arrow_C_ArrowHit final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Parent;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Arrow_C_ArrowHit) == 0x000008, "Wrong alignment on BP_Arrow_C_ArrowHit");
static_assert(sizeof(BP_Arrow_C_ArrowHit) == 0x000020, "Wrong size on BP_Arrow_C_ArrowHit");
static_assert(offsetof(BP_Arrow_C_ArrowHit, Location) == 0x000000, "Member 'BP_Arrow_C_ArrowHit::Location' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ArrowHit, Parent) == 0x000010, "Member 'BP_Arrow_C_ArrowHit::Parent' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_ArrowHit, Hit) == 0x000018, "Member 'BP_Arrow_C_ArrowHit::Hit' has a wrong offset!");

// Function BP_Arrow.BP_Arrow_C.CustomDamageOverride
// 0x0008 (0x0008 - 0x0000)
struct BP_Arrow_C_CustomDamageOverride final
{
public:
	float                                         Damage_0;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overrided;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Arrow_C_CustomDamageOverride) == 0x000004, "Wrong alignment on BP_Arrow_C_CustomDamageOverride");
static_assert(sizeof(BP_Arrow_C_CustomDamageOverride) == 0x000008, "Wrong size on BP_Arrow_C_CustomDamageOverride");
static_assert(offsetof(BP_Arrow_C_CustomDamageOverride, Damage_0) == 0x000000, "Member 'BP_Arrow_C_CustomDamageOverride::Damage_0' has a wrong offset!");
static_assert(offsetof(BP_Arrow_C_CustomDamageOverride, Overrided) == 0x000004, "Member 'BP_Arrow_C_CustomDamageOverride::Overrided' has a wrong offset!");

}

