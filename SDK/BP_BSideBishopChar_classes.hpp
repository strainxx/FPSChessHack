#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideBishopChar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_BishopChar_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BSideBishopChar.BP_BSideBishopChar_C
// 0x0030 (0x07B0 - 0x0780)
class ABP_BSideBishopChar_C final : public ABP_BishopChar_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_BSideBishopChar_C;               // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       Sphere;                                            // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HeadGrenade;                                       // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GlideExplosionDamage;                              // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sights;                                            // 0x079C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D[0x3];                                      // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SightLength;                                       // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlidingDamageMultiplier;                           // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BSideBishopChar(int32 EntryPoint);
	void PlaybackUnsight();
	void PlaybackSight();
	void ResolveGlideGrenadeMulti();
	void ResolveGlideGrenadeServer();
	void ResolveGlideGrenade();
	void ShootGrenade(const struct FVector& Direction_0);
	void PlayShootServer();
	void PlayShootAnim();
	void PlayShootMulti();
	void ToggleSight(bool On);
	void EndSight();
	void Sight();
	void EndGlideAll();
	void StartGlide();
	void ShootDirection(const struct FVector& Direction_0);
	void MainAbility();
	void MovementAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BSideBishopChar_C">();
	}
	static class ABP_BSideBishopChar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BSideBishopChar_C>();
	}
};
static_assert(alignof(ABP_BSideBishopChar_C) == 0x000010, "Wrong alignment on ABP_BSideBishopChar_C");
static_assert(sizeof(ABP_BSideBishopChar_C) == 0x0007B0, "Wrong size on ABP_BSideBishopChar_C");
static_assert(offsetof(ABP_BSideBishopChar_C, UberGraphFrame_BP_BSideBishopChar_C) == 0x000780, "Member 'ABP_BSideBishopChar_C::UberGraphFrame_BP_BSideBishopChar_C' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, Sphere) == 0x000788, "Member 'ABP_BSideBishopChar_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, HeadGrenade) == 0x000790, "Member 'ABP_BSideBishopChar_C::HeadGrenade' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, GlideExplosionDamage) == 0x000798, "Member 'ABP_BSideBishopChar_C::GlideExplosionDamage' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, Sights) == 0x00079C, "Member 'ABP_BSideBishopChar_C::Sights' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, SightLength) == 0x0007A0, "Member 'ABP_BSideBishopChar_C::SightLength' has a wrong offset!");
static_assert(offsetof(ABP_BSideBishopChar_C, GlidingDamageMultiplier) == 0x0007A4, "Member 'ABP_BSideBishopChar_C::GlidingDamageMultiplier' has a wrong offset!");

}

