#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideBishopChar

#include "Basic.hpp"

#include "BP_BSideBishopChar_classes.hpp"
#include "BP_BSideBishopChar_parameters.hpp"


namespace SDK
{

// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ExecuteUbergraph_BP_BSideBishopChar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideBishopChar_C::ExecuteUbergraph_BP_BSideBishopChar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ExecuteUbergraph_BP_BSideBishopChar");

	Params::BP_BSideBishopChar_C_ExecuteUbergraph_BP_BSideBishopChar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.PlaybackUnsight
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::PlaybackUnsight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "PlaybackUnsight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.PlaybackSight
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::PlaybackSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "PlaybackSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ResolveGlideGrenadeMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::ResolveGlideGrenadeMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ResolveGlideGrenadeMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ResolveGlideGrenadeServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::ResolveGlideGrenadeServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ResolveGlideGrenadeServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ResolveGlideGrenade
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::ResolveGlideGrenade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ResolveGlideGrenade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ShootGrenade
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideBishopChar_C::ShootGrenade(const struct FVector& Direction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ShootGrenade");

	Params::BP_BSideBishopChar_C_ShootGrenade Parms{};

	Parms.Direction_0 = std::move(Direction_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.PlayShootServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::PlayShootServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "PlayShootServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.PlayShootAnim
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::PlayShootAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "PlayShootAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.PlayShootMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::PlayShootMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "PlayShootMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ToggleSight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BSideBishopChar_C::ToggleSight(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ToggleSight");

	Params::BP_BSideBishopChar_C_ToggleSight Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.EndSight
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::EndSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "EndSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.Sight
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::Sight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "Sight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.EndGlideAll
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::EndGlideAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "EndGlideAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.StartGlide
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::StartGlide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "StartGlide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.ShootDirection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideBishopChar_C::ShootDirection(const struct FVector& Direction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "ShootDirection");

	Params::BP_BSideBishopChar_C_ShootDirection Parms{};

	Parms.Direction_0 = std::move(Direction_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.MainAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::MainAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "MainAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideBishopChar.BP_BSideBishopChar_C.MovementAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideBishopChar_C::MovementAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideBishopChar_C", "MovementAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

