#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideKingChar

#include "Basic.hpp"

#include "BP_BSideKingChar_classes.hpp"
#include "BP_BSideKingChar_parameters.hpp"


namespace SDK
{

// Function BP_BSideKingChar.BP_BSideKingChar_C.ExecuteUbergraph_BP_BSideKingChar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKingChar_C::ExecuteUbergraph_BP_BSideKingChar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "ExecuteUbergraph_BP_BSideKingChar");

	Params::BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.EndPlaybackShield
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::EndPlaybackShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "EndPlaybackShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.PlaybackShield
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::PlaybackShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "PlaybackShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StopFlyingPlayback
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StopFlyingPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StopFlyingPlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StartFlyingPlayback
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StartFlyingPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StartFlyingPlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_BSideKingChar_C::BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StopFlyingMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StopFlyingMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StopFlyingMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StopFlyingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StopFlyingServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StopFlyingServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_BSideKingChar_C::BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.EndShield
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::EndShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "EndShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StartShield
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StartShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StartShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.ForceSwing
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::ForceSwing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "ForceSwing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StopFlying
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StopFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StopFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.StartFlying
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::StartFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "StartFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.GetDefaultCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Default_Camera                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKingChar_C::GetDefaultCamera(class UCameraComponent** Default_Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "GetDefaultCamera");

	Params::BP_BSideKingChar_C_GetDefaultCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Default_Camera != nullptr)
		*Default_Camera = Parms.Default_Camera;
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKingChar_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "ReceiveTick");

	Params::BP_BSideKingChar_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.MovementAbilityAll
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::MovementAbilityAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "MovementAbilityAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.MovementAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::MovementAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "MovementAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKingChar.BP_BSideKingChar_C.MainAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideKingChar_C::MainAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKingChar_C", "MainAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

