#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideKingChar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BSideKingChar.BP_BSideKingChar_C.ExecuteUbergraph_BP_BSideKingChar
// 0x06D0 (0x06D0 - 0x0000)
struct BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0064(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0114(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01C8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01D8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_267[0x1];                                      // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0300(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThrownKingSword_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x03C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0418(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Arrow_C*                            K2Node_DynamicCast_AsBP_Arrow;                     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x04D8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0594(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char_1;              // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x05EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_635[0x3];                                      // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0638(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar) == 0x000010, "Wrong alignment on BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar");
static_assert(sizeof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar) == 0x0006D0, "Wrong size on BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, EntryPoint) == 0x000000, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_HasAuthority_ReturnValue_1) == 0x000015, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_HasAuthority_ReturnValue_2) == 0x000016, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_MakeRotator_ReturnValue) == 0x00001C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000028, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000034, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000040, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_ComposeRotators_ReturnValue) == 0x000058, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000064, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Normal_ReturnValue) == 0x0000F0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_VSize_ReturnValue) == 0x0000FC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_FMin_ReturnValue) == 0x000100, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000104, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_HasAuthority_ReturnValue_3) == 0x000110, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000114, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001A0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Add_VectorVector_ReturnValue) == 0x0001AC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_MakeVector_ReturnValue) == 0x0001B8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, Temp_object_Variable) == 0x0001C8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_LineTraceSingle_OutHit) == 0x0001D8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_LineTraceSingle_ReturnValue) == 0x000264, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_bBlockingHit) == 0x000265, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_bInitialOverlap) == 0x000266, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_Time) == 0x000268, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_Distance) == 0x00026C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_Location) == 0x000270, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_ImpactPoint) == 0x00027C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_Normal) == 0x000288, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_ImpactNormal) == 0x000294, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_HitItem) == 0x0002C0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_FaceIndex) == 0x0002C4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_TraceStart) == 0x0002C8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakHitResult_TraceEnd) == 0x0002D4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002EC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000300, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_GetForwardVector_ReturnValue) == 0x000308, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000314, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x000320, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_ComposeRotators_ReturnValue_1) == 0x00032C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000338, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_GetForwardVector_ReturnValue_1) == 0x000344, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Conv_BoolToString_ReturnValue) == 0x000350, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000360, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00036C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003B0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003B8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0003C0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, Temp_int_Loop_Counter_Variable) == 0x0003C8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003D0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Add_IntInt_ReturnValue) == 0x0003E0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Array_Length_ReturnValue) == 0x0003E4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Less_IntInt_ReturnValue) == 0x0003E8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003EC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0003F8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000400, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000408, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000410, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000414, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000418, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_AsBP_Arrow) == 0x0004A8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_AsBP_Arrow' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_bSuccess) == 0x0004B0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004B1, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0004B8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherActor) == 0x0004C0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherComp) == 0x0004C8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0004D0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_bFromSweep) == 0x0004D4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_ComponentBoundEvent_SweepResult) == 0x0004D8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000568, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_bSuccess_1) == 0x000570, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_AsBP_Piece) == 0x000578, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_bSuccess_2) == 0x000580, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x000584, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, Temp_int_Array_Index_Variable) == 0x000590, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000594, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Array_Get_Item) == 0x0005A0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0005A8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_AsBP_Piece_Char_1) == 0x0005B8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_AsBP_Piece_Char_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, K2Node_DynamicCast_bSuccess_3) == 0x0005C0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_X) == 0x0005C4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_Y) == 0x0005C8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_Z) == 0x0005CC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0005D0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_MakeVector_ReturnValue_1) == 0x0005D4, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0005E0, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0005EC, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0005F8, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Normal_ReturnValue_1) == 0x000604, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x000610, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_X_1) == 0x00061C, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_Y_1) == 0x000620, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_BreakVector_Z_1) == 0x000624, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_MakeVector_ReturnValue_2) == 0x000628, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000634, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000638, "Member 'BP_BSideKingChar_C_ExecuteUbergraph_BP_BSideKingChar::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_BSideKingChar.BP_BSideKingChar_C.BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_HelicopterHitbox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSideKingChar.BP_BSideKingChar_C.BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideKingChar_C_BndEvt__BP_BSideKingChar_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSideKingChar.BP_BSideKingChar_C.GetDefaultCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_BSideKingChar_C_GetDefaultCamera final
{
public:
	class UCameraComponent*                       Default_Camera;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKingChar_C_GetDefaultCamera) == 0x000008, "Wrong alignment on BP_BSideKingChar_C_GetDefaultCamera");
static_assert(sizeof(BP_BSideKingChar_C_GetDefaultCamera) == 0x000018, "Wrong size on BP_BSideKingChar_C_GetDefaultCamera");
static_assert(offsetof(BP_BSideKingChar_C_GetDefaultCamera, Default_Camera) == 0x000000, "Member 'BP_BSideKingChar_C_GetDefaultCamera::Default_Camera' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_GetDefaultCamera, Temp_bool_Variable) == 0x000008, "Member 'BP_BSideKingChar_C_GetDefaultCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_GetDefaultCamera, CallFunc_IsActive_ReturnValue) == 0x000009, "Member 'BP_BSideKingChar_C_GetDefaultCamera::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKingChar_C_GetDefaultCamera, K2Node_Select_Default) == 0x000010, "Member 'BP_BSideKingChar_C_GetDefaultCamera::K2Node_Select_Default' has a wrong offset!");

// Function BP_BSideKingChar.BP_BSideKingChar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BSideKingChar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKingChar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BSideKingChar_C_ReceiveTick");
static_assert(sizeof(BP_BSideKingChar_C_ReceiveTick) == 0x000004, "Wrong size on BP_BSideKingChar_C_ReceiveTick");
static_assert(offsetof(BP_BSideKingChar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BSideKingChar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

