#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideKnightChar

#include "Basic.hpp"

#include "BP_BSideKnightChar_classes.hpp"
#include "BP_BSideKnightChar_parameters.hpp"


namespace SDK
{

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ExecuteUbergraph_BP_BSideKnightChar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::ExecuteUbergraph_BP_BSideKnightChar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ExecuteUbergraph_BP_BSideKnightChar");

	Params::BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ResolveMegaArrowMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::ResolveMegaArrowMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ResolveMegaArrowMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ResolveMegaArrowServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::ResolveMegaArrowServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ResolveMegaArrowServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ResolveMegaArrow
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::ResolveMegaArrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ResolveMegaArrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.FinishGatling
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::FinishGatling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "FinishGatling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.SpecialDamageEffects
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PieceChar_C*                  Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::SpecialDamageEffects(class ABP_PieceChar_C* Enemy, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "SpecialDamageEffects");

	Params::BP_BSideKnightChar_C_SpecialDamageEffects Parms{};

	Parms.Enemy = Enemy;
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ToggleMegaArrow
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::ToggleMegaArrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ToggleMegaArrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ArrowRain
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::ArrowRain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ArrowRain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.FixGroundFiction
// (BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::FixGroundFiction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "FixGroundFiction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.InpActEvt_Fire_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::InpActEvt_Fire_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "InpActEvt_Fire_K2Node_InputActionEvent_0");

	Params::BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.InpActEvt_Fire_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::InpActEvt_Fire_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "InpActEvt_Fire_K2Node_InputActionEvent_1");

	Params::BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ShootEffectsAll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Endpoint                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::ShootEffectsAll(const struct FVector& Endpoint, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ShootEffectsAll");

	Params::BP_BSideKnightChar_C_ShootEffectsAll Parms{};

	Parms.Endpoint = std::move(Endpoint);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ShootDirection
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BSideKnightChar_C::ShootDirection(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "ShootDirection");

	Params::BP_BSideKnightChar_C_ShootDirection Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.MovementAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::MovementAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "MovementAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BSideKnightChar.BP_BSideKnightChar_C.MainAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BSideKnightChar_C::MainAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BSideKnightChar_C", "MainAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

