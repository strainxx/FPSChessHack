#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideKnightChar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ExecuteUbergraph_BP_BSideKnightChar
// 0x0148 (0x0148 - 0x0000)
struct BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_2;                          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoltAnimBP_C*                          K2Node_DynamicCast_AsBolt_Anim_BP;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Endpoint;                             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_1;                          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_Event_Enemy;                                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoltAnimBP_C*                          K2Node_DynamicCast_AsBolt_Anim_BP_1;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoltAnimBP_C*                          K2Node_DynamicCast_AsBolt_Anim_BP_2;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar) == 0x000008, "Wrong alignment on BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar");
static_assert(sizeof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar) == 0x000148, "Wrong size on BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, EntryPoint) == 0x000000, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_InputActionEvent_Key_1) == 0x000008, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_InputActionEvent_Key) == 0x000020, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, Temp_struct_Variable) == 0x000038, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_Event_Direction_2) == 0x000068, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_Event_Direction_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_AsBolt_Anim_BP) == 0x000080, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_AsBolt_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00008C, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_Event_Endpoint) == 0x0000B0, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_Event_Endpoint' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_Event_Direction_1) == 0x0000BC, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_HasAuthority_ReturnValue) == 0x0000C9, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_Event_Enemy) == 0x0000D0, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_Event_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_Event_Direction) == 0x0000D8, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_GetPlayerController_ReturnValue) == 0x0000F0, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_BooleanOR_ReturnValue) == 0x0000F8, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000100, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_AsBolt_Anim_BP_1) == 0x000108, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_AsBolt_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000118, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_AsBolt_Anim_BP_2) == 0x000120, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_AsBolt_Anim_BP_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, K2Node_CreateDelegate_OutputDelegate_1) == 0x00012C, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000140, "Member 'BP_BSideKnightChar_C_ExecuteUbergraph_BP_BSideKnightChar::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.SpecialDamageEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_BSideKnightChar_C_SpecialDamageEffects final
{
public:
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_SpecialDamageEffects) == 0x000008, "Wrong alignment on BP_BSideKnightChar_C_SpecialDamageEffects");
static_assert(sizeof(BP_BSideKnightChar_C_SpecialDamageEffects) == 0x000018, "Wrong size on BP_BSideKnightChar_C_SpecialDamageEffects");
static_assert(offsetof(BP_BSideKnightChar_C_SpecialDamageEffects, Enemy) == 0x000000, "Member 'BP_BSideKnightChar_C_SpecialDamageEffects::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_SpecialDamageEffects, Direction) == 0x000008, "Member 'BP_BSideKnightChar_C_SpecialDamageEffects::Direction' has a wrong offset!");

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.InpActEvt_Fire_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.InpActEvt_Fire_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BSideKnightChar_C_InpActEvt_Fire_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ShootEffectsAll
// 0x0018 (0x0018 - 0x0000)
struct BP_BSideKnightChar_C_ShootEffectsAll final
{
public:
	struct FVector                                Endpoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_ShootEffectsAll) == 0x000004, "Wrong alignment on BP_BSideKnightChar_C_ShootEffectsAll");
static_assert(sizeof(BP_BSideKnightChar_C_ShootEffectsAll) == 0x000018, "Wrong size on BP_BSideKnightChar_C_ShootEffectsAll");
static_assert(offsetof(BP_BSideKnightChar_C_ShootEffectsAll, Endpoint) == 0x000000, "Member 'BP_BSideKnightChar_C_ShootEffectsAll::Endpoint' has a wrong offset!");
static_assert(offsetof(BP_BSideKnightChar_C_ShootEffectsAll, Direction) == 0x00000C, "Member 'BP_BSideKnightChar_C_ShootEffectsAll::Direction' has a wrong offset!");

// Function BP_BSideKnightChar.BP_BSideKnightChar_C.ShootDirection
// 0x000C (0x000C - 0x0000)
struct BP_BSideKnightChar_C_ShootDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideKnightChar_C_ShootDirection) == 0x000004, "Wrong alignment on BP_BSideKnightChar_C_ShootDirection");
static_assert(sizeof(BP_BSideKnightChar_C_ShootDirection) == 0x00000C, "Wrong size on BP_BSideKnightChar_C_ShootDirection");
static_assert(offsetof(BP_BSideKnightChar_C_ShootDirection, Direction) == 0x000000, "Member 'BP_BSideKnightChar_C_ShootDirection::Direction' has a wrong offset!");

}

