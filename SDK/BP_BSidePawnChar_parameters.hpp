#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSidePawnChar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.ExecuteUbergraph_BP_BSidePawnChar
// 0x07D0 (0x07D0 - 0x0000)
struct BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0020(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0098(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x00C8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0110(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_11;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_12;              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_13;              // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_2;                          // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Swinging_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Swinging_2;                     // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Swinging_1;                     // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Swinging;                       // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LaunchVector;                   // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0xC];                                      // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Component;                      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0238(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0278(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetOverlappingComponents_OutOverlappingComponents; // 0x0318(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ThrownSword_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Input_Vector;                         // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_1;                          // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_1;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Direction;                            // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_2;                         // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_3;                         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_4;                         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_14;              // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_5;                         // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0484(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x051C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x05B0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Get_Launch_Vector_LaunchVector;           // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_6;                         // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_7;                         // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_8;                         // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F2[0x2];                                      // 0x05F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x3];                                      // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_9;                         // 0x0608(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_6;                       // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_2;        // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_4;    // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x065C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_5;                       // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_4;                       // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LastInput;                      // 0x06F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item_10;                        // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_3;                       // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_1;                    // 0x0738(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_2;                       // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction;                      // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761[0x3];                                      // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_1;                       // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target;                         // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Amount;                               // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_Event_Enemy;                                // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSidePawnChar_C*                    K2Node_DynamicCast_AsBP_BSide_Pawn_Char;           // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_15;              // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AB[0x5];                                      // 0x07AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBSidePawnAnimBP_C*                     K2Node_DynamicCast_AsBSide_Pawn_Anim_BP;           // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_16;              // 0x07C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x07C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar) == 0x000010, "Wrong alignment on BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar");
static_assert(sizeof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar) == 0x0007D0, "Wrong size on BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, EntryPoint) == 0x000000, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputKeyEvent_Key) == 0x000020, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_1) == 0x000058, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_2) == 0x000059, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_struct_Variable) == 0x000080, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputActionEvent_Key) == 0x000098, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_3) == 0x0000B0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_3) == 0x0000B8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_4) == 0x0000BC, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_4) == 0x0000C4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputActionEvent_Key_1) == 0x0000C8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_5) == 0x0000E0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_6) == 0x0000E1, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_4) == 0x0000E4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_7) == 0x0000E8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_struct_Variable_1) == 0x0000F0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_8) == 0x000108, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputActionEvent_Key_2) == 0x000110, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_9) == 0x000128, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputActionEvent_Key_3) == 0x000130, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_10) == 0x000148, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_11) == 0x000149, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_5) == 0x00014C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_5) == 0x000154, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_5) == 0x000158, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_6) == 0x00015C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_6) == 0x00016C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_6) == 0x000170, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_12) == 0x000174, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_13) == 0x000175, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CreateDelegate_OutputDelegate_2) == 0x000178, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_DeltaSeconds) == 0x000188, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Direction_2) == 0x00018C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Direction_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Swinging_3) == 0x000198, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Swinging_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Swinging_2) == 0x000199, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Swinging_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Swinging_1) == 0x00019A, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Swinging_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Swinging) == 0x00019B, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Swinging' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_7) == 0x00019C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001A0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_7) == 0x0001A4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_LaunchVector) == 0x0001A8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_LaunchVector' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetTransform_ReturnValue) == 0x0001C0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_8) == 0x0001F0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001F4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Component) == 0x0001F8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Actor) == 0x000200, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_AsBP_Destructible) == 0x000208, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_AsBP_Piece) == 0x000218, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000228, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_bSuccess_2) == 0x000230, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000231, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000238, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000240, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00024C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000258, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_OtherActor) == 0x000260, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_OtherComp) == 0x000268, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000270, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_bFromSweep) == 0x000274, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_ComponentBoundEvent_SweepResult) == 0x000278, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000304, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_8) == 0x000310, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetOverlappingComponents_OutOverlappingComponents) == 0x000318, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetOverlappingComponents_OutOverlappingComponents' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_1) == 0x000328, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x00032C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000338, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_ComposeRotators_ReturnValue) == 0x000344, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetForwardVector_ReturnValue) == 0x000350, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00035C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Variable) == 0x000368, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_VectorVector_ReturnValue) == 0x00036C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003B0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003B8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003C0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_9) == 0x0003C8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Input_Vector) == 0x0003CC, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Input_Vector' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetForwardVector_ReturnValue_1) == 0x0003D8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Direction_1) == 0x0003E4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_1) == 0x0003F0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_2) == 0x0003F8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003FC, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Direction) == 0x000400, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_2) == 0x000410, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_3) == 0x000418, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_2) == 0x00041C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputAxisEvent_AxisValue_1) == 0x000420, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_InputAxisEvent_AxisValue) == 0x000424, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_3) == 0x000428, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_4) == 0x000430, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_4) == 0x000438, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_5) == 0x00043C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_3) == 0x000440, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_14) == 0x000441, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000444, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000450, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00045C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x00045D, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_5) == 0x000460, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_6) == 0x000468, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_4) == 0x00046C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_7) == 0x000470, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_5) == 0x000474, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x000478, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000484, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x000510, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x00051C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_RandomFloatInRange_ReturnValue) == 0x0005A8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_MakeArray_Array) == 0x0005B0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Get_Launch_Vector_LaunchVector) == 0x0005C0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Get_Launch_Vector_LaunchVector' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_9) == 0x0005CC, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_6) == 0x0005D0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_7) == 0x0005D8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_8) == 0x0005E0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_8) == 0x0005E8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_9) == 0x0005EC, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_6) == 0x0005F0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_7) == 0x0005F1, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0005F4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_IsValid_ReturnValue_1) == 0x000600, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Array_Index_Variable_10) == 0x000604, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_9) == 0x000608, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetOwner_ReturnValue) == 0x000610, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_IsValid_ReturnValue_2) == 0x000618, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000620, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000628, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Add_ReturnValue) == 0x000630, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_6) == 0x000638, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_6' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000640, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetActorRotation_ReturnValue_2) == 0x00064C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_GetComponentRotation_ReturnValue_4) == 0x000650, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_GetComponentRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x00065C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_5) == 0x0006E8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_5' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_4) == 0x0006F0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_LastInput) == 0x0006F8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_LastInput' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Get_Item_10) == 0x000708, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_IsValid_ReturnValue_3) == 0x000710, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Length_ReturnValue_10) == 0x000714, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_8) == 0x000718, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetTimeSeconds_ReturnValue) == 0x00071C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000720, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x000724, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000728, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_3) == 0x000730, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_direction_1) == 0x000738, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_direction_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000744, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_2) == 0x000748, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_direction) == 0x000750, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_direction' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_9) == 0x00075C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_9) == 0x000760, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_10) == 0x000764, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target_1) == 0x000768, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_CustomEvent_Target) == 0x000770, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, Temp_int_Loop_Counter_Variable_10) == 0x000778, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Less_IntInt_ReturnValue_10) == 0x00077C, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Add_IntInt_ReturnValue_11) == 0x000780, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Amount) == 0x000784, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Enemy) == 0x000788, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_Event_Location) == 0x000790, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_AsBP_BSide_Pawn_Char) == 0x0007A0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_AsBP_BSide_Pawn_Char' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_bSuccess_3) == 0x0007A8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_RemoveItem_ReturnValue) == 0x0007A9, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_15) == 0x0007AA, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_GetAnimInstance_ReturnValue) == 0x0007B0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_AsBSide_Pawn_Anim_BP) == 0x0007B8, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_AsBSide_Pawn_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, K2Node_DynamicCast_bSuccess_4) == 0x0007C0, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0007C1, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_HasAuthority_ReturnValue_16) == 0x0007C2, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_HasAuthority_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Contains_ReturnValue) == 0x0007C3, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar, CallFunc_Array_Add_ReturnValue_1) == 0x0007C4, "Member 'BP_BSidePawnChar_C_ExecuteUbergraph_BP_BSidePawnChar::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.ReleaseBlockServer
// 0x0008 (0x0008 - 0x0000)
struct BP_BSidePawnChar_C_ReleaseBlockServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_ReleaseBlockServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_ReleaseBlockServer");
static_assert(sizeof(BP_BSidePawnChar_C_ReleaseBlockServer) == 0x000008, "Wrong size on BP_BSidePawnChar_C_ReleaseBlockServer");
static_assert(offsetof(BP_BSidePawnChar_C_ReleaseBlockServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_ReleaseBlockServer::Target' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.PressBlockServer
// 0x0008 (0x0008 - 0x0000)
struct BP_BSidePawnChar_C_PressBlockServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_PressBlockServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_PressBlockServer");
static_assert(sizeof(BP_BSidePawnChar_C_PressBlockServer) == 0x000008, "Wrong size on BP_BSidePawnChar_C_PressBlockServer");
static_assert(offsetof(BP_BSidePawnChar_C_PressBlockServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_PressBlockServer::Target' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.StopShootingServer
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_StopShootingServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_StopShootingServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_StopShootingServer");
static_assert(sizeof(BP_BSidePawnChar_C_StopShootingServer) == 0x000018, "Wrong size on BP_BSidePawnChar_C_StopShootingServer");
static_assert(offsetof(BP_BSidePawnChar_C_StopShootingServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_StopShootingServer::Target' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_StopShootingServer, Direction) == 0x000008, "Member 'BP_BSidePawnChar_C_StopShootingServer::Direction' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.StartShootingServer
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_StartShootingServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_StartShootingServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_StartShootingServer");
static_assert(sizeof(BP_BSidePawnChar_C_StartShootingServer) == 0x000018, "Wrong size on BP_BSidePawnChar_C_StartShootingServer");
static_assert(offsetof(BP_BSidePawnChar_C_StartShootingServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_StartShootingServer::Target' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_StartShootingServer, Direction) == 0x000008, "Member 'BP_BSidePawnChar_C_StartShootingServer::Direction' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetLastInput
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_SetLastInput final
{
public:
	struct FVector                                LastInput_0;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_SetLastInput) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_SetLastInput");
static_assert(sizeof(BP_BSidePawnChar_C_SetLastInput) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_SetLastInput");
static_assert(offsetof(BP_BSidePawnChar_C_SetLastInput, LastInput_0) == 0x000000, "Member 'BP_BSidePawnChar_C_SetLastInput::LastInput_0' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.EndJumpServer
// 0x0008 (0x0008 - 0x0000)
struct BP_BSidePawnChar_C_EndJumpServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_EndJumpServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_EndJumpServer");
static_assert(sizeof(BP_BSidePawnChar_C_EndJumpServer) == 0x000008, "Wrong size on BP_BSidePawnChar_C_EndJumpServer");
static_assert(offsetof(BP_BSidePawnChar_C_EndJumpServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_EndJumpServer::Target' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.JumpServer
// 0x0008 (0x0008 - 0x0000)
struct BP_BSidePawnChar_C_JumpServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_JumpServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_JumpServer");
static_assert(sizeof(BP_BSidePawnChar_C_JumpServer) == 0x000008, "Wrong size on BP_BSidePawnChar_C_JumpServer");
static_assert(offsetof(BP_BSidePawnChar_C_JumpServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_JumpServer::Target' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetRotationServer
// 0x0008 (0x0008 - 0x0000)
struct BP_BSidePawnChar_C_SetRotationServer final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_SetRotationServer) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_SetRotationServer");
static_assert(sizeof(BP_BSidePawnChar_C_SetRotationServer) == 0x000008, "Wrong size on BP_BSidePawnChar_C_SetRotationServer");
static_assert(offsetof(BP_BSidePawnChar_C_SetRotationServer, Target) == 0x000000, "Member 'BP_BSidePawnChar_C_SetRotationServer::Target' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpAxisEvt_Pitch_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_BSidePawnChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpAxisEvt_Yaw_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_BSidePawnChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSidePawnChar_C_BndEvt__BP_KingChar_Hitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.CheckForHits
// 0x0010 (0x0010 - 0x0000)
struct BP_BSidePawnChar_C_CheckForHits final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_CheckForHits) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_CheckForHits");
static_assert(sizeof(BP_BSidePawnChar_C_CheckForHits) == 0x000010, "Wrong size on BP_BSidePawnChar_C_CheckForHits");
static_assert(offsetof(BP_BSidePawnChar_C_CheckForHits, Component) == 0x000000, "Member 'BP_BSidePawnChar_C_CheckForHits::Component' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_CheckForHits, Actor) == 0x000008, "Member 'BP_BSidePawnChar_C_CheckForHits::Actor' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SpawnAlly
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_SpawnAlly final
{
public:
	struct FVector                                LaunchVector;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_SpawnAlly) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_SpawnAlly");
static_assert(sizeof(BP_BSidePawnChar_C_SpawnAlly) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_SpawnAlly");
static_assert(offsetof(BP_BSidePawnChar_C_SpawnAlly, LaunchVector) == 0x000000, "Member 'BP_BSidePawnChar_C_SpawnAlly::LaunchVector' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetSwinging
// 0x0001 (0x0001 - 0x0000)
struct BP_BSidePawnChar_C_SetSwinging final
{
public:
	bool                                          Swinging_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_SetSwinging) == 0x000001, "Wrong alignment on BP_BSidePawnChar_C_SetSwinging");
static_assert(sizeof(BP_BSidePawnChar_C_SetSwinging) == 0x000001, "Wrong size on BP_BSidePawnChar_C_SetSwinging");
static_assert(offsetof(BP_BSidePawnChar_C_SetSwinging, Swinging_0) == 0x000000, "Member 'BP_BSidePawnChar_C_SetSwinging::Swinging_0' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetSwingingMulti
// 0x0001 (0x0001 - 0x0000)
struct BP_BSidePawnChar_C_SetSwingingMulti final
{
public:
	bool                                          Swinging_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_SetSwingingMulti) == 0x000001, "Wrong alignment on BP_BSidePawnChar_C_SetSwingingMulti");
static_assert(sizeof(BP_BSidePawnChar_C_SetSwingingMulti) == 0x000001, "Wrong size on BP_BSidePawnChar_C_SetSwingingMulti");
static_assert(offsetof(BP_BSidePawnChar_C_SetSwingingMulti, Swinging_0) == 0x000000, "Member 'BP_BSidePawnChar_C_SetSwingingMulti::Swinging_0' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetSwingingServer
// 0x0001 (0x0001 - 0x0000)
struct BP_BSidePawnChar_C_SetSwingingServer final
{
public:
	bool                                          Swinging_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_SetSwingingServer) == 0x000001, "Wrong alignment on BP_BSidePawnChar_C_SetSwingingServer");
static_assert(sizeof(BP_BSidePawnChar_C_SetSwingingServer) == 0x000001, "Wrong size on BP_BSidePawnChar_C_SetSwingingServer");
static_assert(offsetof(BP_BSidePawnChar_C_SetSwingingServer, Swinging_0) == 0x000000, "Member 'BP_BSidePawnChar_C_SetSwingingServer::Swinging_0' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.DamageEnemy
// 0x0020 (0x0020 - 0x0000)
struct BP_BSidePawnChar_C_DamageEnemy final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_DamageEnemy) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_DamageEnemy");
static_assert(sizeof(BP_BSidePawnChar_C_DamageEnemy) == 0x000020, "Wrong size on BP_BSidePawnChar_C_DamageEnemy");
static_assert(offsetof(BP_BSidePawnChar_C_DamageEnemy, Amount) == 0x000000, "Member 'BP_BSidePawnChar_C_DamageEnemy::Amount' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_DamageEnemy, Enemy) == 0x000008, "Member 'BP_BSidePawnChar_C_DamageEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_DamageEnemy, Location) == 0x000010, "Member 'BP_BSidePawnChar_C_DamageEnemy::Location' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.StopShooting
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_StopShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_StopShooting) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_StopShooting");
static_assert(sizeof(BP_BSidePawnChar_C_StopShooting) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_StopShooting");
static_assert(offsetof(BP_BSidePawnChar_C_StopShooting, Direction) == 0x000000, "Member 'BP_BSidePawnChar_C_StopShooting::Direction' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.StartShooting
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_StartShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_StartShooting) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_StartShooting");
static_assert(sizeof(BP_BSidePawnChar_C_StartShooting) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_StartShooting");
static_assert(offsetof(BP_BSidePawnChar_C_StartShooting, Direction) == 0x000000, "Member 'BP_BSidePawnChar_C_StartShooting::Direction' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.MoveChar
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_MoveChar final
{
public:
	struct FVector                                Input_Vector;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_MoveChar) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_MoveChar");
static_assert(sizeof(BP_BSidePawnChar_C_MoveChar) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_MoveChar");
static_assert(offsetof(BP_BSidePawnChar_C_MoveChar, Input_Vector) == 0x000000, "Member 'BP_BSidePawnChar_C_MoveChar::Input_Vector' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.SetSwingingAll
// 0x0001 (0x0001 - 0x0000)
struct BP_BSidePawnChar_C_SetSwingingAll final
{
public:
	bool                                          Swinging_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_SetSwingingAll) == 0x000001, "Wrong alignment on BP_BSidePawnChar_C_SetSwingingAll");
static_assert(sizeof(BP_BSidePawnChar_C_SetSwingingAll) == 0x000001, "Wrong size on BP_BSidePawnChar_C_SetSwingingAll");
static_assert(offsetof(BP_BSidePawnChar_C_SetSwingingAll, Swinging_0) == 0x000000, "Member 'BP_BSidePawnChar_C_SetSwingingAll::Swinging_0' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.ShootDirection
// 0x000C (0x000C - 0x0000)
struct BP_BSidePawnChar_C_ShootDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_ShootDirection) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_ShootDirection");
static_assert(sizeof(BP_BSidePawnChar_C_ShootDirection) == 0x00000C, "Wrong size on BP_BSidePawnChar_C_ShootDirection");
static_assert(offsetof(BP_BSidePawnChar_C_ShootDirection, Direction) == 0x000000, "Member 'BP_BSidePawnChar_C_ShootDirection::Direction' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BSidePawnChar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_ReceiveTick");
static_assert(sizeof(BP_BSidePawnChar_C_ReceiveTick) == 0x000004, "Wrong size on BP_BSidePawnChar_C_ReceiveTick");
static_assert(offsetof(BP_BSidePawnChar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BSidePawnChar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpActEvt_Five_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_BSidePawnChar_C_InpActEvt_Five_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpActEvt_Block_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpActEvt_Block_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_BSidePawnChar_C_InpActEvt_Block_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.InpActEvt_Jump_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_BSidePawnChar_C_InpActEvt_Jump_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.MainAbility
// 0x0050 (0x0050 - 0x0000)
struct BP_BSidePawnChar_C_MainAbility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBSidePawnAnimBP_C*                     K2Node_DynamicCast_AsBSide_Pawn_Anim_BP;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBSidePawnAnimBP_C*                     K2Node_DynamicCast_AsBSide_Pawn_Anim_BP_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_MainAbility) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_MainAbility");
static_assert(sizeof(BP_BSidePawnChar_C_MainAbility) == 0x000050, "Wrong size on BP_BSidePawnChar_C_MainAbility");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BSidePawnChar_C_MainAbility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BSidePawnChar_C_MainAbility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_HasAuthority_ReturnValue_1) == 0x00000D, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, K2Node_DynamicCast_AsBSide_Pawn_Anim_BP) == 0x000020, "Member 'BP_BSidePawnChar_C_MainAbility::K2Node_DynamicCast_AsBSide_Pawn_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BSidePawnChar_C_MainAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000030, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, K2Node_DynamicCast_AsBSide_Pawn_Anim_BP_1) == 0x000040, "Member 'BP_BSidePawnChar_C_MainAbility::K2Node_DynamicCast_AsBSide_Pawn_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_BSidePawnChar_C_MainAbility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_MainAbility, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_BSidePawnChar_C_MainAbility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.Get Launch Vector
// 0x008C (0x008C - 0x0000)
struct BP_BSidePawnChar_C_Get_Launch_Vector final
{
public:
	struct FVector                                LaunchVector;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVec;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LaunchIndex;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutItem;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSidePawnChar_C_Get_Launch_Vector) == 0x000004, "Wrong alignment on BP_BSidePawnChar_C_Get_Launch_Vector");
static_assert(sizeof(BP_BSidePawnChar_C_Get_Launch_Vector) == 0x00008C, "Wrong size on BP_BSidePawnChar_C_Get_Launch_Vector");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, LaunchVector) == 0x000000, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::LaunchVector' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, LaunchVec) == 0x00000C, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::LaunchVec' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, LaunchIndex) == 0x000018, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::LaunchIndex' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, Temp_int_Variable) == 0x00001C, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_Array_Random_OutItem) == 0x000024, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_Array_Random_OutIndex) == 0x000028, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_GetUpVector_ReturnValue) == 0x000044, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_RotateAngleAxis_ReturnValue) == 0x000050, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x00005C, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, K2Node_Select_Default) == 0x000068, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_Get_Launch_Vector, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_BSidePawnChar_C_Get_Launch_Vector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BSidePawnChar.BP_BSidePawnChar_C.OnRep_Allies
// 0x0028 (0x0028 - 0x0000)
struct BP_BSidePawnChar_C_OnRep_Allies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSidePawnChar_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSidePawnChar_C_OnRep_Allies) == 0x000008, "Wrong alignment on BP_BSidePawnChar_C_OnRep_Allies");
static_assert(sizeof(BP_BSidePawnChar_C_OnRep_Allies) == 0x000028, "Wrong size on BP_BSidePawnChar_C_OnRep_Allies");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BSidePawnChar_C_OnRep_Allies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BSidePawnChar_C_OnRep_Allies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSidePawnChar_C_OnRep_Allies, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'BP_BSidePawnChar_C_OnRep_Allies::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

