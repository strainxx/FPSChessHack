#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideQueenChar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.ExecuteUbergraph_BP_BSideQueenChar
// 0x06E0 (0x06E0 - 0x0000)
struct BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_As_BP_Piece_1;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0040(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWhipHitbox_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWhipHitbox_C*                          K2Node_DynamicCast_AsWhip_Hitbox;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWhipHitbox_C*                          K2Node_DynamicCast_AsWhip_Hitbox_1;                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_WhipTrackedComponent;           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBSideQueenAnimBP_C*                    K2Node_DynamicCast_AsBSide_Queen_Anim_BP;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Direction;                            // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF[0x1];                                      // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0224(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_GrapplePoint;                   // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWhipHitbox_C*                          K2Node_DynamicCast_AsWhip_Hitbox_2;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_NewLocation_2;                  // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0480(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x04C0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54E[0x2];                                      // 0x054E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0578(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_As_BP_Piece;                    // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0594(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x05A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NewLocation_1;                  // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NewLocation;                    // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x05E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x05E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x05E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x060C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FalloffFromDistance_Damage;               // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_InputPin;                       // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0xC];                                      // 0x0674(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0680(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x06B8(0x0010)(ZeroConstructor, NoDestructor)
	class AWhipHitbox_C*                          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar) == 0x000010, "Wrong alignment on BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar");
static_assert(sizeof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar) == 0x0006E0, "Wrong size on BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, EntryPoint) == 0x000000, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_As_BP_Piece_1) == 0x000008, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_As_BP_Piece_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OverlappedComponent) == 0x000020, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OtherActor_1) == 0x000028, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OtherComp_1) == 0x000030, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OtherBodyIndex) == 0x000038, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_bFromSweep) == 0x00003C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_SweepResult) == 0x000040, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_ComponentHasTag_ReturnValue) == 0x000100, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000108, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x000110, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsBP_Destructible) == 0x000118, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000128, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsBP_Piece) == 0x000138, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsWhip_Hitbox) == 0x000158, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsWhip_Hitbox' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_3) == 0x000160, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_GetOwner_ReturnValue_1) == 0x000168, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsWhip_Hitbox_1) == 0x000170, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsWhip_Hitbox_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_4) == 0x000178, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue) == 0x000179, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00017C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_1) == 0x000188, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_WhipTrackedComponent) == 0x000190, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_WhipTrackedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_GetSocketLocation_ReturnValue) == 0x000198, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0001A4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001B0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_GetAnimInstance_ReturnValue) == 0x0001C0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001C8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsBSide_Queen_Anim_BP) == 0x0001D8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsBSide_Queen_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_5) == 0x0001E0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_Direction) == 0x0001E4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001F0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_2) == 0x0001FC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001FD, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_SwitchEnum_CmpSuccess) == 0x0001FE, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_HitComponent) == 0x000200, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OtherActor) == 0x000208, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_OtherComp) == 0x000210, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_NormalImpulse) == 0x000218, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_Hit) == 0x000224, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_bBlockingHit) == 0x0002B0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002B1, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_Time) == 0x0002B4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_Distance) == 0x0002B8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_Location) == 0x0002BC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_Normal) == 0x0002D4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_ImpactNormal) == 0x0002E0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_PhysMat) == 0x0002F0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_HitActor) == 0x0002F8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_HitComponent) == 0x000300, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_HitBoneName) == 0x000308, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_HitItem) == 0x000310, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_FaceIndex) == 0x000314, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_TraceStart) == 0x000318, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakHitResult_TraceEnd) == 0x000324, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_GetOwner_ReturnValue_2) == 0x000330, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_GrapplePoint) == 0x000338, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_GrapplePoint' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_AsWhip_Hitbox_2) == 0x000348, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_AsWhip_Hitbox_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_DynamicCast_bSuccess_6) == 0x000350, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_HasAuthority_ReturnValue) == 0x000351, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_DeltaSeconds) == 0x000354, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Conv_VectorToString_ReturnValue) == 0x000358, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000368, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000374, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Vector_Distance_ReturnValue) == 0x000380, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Less_FloatFloat_ReturnValue) == 0x000384, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_VSize_ReturnValue) == 0x000388, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Normal_ReturnValue) == 0x00038C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_HasAuthority_ReturnValue_1) == 0x000398, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_HasAuthority_ReturnValue_2) == 0x000399, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x00039C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003A8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0003B4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Normal_ReturnValue_1) == 0x0003C0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003CC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Cross_VectorVector_ReturnValue) == 0x0003D8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Normal_ReturnValue_2) == 0x0003E4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0003F0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003FC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Normal_ReturnValue_3) == 0x000408, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Add_VectorVector_ReturnValue) == 0x000414, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000420, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x00042C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_X) == 0x000438, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_Y) == 0x00043C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_Z) == 0x000440, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000444, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000450, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000454, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000460, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00046C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00046D, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_NewLocation_2) == 0x000470, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_NewLocation_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_MyComp) == 0x000480, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_Other) == 0x000488, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_OtherComp) == 0x000490, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_bSelfMoved) == 0x000498, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_HitLocation) == 0x00049C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_HitNormal) == 0x0004A8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_NormalImpulse) == 0x0004B4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_Event_Hit) == 0x0004C0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsMovingOnGround_ReturnValue) == 0x00054C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BooleanOR_ReturnValue) == 0x00054D, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000550, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BooleanAND_ReturnValue) == 0x00055C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000560, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x00056C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CreateDelegate_OutputDelegate) == 0x000578, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_As_BP_Piece) == 0x000588, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_As_BP_Piece' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_3) == 0x000590, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000594, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0005A0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_HasAuthority_ReturnValue_3) == 0x0005AC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0005B0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0005BC, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_NewLocation_1) == 0x0005C8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_NewLocation_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_NewLocation) == 0x0005D4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_NewLocation' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_4) == 0x0005E0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0005E1, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0005E2, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsServer_ReturnValue) == 0x0005E3, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsServer_ReturnValue_1) == 0x0005E4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005E5, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0005E6, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_5) == 0x0005E7, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x0005E8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x0005F4, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000600, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Normal_ReturnValue_4) == 0x00060C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Vector_Distance_ReturnValue_1) == 0x000618, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x00061C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_FalloffFromDistance_Damage) == 0x000628, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_FalloffFromDistance_Damage' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_X_1) == 0x00062C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_Y_1) == 0x000630, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BreakVector_Z_1) == 0x000634, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_MakeVector_ReturnValue) == 0x000638, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000644, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CustomEvent_InputPin) == 0x000650, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x00065C, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x000668, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_MakeTransform_ReturnValue_1) == 0x000680, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0006B0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, K2Node_CreateDelegate_OutputDelegate_1) == 0x0006B8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0006C8, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar, CallFunc_IsValid_ReturnValue_6) == 0x0006D0, "Member 'BP_BSideQueenChar_C_ExecuteUbergraph_BP_BSideQueenChar::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.PlaybackFireWhip
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_PlaybackFireWhip final
{
public:
	struct FVector                                InputPin;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_PlaybackFireWhip) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_PlaybackFireWhip");
static_assert(sizeof(BP_BSideQueenChar_C_PlaybackFireWhip) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_PlaybackFireWhip");
static_assert(offsetof(BP_BSideQueenChar_C_PlaybackFireWhip, InputPin) == 0x000000, "Member 'BP_BSideQueenChar_C_PlaybackFireWhip::InputPin' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.SetTargetServer
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_SetTargetServer final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_SetTargetServer) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_SetTargetServer");
static_assert(sizeof(BP_BSideQueenChar_C_SetTargetServer) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_SetTargetServer");
static_assert(offsetof(BP_BSideQueenChar_C_SetTargetServer, NewLocation) == 0x000000, "Member 'BP_BSideQueenChar_C_SetTargetServer::NewLocation' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.SetTargetMulti
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_SetTargetMulti final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_SetTargetMulti) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_SetTargetMulti");
static_assert(sizeof(BP_BSideQueenChar_C_SetTargetMulti) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_SetTargetMulti");
static_assert(offsetof(BP_BSideQueenChar_C_SetTargetMulti, NewLocation) == 0x000000, "Member 'BP_BSideQueenChar_C_SetTargetMulti::NewLocation' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.GrabCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BSideQueenChar_C_GrabCharacter final
{
public:
	class ABP_PieceChar_C*                        As_BP_Piece;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_GrabCharacter) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_GrabCharacter");
static_assert(sizeof(BP_BSideQueenChar_C_GrabCharacter) == 0x000008, "Wrong size on BP_BSideQueenChar_C_GrabCharacter");
static_assert(offsetof(BP_BSideQueenChar_C_GrabCharacter, As_BP_Piece) == 0x000000, "Member 'BP_BSideQueenChar_C_GrabCharacter::As_BP_Piece' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.SetTargetLocation
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_SetTargetLocation final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_SetTargetLocation) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_SetTargetLocation");
static_assert(sizeof(BP_BSideQueenChar_C_SetTargetLocation) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_SetTargetLocation");
static_assert(offsetof(BP_BSideQueenChar_C_SetTargetLocation, NewLocation) == 0x000000, "Member 'BP_BSideQueenChar_C_SetTargetLocation::NewLocation' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.WhipStartTracking
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_WhipStartTracking final
{
public:
	struct FVector                                GrapplePoint_0;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_WhipStartTracking) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_WhipStartTracking");
static_assert(sizeof(BP_BSideQueenChar_C_WhipStartTracking) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_WhipStartTracking");
static_assert(offsetof(BP_BSideQueenChar_C_WhipStartTracking, GrapplePoint_0) == 0x000000, "Member 'BP_BSideQueenChar_C_WhipStartTracking::GrapplePoint_0' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.HitBreak_Event
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideQueenChar_C_HitBreak_Event final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideQueenChar_C_HitBreak_Event) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_HitBreak_Event");
static_assert(sizeof(BP_BSideQueenChar_C_HitBreak_Event) == 0x0000B0, "Wrong size on BP_BSideQueenChar_C_HitBreak_Event");
static_assert(offsetof(BP_BSideQueenChar_C_HitBreak_Event, HitComponent) == 0x000000, "Member 'BP_BSideQueenChar_C_HitBreak_Event::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitBreak_Event, OtherActor) == 0x000008, "Member 'BP_BSideQueenChar_C_HitBreak_Event::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitBreak_Event, OtherComp) == 0x000010, "Member 'BP_BSideQueenChar_C_HitBreak_Event::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitBreak_Event, NormalImpulse) == 0x000018, "Member 'BP_BSideQueenChar_C_HitBreak_Event::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitBreak_Event, Hit) == 0x000024, "Member 'BP_BSideQueenChar_C_HitBreak_Event::Hit' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.WhipTrackObject
// 0x0008 (0x0008 - 0x0000)
struct BP_BSideQueenChar_C_WhipTrackObject final
{
public:
	class UPrimitiveComponent*                    WhipTrackedComponent_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_WhipTrackObject) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_WhipTrackObject");
static_assert(sizeof(BP_BSideQueenChar_C_WhipTrackObject) == 0x000008, "Wrong size on BP_BSideQueenChar_C_WhipTrackObject");
static_assert(offsetof(BP_BSideQueenChar_C_WhipTrackObject, WhipTrackedComponent_0) == 0x000000, "Member 'BP_BSideQueenChar_C_WhipTrackObject::WhipTrackedComponent_0' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.HitHitEvent
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideQueenChar_C_HitHitEvent final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideQueenChar_C_HitHitEvent) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_HitHitEvent");
static_assert(sizeof(BP_BSideQueenChar_C_HitHitEvent) == 0x0000B0, "Wrong size on BP_BSideQueenChar_C_HitHitEvent");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, OverlappedComponent) == 0x000000, "Member 'BP_BSideQueenChar_C_HitHitEvent::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, OtherActor) == 0x000008, "Member 'BP_BSideQueenChar_C_HitHitEvent::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, OtherComp) == 0x000010, "Member 'BP_BSideQueenChar_C_HitHitEvent::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, OtherBodyIndex) == 0x000018, "Member 'BP_BSideQueenChar_C_HitHitEvent::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, bFromSweep) == 0x00001C, "Member 'BP_BSideQueenChar_C_HitHitEvent::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_HitHitEvent, SweepResult) == 0x000020, "Member 'BP_BSideQueenChar_C_HitHitEvent::SweepResult' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.GrabPieces
// 0x0008 (0x0008 - 0x0000)
struct BP_BSideQueenChar_C_GrabPieces final
{
public:
	class ABP_Piece_C*                            As_BP_Piece;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_GrabPieces) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_GrabPieces");
static_assert(sizeof(BP_BSideQueenChar_C_GrabPieces) == 0x000008, "Wrong size on BP_BSideQueenChar_C_GrabPieces");
static_assert(offsetof(BP_BSideQueenChar_C_GrabPieces, As_BP_Piece) == 0x000000, "Member 'BP_BSideQueenChar_C_GrabPieces::As_BP_Piece' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BSideQueenChar_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideQueenChar_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_BSideQueenChar_C_ReceiveHit");
static_assert(sizeof(BP_BSideQueenChar_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_BSideQueenChar_C_ReceiveHit");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_BSideQueenChar_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, Other) == 0x000008, "Member 'BP_BSideQueenChar_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_BSideQueenChar_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_BSideQueenChar_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_BSideQueenChar_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_BSideQueenChar_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_BSideQueenChar_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_BSideQueenChar_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BSideQueenChar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_ReceiveTick");
static_assert(sizeof(BP_BSideQueenChar_C_ReceiveTick) == 0x000004, "Wrong size on BP_BSideQueenChar_C_ReceiveTick");
static_assert(offsetof(BP_BSideQueenChar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BSideQueenChar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.ShootDirection
// 0x000C (0x000C - 0x0000)
struct BP_BSideQueenChar_C_ShootDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideQueenChar_C_ShootDirection) == 0x000004, "Wrong alignment on BP_BSideQueenChar_C_ShootDirection");
static_assert(sizeof(BP_BSideQueenChar_C_ShootDirection) == 0x00000C, "Wrong size on BP_BSideQueenChar_C_ShootDirection");
static_assert(offsetof(BP_BSideQueenChar_C_ShootDirection, Direction) == 0x000000, "Member 'BP_BSideQueenChar_C_ShootDirection::Direction' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.MainAbility
// 0x0001 (0x0001 - 0x0000)
struct BP_BSideQueenChar_C_MainAbility final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSideQueenChar_C_MainAbility) == 0x000001, "Wrong alignment on BP_BSideQueenChar_C_MainAbility");
static_assert(sizeof(BP_BSideQueenChar_C_MainAbility) == 0x000001, "Wrong size on BP_BSideQueenChar_C_MainAbility");
static_assert(offsetof(BP_BSideQueenChar_C_MainAbility, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_BSideQueenChar_C_MainAbility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BSideQueenChar.BP_BSideQueenChar_C.MovementAbility
// 0x0001 (0x0001 - 0x0000)
struct BP_BSideQueenChar_C_MovementAbility final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSideQueenChar_C_MovementAbility) == 0x000001, "Wrong alignment on BP_BSideQueenChar_C_MovementAbility");
static_assert(sizeof(BP_BSideQueenChar_C_MovementAbility) == 0x000001, "Wrong size on BP_BSideQueenChar_C_MovementAbility");
static_assert(offsetof(BP_BSideQueenChar_C_MovementAbility, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_BSideQueenChar_C_MovementAbility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

