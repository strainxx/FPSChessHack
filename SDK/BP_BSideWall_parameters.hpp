#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSideWall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BSideWall.BP_BSideWall_C.ExecuteUbergraph_BP_BSideWall
// 0x0520 (0x0520 - 0x0000)
struct BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_4;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_4;          // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class ABP_Destructible_C* Destructible)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x00E8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0198(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0248(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSideRookChar_C*                    K2Node_DynamicCast_AsBP_BSide_Rook_Char;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0380(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Spawn_Transform_Location;       // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Spawn_Transform_Rotation;       // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_ParentChar;                     // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSideWall_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0488(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_516[0x2];                                      // 0x0516(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Destructible_C*                     K2Node_CustomEvent_Destructible;                   // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall) == 0x000010, "Wrong alignment on BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall");
static_assert(sizeof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall) == 0x000520, "Wrong size on BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, EntryPoint) == 0x000000, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000008, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000010, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000018, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000020, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_bFromSweep_4) == 0x000024, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_bFromSweep_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_SweepResult_4) == 0x000028, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_SweepResult_4' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x0000C8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0000D0, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0000D8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0000E0, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x0000E4, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_SweepResult_3) == 0x0000E8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000178, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000180, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000188, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000190, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x000194, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000198, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000228, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000230, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000238, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000240, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000244, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000248, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002D4, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002E0, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002EC, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_DynamicCast_AsBP_BSide_Rook_Char) == 0x0002F8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_DynamicCast_AsBP_BSide_Rook_Char' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_X) == 0x000304, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Y) == 0x000308, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Z) == 0x00030C, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_GetMovementComponent_ReturnValue) == 0x000310, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_MakeVector_ReturnValue) == 0x000318, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000324, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_X_1) == 0x000330, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Y_1) == 0x000334, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Z_1) == 0x000338, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Normal_ReturnValue) == 0x00033C, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000348, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Dot_VectorVector_ReturnValue) == 0x00034C, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000350, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_X_2) == 0x000354, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Y_2) == 0x000358, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakVector_Z_2) == 0x00035C, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000360, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_MakeVector_ReturnValue_1) == 0x000364, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000370, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_GetTransform_ReturnValue) == 0x000380, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0003B0, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakTransform_Location) == 0x0003BC, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakTransform_Rotation) == 0x0003C8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BreakTransform_Scale) == 0x0003D4, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_CustomEvent_Spawn_Transform_Location) == 0x0003E0, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_CustomEvent_Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_CustomEvent_Spawn_Transform_Rotation) == 0x0003EC, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_CustomEvent_Spawn_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_CustomEvent_ParentChar) == 0x0003F8, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_CustomEvent_ParentChar' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Add_VectorVector_ReturnValue) == 0x000400, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_MakeTransform_ReturnValue) == 0x000410, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000440, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000448, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_FinishSpawningActor_ReturnValue) == 0x000458, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_IsServer_ReturnValue) == 0x000460, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000468, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherActor) == 0x000470, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherComp) == 0x000478, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000480, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_bFromSweep) == 0x000484, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_ComponentBoundEvent_SweepResult) == 0x000488, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000514, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, CallFunc_IsServer_ReturnValue_1) == 0x000515, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall, K2Node_CustomEvent_Destructible) == 0x000518, "Member 'BP_BSideWall_C_ExecuteUbergraph_BP_BSideWall::K2Node_CustomEvent_Destructible' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.TurnOffBox
// 0x0008 (0x0008 - 0x0000)
struct BP_BSideWall_C_TurnOffBox final
{
public:
	class ABP_Destructible_C*                     Destructible;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideWall_C_TurnOffBox) == 0x000008, "Wrong alignment on BP_BSideWall_C_TurnOffBox");
static_assert(sizeof(BP_BSideWall_C_TurnOffBox) == 0x000008, "Wrong size on BP_BSideWall_C_TurnOffBox");
static_assert(offsetof(BP_BSideWall_C_TurnOffBox, Destructible) == 0x000000, "Member 'BP_BSideWall_C_TurnOffBox::Destructible' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.SpawnWallServer
// 0x0020 (0x0020 - 0x0000)
struct BP_BSideWall_C_SpawnWallServer final
{
public:
	struct FVector                                Spawn_Transform_Location;                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Spawn_Transform_Rotation;                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PieceChar_C*                        ParentChar_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSideWall_C_SpawnWallServer) == 0x000008, "Wrong alignment on BP_BSideWall_C_SpawnWallServer");
static_assert(sizeof(BP_BSideWall_C_SpawnWallServer) == 0x000020, "Wrong size on BP_BSideWall_C_SpawnWallServer");
static_assert(offsetof(BP_BSideWall_C_SpawnWallServer, Spawn_Transform_Location) == 0x000000, "Member 'BP_BSideWall_C_SpawnWallServer::Spawn_Transform_Location' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_SpawnWallServer, Spawn_Transform_Rotation) == 0x00000C, "Member 'BP_BSideWall_C_SpawnWallServer::Spawn_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_SpawnWallServer, ParentChar_0) == 0x000018, "Member 'BP_BSideWall_C_SpawnWallServer::ParentChar_0' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.HandleCollision
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideWall_C_HandleCollision final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideWall_C_HandleCollision) == 0x000008, "Wrong alignment on BP_BSideWall_C_HandleCollision");
static_assert(sizeof(BP_BSideWall_C_HandleCollision) == 0x0000B0, "Wrong size on BP_BSideWall_C_HandleCollision");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, OverlappedComponent) == 0x000000, "Member 'BP_BSideWall_C_HandleCollision::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, OtherActor) == 0x000008, "Member 'BP_BSideWall_C_HandleCollision::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, OtherComp) == 0x000010, "Member 'BP_BSideWall_C_HandleCollision::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, OtherBodyIndex) == 0x000018, "Member 'BP_BSideWall_C_HandleCollision::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, bFromSweep) == 0x00001C, "Member 'BP_BSideWall_C_HandleCollision::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_HandleCollision, SweepResult) == 0x000020, "Member 'BP_BSideWall_C_HandleCollision::SweepResult' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box3_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BSideWall.BP_BSideWall_C.BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BSideWall_C_BndEvt__BP_BSideWall_Box1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

