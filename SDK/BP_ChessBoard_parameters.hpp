#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChessBoard

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PieceTypes_structs.hpp"
#include "PieceInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "Move_structs.hpp"


namespace SDK::Params
{

// Function BP_ChessBoard.BP_ChessBoard_C.ExecuteUbergraph_BP_ChessBoard
// 0x19F0 (0x19F0 - 0x0000)
struct BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0xC];                                       // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_1;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_2;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_3;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_4;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_5;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_6;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_7;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_8;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_9;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_10;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_11;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_12;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_13;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_14;               // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_14;       // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_15;               // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_15;       // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0xC];                                      // 0x0344(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Rook_C*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Knight_C*                           CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8[0x8];                                      // 0x03E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x03F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Knight_C*                           CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Rook_C*                             CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0490(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x04C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Bishop_C*                           CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_King_C*                             CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528[0x8];                                      // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0530(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0560(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Queen_C*                            CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Bishop_C*                           CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C8[0x8];                                      // 0x05C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x05D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x0600(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Rook_C*                             CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Knight_C*                           CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0670(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x06A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Knight_C*                           CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Rook_C*                             CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x06F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_13;                // 0x06FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708[0x8];                                      // 0x0708(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x0710(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_13;             // 0x0740(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12; // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13; // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Bishop_C*                           CallFunc_FinishSpawningActor_ReturnValue_12;       // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_King_C*                             CallFunc_FinishSpawningActor_ReturnValue_13;       // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_14;                // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_15;                // 0x079C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A8[0x8];                                      // 0x07A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_14;             // 0x07B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_15;             // 0x07E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14; // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15; // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Queen_C*                            CallFunc_FinishSpawningActor_ReturnValue_14;       // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Bishop_C*                           CallFunc_FinishSpawningActor_ReturnValue_15;       // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance;       // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849[0x3];                                      // 0x0849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPieceInfo                             CallFunc_Array_Get_Item;                           // 0x084C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_862[0x6];                                      // 0x0862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_16;               // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871[0x3];                                      // 0x0871(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_16;       // 0x0874(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_16;                         // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x088C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_898[0x8];                                      // 0x0898(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x08A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_16;                // 0x08D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD[0x3];                                      // 0x08DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_16;             // 0x08E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_1;                         // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D[0x3];                                      // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D[0x3];                                      // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x094A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B[0x5];                                      // 0x094B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x3];                                      // 0x0979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x097C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0988(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0994(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x09A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x09AC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39[0x3];                                      // 0x0A39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0A3C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0ACA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ACB[0x5];                                      // 0x0ACB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_10;                       // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_6;                       // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PlayerMove;                     // 0x0AE0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Animated;                       // 0x0AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Queued;                         // 0x0AE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AE3[0x1];                                      // 0x0AE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_17;       // 0x0AE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_17;                         // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_17;                         // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_17;                         // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0AFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AFD[0x3];                                      // 0x0AFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Piece_C*>                    K2Node_CustomEvent_Array_1;                        // 0x0B00(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_17;                // 0x0B10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1C[0x4];                                      // 0x0B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_2;                         // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0B28(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB5[0x3];                                      // 0x0BB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Piece_C*>                    K2Node_CustomEvent_Array;                          // 0x0BC8(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_WhiteUlt;                       // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Player1Piece;                   // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Player2Piece;                   // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_ContestedSquare;                // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BFC[0x4];                                      // 0x0BFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_9;                        // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           K2Node_CustomEvent_Owner;                          // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Player1_2;                      // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           K2Node_CustomEvent_Contested_Square;               // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_2;          // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        CallFunc_SpawnPieceChar_PieceChar;                 // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0C40(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_PieceChar_2;                    // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_5;                       // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0C61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C62[0x6];                                      // 0x0C62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0C68(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item_3;                         // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0C84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C85[0x3];                                      // 0x0C85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_4;                       // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C99[0x7];                                      // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_PieceChar_1;                    // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0CB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0CB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0CB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0CB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB7[0x1];                                      // 0x0CB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_8;                        // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_18;                // 0x0CE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0CEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF9[0x7];                                      // 0x0CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_17;             // 0x0D00(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16; // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x0D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3C[0x4];                                      // 0x0D3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_FinishSpawningActor_ReturnValue_16;       // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_7;                        // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0D5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5D[0x3];                                      // 0x0D5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x0D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_VsCutscene_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0D68(0x0010)(ReferenceParm)
	class ABP_VsCutscene_C*                       CallFunc_Array_Get_Item_4;                         // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0D80(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0DB0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0E3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3D[0x3];                                      // 0x0E3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0E40(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0ECC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ECD[0x3];                                      // 0x0ECD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_1_1;                      // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_2_1;                      // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0EE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0EF8(0x0018)()
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F11[0x7];                                      // 0x0F11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0F18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0F28(0x0018)()
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0F49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4A[0x2];                                      // 0x0F4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0F4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x0F50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0F5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0F5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5E[0x2];                                      // 0x0F5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_18;       // 0x0F60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6D[0x3];                                      // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_1;          // 0x0F70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_19;       // 0x0F7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue_1;              // 0x0F89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8A[0x6];                                      // 0x0F8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     K2Node_CustomEvent_ActorClass;                     // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0F98(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0FB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB5[0x3];                                      // 0x0FB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Destructible_C*>             CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0FB8(0x0010)(ReferenceParm)
	class ABP_Destructible_C*                     CallFunc_Array_Get_Item_6;                         // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0FD8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_7;                         // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF4[0x4];                                      // 0x0FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0FF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1001[0x7];                                     // 0x1001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x1008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1011[0x7];                                     // 0x1011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_PieceChar;                      // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x1020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x1030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1039[0x3];                                     // 0x1039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x1048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104C[0x4];                                     // 0x104C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item_8;                         // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1058[0x8];                                     // 0x1058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x1060(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1095[0xB];                                     // 0x1095(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x10A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_3;     // 0x10D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_transform;                      // 0x1100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Time;                           // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1134[0xC];                                     // 0x1134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x1140(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item_9;                         // 0x1170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x1178(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1204[0xC];                                     // 0x1204(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue_1;                      // 0x1210(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_4;     // 0x1240(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x1270(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_12FC[0x4];                                     // 0x12FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item_10;                        // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorBeingDestroyed_ReturnValue;        // 0x1308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1309[0x7];                                     // 0x1309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_5;     // 0x1310(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorBeingDestroyed_ReturnValue_1;      // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1342[0x2];                                     // 0x1342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x1344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1353[0x1];                                     // 0x1353(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x1354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x1358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x135C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x1364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1365[0x3];                                     // 0x1365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_17;               // 0x1368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_20;       // 0x1370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x137C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_18;                         // 0x1380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_18;                         // 0x1384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_18;                         // 0x1388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_19;                // 0x138C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1398[0x8];                                     // 0x1398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_18;             // 0x13A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17; // 0x13D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_3;                       // 0x13D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_6;                        // 0x13E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Pawn_C*                             CallFunc_FinishSpawningActor_ReturnValue_17;       // 0x13E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x13F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F1[0x3];                                     // 0x13F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x13F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x1400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_19;                         // 0x140C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_19;                         // 0x1410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_19;                         // 0x1414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x1418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x1424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x1428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_20;                // 0x1434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_20;                         // 0x1440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_20;                         // 0x1444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_20;                         // 0x1448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x144C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x1458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_2;          // 0x145C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_21;                // 0x1468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x1474(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x1500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NobodyTurn_3;                   // 0x1501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1502[0x6];                                     // 0x1502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_5;                        // 0x1508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_4;                        // 0x1510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_2;                       // 0x1518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Black;                          // 0x1520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_BSide;                          // 0x1521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x1523(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorLocalRotation_SweepHitResult;  // 0x1524(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UClass*                                 Temp_class_Variable;                               // 0x15B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x15B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x15BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x15C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NobodyTurn_2;                   // 0x15C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NobodyTurn_1;                   // 0x15C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NobodyTurn;                     // 0x15C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_FPS;                            // 0x15C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C6[0x2];                                     // 0x15C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGramaphone_C*>                  CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x15C8(0x0010)(ReferenceParm)
	class AGramaphone_C*                          CallFunc_Array_Get_Item_11;                        // 0x15D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x15E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Black_Win;                      // 0x15E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E9[0x3];                                     // 0x15E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x15EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x15F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x15F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x15FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15FD[0x3];                                     // 0x15FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square_18;               // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_21;       // 0x1608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x1614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_21;                         // 0x1618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_21;                         // 0x161C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_21;                         // 0x1620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_22;                // 0x1624(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_19;             // 0x1630(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18; // 0x1660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Pawn_C*                             CallFunc_FinishSpawningActor_ReturnValue_18;       // 0x1668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x1670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x1674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1675[0x3];                                     // 0x1675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x1678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_167C[0x4];                                     // 0x167C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_12;                        // 0x1680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_13;                        // 0x1688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x1691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1692[0x2];                                     // 0x1692(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x1694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x1698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x169C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x169D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169E[0x2];                                     // 0x169E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x16A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance_1;     // 0x16A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x16B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B1[0x7];                                     // 0x16B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x16B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x16C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x16C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16C2[0x6];                                     // 0x16C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x16C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x16D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFPSChessGameState_C*                   K2Node_DynamicCast_AsFPSChess_Game_State;          // 0x16D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x16E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E1[0x7];                                     // 0x16E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFPSChessGameState_C*                   K2Node_DynamicCast_AsFPSChess_Game_State_1;        // 0x16E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x16F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F1[0x7];                                     // 0x16F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKillcamRecorder_C*                     K2Node_CustomEvent_Target_1;                       // 0x16F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UKillcamRecorder_C*                     K2Node_CustomEvent_Target;                         // 0x1700(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_3;                        // 0x1708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1711[0x7];                                     // 0x1711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x1718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFPSChessGameState_C*                   K2Node_DynamicCast_AsFPSChess_Game_State_2;        // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1729[0x3];                                     // 0x1729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x172C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x1730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1731[0x3];                                     // 0x1731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x1734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x1738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x173C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x1740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x1744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x1748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1749[0x3];                                     // 0x1749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x174C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x1750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_14;                        // 0x1758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x1760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x1764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1765[0x3];                                     // 0x1765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_Array_Get_Item_15;                        // 0x1768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1771[0x3];                                     // 0x1771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x1774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x1778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1779[0x7];                                     // 0x1779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_Array_Get_Item_16;                        // 0x1780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x1788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x178C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_178D[0x3];                                     // 0x178D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_17;                        // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x1798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x179C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179D[0x3];                                     // 0x179D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x17A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x17A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x17A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x17AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x17B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x17B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_23;                // 0x17BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x17C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x17D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D5[0xB];                                     // 0x17D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_20;             // 0x17E0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_19; // 0x1810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181C[0x4];                                     // 0x181C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_FinishSpawningActor_ReturnValue_19;       // 0x1820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x1828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_22;       // 0x182C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1839[0x3];                                     // 0x1839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_23;       // 0x183C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square_1;                       // 0x1848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_2;                        // 0x1850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMove                                  CallFunc_Array_Get_Item_18;                        // 0x1858(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x186C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_186D[0x3];                                     // 0x186D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece_1;                        // 0x1870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           K2Node_CustomEvent_square;                         // 0x1878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMove                                  K2Node_MakeStruct_Move;                            // 0x1880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x1890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1894[0x4];                                     // 0x1894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_3;                             // 0x1898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InCombat;                       // 0x18A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x18A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A2[0x6];                                     // 0x18A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_Array_Get_Item_19;                        // 0x18A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x18B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x18B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B5[0x3];                                     // 0x18B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_20;                        // 0x18B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_21;                        // 0x18C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x18C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x18CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18CD[0x3];                                     // 0x18CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x18D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x18D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D5[0x3];                                     // 0x18D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AKillcamSystem_C*                       CallFunc_GetActorOfClass_ReturnValue;              // 0x18D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x18E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFPSChessGameState_C*                   K2Node_DynamicCast_AsFPSChess_Game_State_3;        // 0x18E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x18F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18F1[0x3];                                     // 0x18F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x18F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_22;                        // 0x18F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1901[0x7];                                     // 0x1901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message_1;                      // 0x1908(0x0018)()
	bool                                          K2Node_CustomEvent_Player1_1;                      // 0x1920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1921[0x7];                                     // 0x1921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x1928(0x0018)()
	bool                                          K2Node_CustomEvent_Player1;                        // 0x1940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1941[0x7];                                     // 0x1941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_4;                             // 0x1948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x1950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1954[0x4];                                     // 0x1954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_23;                        // 0x1958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable;                                // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1969[0x3];                                     // 0x1969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x196C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x1970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_20; // 0x1978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_20;       // 0x1980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x1988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198C[0x4];                                     // 0x198C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x1990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x1999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199A[0x2];                                     // 0x199A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x199C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x19A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_KingVerification_WhiteWon;                // 0x19A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_KingVerification_BlackWon;                // 0x19A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A3[0x5];                                     // 0x19A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_CustomEvent_Piece;                          // 0x19A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x19B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B1[0x7];                                     // 0x19B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PieceChar_C*>                CallFunc_GetAllActorsOfClass_OutActors_5;          // 0x19B8(0x0010)(ReferenceParm)
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item_24;                        // 0x19C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x19D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x19D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x19D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D6[0x2];                                     // 0x19D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x19D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x19DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19DD[0x3];                                     // 0x19DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_Select_Default_1;                           // 0x19E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard) == 0x000010, "Wrong alignment on BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard");
static_assert(sizeof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard) == 0x0019F0, "Wrong size on BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, EntryPoint) == 0x000000, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_3) == 0x000028, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_4) == 0x000038, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_5) == 0x00003C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_4) == 0x000040, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_4) == 0x000044, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_6) == 0x000048, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_5) == 0x00004C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_5) == 0x000050, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_HasAuthority_ReturnValue_1) == 0x000054, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_6) == 0x000058, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_6) == 0x00005C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_7) == 0x000060, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_7) == 0x000064, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_7) == 0x000068, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_8) == 0x00006C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_8) == 0x000070, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_8) == 0x000074, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_9) == 0x000078, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_9) == 0x00007C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_HasAuthority_ReturnValue_2) == 0x000080, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_10) == 0x000084, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_10) == 0x000088, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_9) == 0x00008C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_11) == 0x000090, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_11) == 0x000094, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_10) == 0x000098, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_12) == 0x00009C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_11) == 0x0000A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000A4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetActorScale3D_ReturnValue) == 0x0000A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_12) == 0x0000F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square) == 0x0000F8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_1) == 0x000100, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000114, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X) == 0x000120, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y) == 0x000124, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z) == 0x000128, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_1) == 0x00012C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_1) == 0x000130, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_1) == 0x000134, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_13) == 0x000138, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_2) == 0x000140, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000148, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_3) == 0x000158, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_2) == 0x000160, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_2) == 0x000164, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_2) == 0x000168, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00016C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_4) == 0x000178, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_3) == 0x000180, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_3) == 0x000184, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_3) == 0x000188, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x00018C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_5) == 0x000198, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_4) == 0x0001A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_4) == 0x0001A4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_4) == 0x0001A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0001AC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_13) == 0x0001B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_5) == 0x0001BC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_5) == 0x0001C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_5) == 0x0001C4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_13) == 0x0001C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_6) == 0x0001D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_7) == 0x0001D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0001E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0001EC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_6) == 0x0001F8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_6) == 0x0001FC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_6) == 0x000200, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_7) == 0x000204, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_7) == 0x000208, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_7) == 0x00020C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_8) == 0x000210, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_9) == 0x000218, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x000220, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x00022C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_8) == 0x000238, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_8) == 0x00023C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_8) == 0x000240, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_9) == 0x000244, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_9) == 0x000248, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_9) == 0x00024C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_14) == 0x000250, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_10) == 0x000258, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x000260, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_14) == 0x00026C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_10) == 0x000270, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_10) == 0x000274, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_10) == 0x000278, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_11) == 0x000280, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_12) == 0x000288, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x000290, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x00029C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_11) == 0x0002A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_11) == 0x0002AC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_11) == 0x0002B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_12) == 0x0002B4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_12) == 0x0002B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_12) == 0x0002BC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_13) == 0x0002C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_14) == 0x0002C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x0002CC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_13) == 0x0002D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_13) == 0x0002DC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_13) == 0x0002E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_15) == 0x0002E4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_14) == 0x0002E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_14) == 0x0002F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_15) == 0x000300, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_14) == 0x000308, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_14) == 0x00030C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_14) == 0x000310, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_15) == 0x000314, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_15) == 0x000320, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_15) == 0x000324, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_15) == 0x000328, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue) == 0x00032C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_1) == 0x000338, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue) == 0x000350, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_1) == 0x000380, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0003B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0003C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_2) == 0x0003D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_3) == 0x0003DC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_2) == 0x0003F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_3) == 0x000420, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000450, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000458, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000460, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000468, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_4) == 0x000470, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_5) == 0x00047C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_4) == 0x000490, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_5) == 0x0004C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x0004F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x0004F8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000500, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000508, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_6) == 0x000510, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_7) == 0x00051C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_6) == 0x000530, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_7) == 0x000560, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000590, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x000598, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x0005A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x0005A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_8) == 0x0005B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_9) == 0x0005BC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_8) == 0x0005D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_9) == 0x000600, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x000630, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x000638, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x000640, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x000648, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_10) == 0x000650, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_11) == 0x00065C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_10) == 0x000670, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_11) == 0x0006A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x0006D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x0006D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x0006E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x0006E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_12) == 0x0006F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_13) == 0x0006FC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_12) == 0x000710, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_13) == 0x000740, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12) == 0x000770, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13) == 0x000778, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_12) == 0x000780, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_13) == 0x000788, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_14) == 0x000790, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_15) == 0x00079C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_14) == 0x0007B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_15) == 0x0007E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14) == 0x000810, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15) == 0x000818, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_14) == 0x000820, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_15) == 0x000828, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_15) == 0x000830, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_15) == 0x000834, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameInstance_ReturnValue) == 0x000838, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_Instance) == 0x000840, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess) == 0x000848, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item) == 0x00084C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue) == 0x00085C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue) == 0x000860, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Not_PreBool_ReturnValue) == 0x000861, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_16) == 0x000868, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000870, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_16) == 0x000874, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_16) == 0x000880, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_16) == 0x000884, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_16) == 0x000888, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetActorScale3D_ReturnValue_1) == 0x00088C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetTransform_ReturnValue_1) == 0x0008A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_16) == 0x0008D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_bool_Variable) == 0x0008DC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_16) == 0x0008E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_16) == 0x000910, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_17) == 0x000914, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_Event_DeltaSeconds) == 0x000918, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable) == 0x00091C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_1) == 0x000920, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000928, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue) == 0x00092C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue) == 0x000930, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000934, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000938, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00093C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_18) == 0x000940, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_1) == 0x000944, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_1) == 0x000948, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_1) == 0x000949, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_2) == 0x00094A, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetController_ReturnValue) == 0x000950, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetController_ReturnValue_1) == 0x000958, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsPlayer_Controller) == 0x000960, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_1) == 0x000968, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x000970, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_2) == 0x000978, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00097C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000988, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000994, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0009A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0009AC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000A38, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000A3C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x000AC8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_3) == 0x000AC9, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_4) == 0x000ACA, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_10) == 0x000AD0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_6) == 0x000AD8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_PlayerMove) == 0x000AE0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_PlayerMove' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Animated) == 0x000AE1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Animated' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Queued) == 0x000AE2, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Queued' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_17) == 0x000AE4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_17) == 0x000AF0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_17) == 0x000AF4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_17) == 0x000AF8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_5) == 0x000AFC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Array_1) == 0x000B00, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_17) == 0x000B10, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_2) == 0x000B20, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000B28, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000BB4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_2) == 0x000BB8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_16) == 0x000BBC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_2) == 0x000BC0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Array) == 0x000BC8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Array' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_WhiteUlt) == 0x000BD8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_WhiteUlt' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Player1Piece) == 0x000BE0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Player1Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Player2Piece) == 0x000BE8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Player2Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_ContestedSquare) == 0x000BF0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_ContestedSquare' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_3) == 0x000BF8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_9) == 0x000C00, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Owner) == 0x000C08, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Player1_2) == 0x000C10, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Player1_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Contested_Square) == 0x000C18, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Contested_Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetController_ReturnValue_2) == 0x000C20, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsPlayer_Controller_2) == 0x000C28, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_3) == 0x000C30, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_SpawnPieceChar_PieceChar) == 0x000C38, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_SpawnPieceChar_PieceChar' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CreateDelegate_OutputDelegate) == 0x000C40, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_PieceChar_2) == 0x000C50, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_PieceChar_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_5) == 0x000C58, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_6) == 0x000C60, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000C61, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000C68, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_3) == 0x000C78, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_4) == 0x000C80, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_3) == 0x000C84, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetController_ReturnValue_3) == 0x000C88, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_4) == 0x000C90, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_7) == 0x000C98, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_PieceChar_1) == 0x000CA0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_PieceChar_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector2D_X) == 0x000CA8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector2D_Y) == 0x000CAC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000CB0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000CB1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000CB2, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Not_PreBool_ReturnValue_1) == 0x000CB3, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanAND_ReturnValue) == 0x000CB4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_RemoveItem_ReturnValue) == 0x000CB5, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000CB6, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_8) == 0x000CB8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_1) == 0x000CC0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue) == 0x000CC4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000CC8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000CCC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000CD0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000CD4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector2D_ReturnValue) == 0x000CD8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_18) == 0x000CE0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_TransformLocation_ReturnValue) == 0x000CEC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000CF8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_17) == 0x000D00, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16) == 0x000D30, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_19) == 0x000D38, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_16) == 0x000D40, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_1) == 0x000D48, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_7) == 0x000D50, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_2) == 0x000D58, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_8) == 0x000D5C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_16) == 0x000D60, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_20) == 0x000D64, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors) == 0x000D68, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_4) == 0x000D78, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000D80, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000DB0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000E3C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000E40, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000ECC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_1_1) == 0x000ED0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_1_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_2_1) == 0x000ED8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_2_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000EE0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetMaterial_ReturnValue) == 0x000EF0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_StringToText_ReturnValue) == 0x000EF8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_SetStaticMesh_ReturnValue) == 0x000F10, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000F18, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000F28, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetMaterial_ReturnValue_1) == 0x000F40, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000F48, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_4) == 0x000F49, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Subtract_IntInt_ReturnValue) == 0x000F4C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetLocationAtTime_ReturnValue) == 0x000F50, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_TeleportTo_ReturnValue) == 0x000F5C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_9) == 0x000F5D, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_18) == 0x000F60, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_10) == 0x000F6C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetLocationAtTime_ReturnValue_1) == 0x000F70, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetLocationAtTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_19) == 0x000F7C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_11) == 0x000F88, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_TeleportTo_ReturnValue_1) == 0x000F89, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_TeleportTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_ActorClass) == 0x000F90, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_ActorClass' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000F98, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_5) == 0x000FA8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_5) == 0x000FB0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_5) == 0x000FB4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000FB8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_6) == 0x000FC8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_6) == 0x000FD0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000FD8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_7) == 0x000FE8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_7) == 0x000FF0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000FF8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_6) == 0x001000, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsPrimitive_Component) == 0x001008, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_4) == 0x001010, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_PieceChar) == 0x001018, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_PieceChar' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CreateDelegate_OutputDelegate_1) == 0x001020, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x001030, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanAND_ReturnValue_1) == 0x001038, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_3) == 0x00103C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_4) == 0x001040, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_5) == 0x001044, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_6) == 0x001048, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_8) == 0x001050, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x001060, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_8) == 0x001090, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Greater_IntInt_ReturnValue) == 0x001094, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x0010A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue_3) == 0x0010D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_transform) == 0x001100, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_transform' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Time) == 0x001130, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_TLerp_ReturnValue) == 0x001140, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_9) == 0x001170, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x001178, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_TLerp_ReturnValue_1) == 0x001210, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_TLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue_4) == 0x001240, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x001270, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_10) == 0x001300, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsActorBeingDestroyed_ReturnValue) == 0x001308, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsActorBeingDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentToWorld_ReturnValue_5) == 0x001310, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentToWorld_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsActorBeingDestroyed_ReturnValue_1) == 0x001340, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsActorBeingDestroyed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanOR_ReturnValue) == 0x001341, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeRotator_ReturnValue) == 0x001344, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_12) == 0x001350, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_13) == 0x001351, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanAND_ReturnValue_2) == 0x001352, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_2) == 0x001354, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x001358, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector2D_ReturnValue_1) == 0x00135C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x001364, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_17) == 0x001368, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_20) == 0x001370, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_21) == 0x00137C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_18) == 0x001380, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_18) == 0x001384, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_18) == 0x001388, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_19) == 0x00138C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_18) == 0x0013A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17) == 0x0013D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_3) == 0x0013D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_6) == 0x0013E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_17) == 0x0013E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_14) == 0x0013F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0013F4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x001400, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_19) == 0x00140C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_19) == 0x001410, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_19) == 0x001414, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_VectorVector_ReturnValue) == 0x001418, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x001424, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Divide_VectorFloat_ReturnValue) == 0x001428, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_20) == 0x001434, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_20) == 0x001440, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_20) == 0x001444, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_20) == 0x001448, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x00144C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x001458, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetLocationAtTime_ReturnValue_2) == 0x00145C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetLocationAtTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_21) == 0x001468, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x001474, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x001500, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_NobodyTurn_3) == 0x001501, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_NobodyTurn_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_5) == 0x001508, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_4) == 0x001510, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_2) == 0x001518, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Black) == 0x001520, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Black' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_BSide) == 0x001521, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_BSide' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_15) == 0x001522, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_16) == 0x001523, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_AddActorLocalRotation_SweepHitResult) == 0x001524, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_AddActorLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable) == 0x0015B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_7) == 0x0015B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_8) == 0x0015BC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Not_PreBool_ReturnValue_2) == 0x0015C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Not_PreBool_ReturnValue_3) == 0x0015C1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_NobodyTurn_2) == 0x0015C2, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_NobodyTurn_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_NobodyTurn_1) == 0x0015C3, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_NobodyTurn_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_NobodyTurn) == 0x0015C4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_NobodyTurn' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_FPS) == 0x0015C5, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_FPS' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x0015C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_11) == 0x0015D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable_1) == 0x0015E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Black_Win) == 0x0015E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Black_Win' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_3) == 0x0015EC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0015F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector2D_ReturnValue_2) == 0x0015F4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0015FC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetSquareByIndex_Square_18) == 0x001600, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetSquareByIndex_Square_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_21) == 0x001608, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_22) == 0x001614, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_X_21) == 0x001618, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_X_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Y_21) == 0x00161C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Y_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BreakVector_Z_21) == 0x001620, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BreakVector_Z_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_22) == 0x001624, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_19) == 0x001630, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18) == 0x001660, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_18) == 0x001668, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_17) == 0x001670, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_7) == 0x001674, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_23) == 0x001678, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_12) == 0x001680, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_13) == 0x001688, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_17) == 0x001690, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_18) == 0x001691, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_9) == 0x001694, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_10) == 0x001698, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_8) == 0x00169C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_9) == 0x00169D, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameInstance_ReturnValue_1) == 0x0016A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_Instance_1) == 0x0016A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_5) == 0x0016B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetPlayerController_ReturnValue) == 0x0016B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Not_PreBool_ReturnValue_4) == 0x0016C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanAND_ReturnValue_3) == 0x0016C1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameState_ReturnValue) == 0x0016C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameState_ReturnValue_1) == 0x0016D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_State) == 0x0016D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_State' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_6) == 0x0016E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_State_1) == 0x0016E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_State_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_7) == 0x0016F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Target_1) == 0x0016F8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Target) == 0x001700, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_3) == 0x001708, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_19) == 0x001710, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameState_ReturnValue_2) == 0x001718, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_State_2) == 0x001720, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_State_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_8) == 0x001728, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_11) == 0x00172C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_10) == 0x001730, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_4) == 0x001734, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x001738, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x00173C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x001740, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x001744, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x001748, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_24) == 0x00174C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable_2) == 0x001750, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_14) == 0x001758, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_12) == 0x001760, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_11) == 0x001764, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_15) == 0x001768, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_20) == 0x001770, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_13) == 0x001774, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_12) == 0x001778, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_16) == 0x001780, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_14) == 0x001788, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_13) == 0x00178C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_17) == 0x001790, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_15) == 0x001798, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_14) == 0x00179C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_5) == 0x0017A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0017A4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x0017A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x0017AC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x0017B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector2D_ReturnValue_3) == 0x0017B4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeVector_ReturnValue_23) == 0x0017BC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeVector_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_TransformLocation_ReturnValue_1) == 0x0017C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x0017D4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_MakeTransform_ReturnValue_20) == 0x0017E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_MakeTransform_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_19) == 0x001810, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_25) == 0x001818, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_19) == 0x001820, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_9) == 0x001828, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_22) == 0x00182C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_21) == 0x001838, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_K2_GetActorLocation_ReturnValue_23) == 0x00183C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_K2_GetActorLocation_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square_1) == 0x001848, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_2) == 0x001850, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_18) == 0x001858, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_16) == 0x001868, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00186C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece_1) == 0x001870, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_square) == 0x001878, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_MakeStruct_Move) == 0x001880, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_MakeStruct_Move' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Add_ReturnValue_10) == 0x001890, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable_3) == 0x001898, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_InCombat) == 0x0018A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_InCombat' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_HasAuthority_ReturnValue_3) == 0x0018A1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_19) == 0x0018A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_17) == 0x0018B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_15) == 0x0018B4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_20) == 0x0018B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_21) == 0x0018C0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_18) == 0x0018C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_16) == 0x0018CC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_19) == 0x0018D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_17) == 0x0018D4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetActorOfClass_ReturnValue) == 0x0018D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetGameState_ReturnValue_3) == 0x0018E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsFPSChess_Game_State_3) == 0x0018E8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsFPSChess_Game_State_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_9) == 0x0018F0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_17) == 0x0018F4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_22) == 0x0018F8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_22) == 0x001900, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Message_1) == 0x001908, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Player1_1) == 0x001920, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Player1_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Message) == 0x001928, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Player1) == 0x001940, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Player1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable_4) == 0x001948, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Array_Index_Variable_18) == 0x001950, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_23) == 0x001958, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_class_Variable_5) == 0x001960, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_byte_Variable) == 0x001968, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_6) == 0x00196C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_Select_Default) == 0x001970, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_20) == 0x001978, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_FinishSpawningActor_ReturnValue_20) == 0x001980, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_FinishSpawningActor_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Loop_Counter_Variable_18) == 0x001988, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_AsBP_Piece) == 0x001990, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_DynamicCast_bSuccess_10) == 0x001998, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_18) == 0x001999, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Add_IntInt_ReturnValue_26) == 0x00199C, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0019A0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_KingVerification_WhiteWon) == 0x0019A1, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_KingVerification_WhiteWon' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_KingVerification_BlackWon) == 0x0019A2, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_KingVerification_BlackWon' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_CustomEvent_Piece) == 0x0019A8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_CustomEvent_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_23) == 0x0019B0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_GetAllActorsOfClass_OutActors_5) == 0x0019B8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_GetAllActorsOfClass_OutActors_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Get_Item_24) == 0x0019C8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Array_Length_ReturnValue_20) == 0x0019D0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_Less_IntInt_ReturnValue_19) == 0x0019D4, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_IsValid_ReturnValue_24) == 0x0019D5, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, Temp_int_Variable_7) == 0x0019D8, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, CallFunc_BooleanOR_ReturnValue_1) == 0x0019DC, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard, K2Node_Select_Default_1) == 0x0019E0, "Member 'BP_ChessBoard_C_ExecuteUbergraph_BP_ChessBoard::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.EnablePieceInvisible
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_EnablePieceInvisible final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_EnablePieceInvisible) == 0x000008, "Wrong alignment on BP_ChessBoard_C_EnablePieceInvisible");
static_assert(sizeof(BP_ChessBoard_C_EnablePieceInvisible) == 0x000008, "Wrong size on BP_ChessBoard_C_EnablePieceInvisible");
static_assert(offsetof(BP_ChessBoard_C_EnablePieceInvisible, Piece) == 0x000000, "Member 'BP_ChessBoard_C_EnablePieceInvisible::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SendMessageToPlayersCombat
// 0x0020 (0x0020 - 0x0000)
struct BP_ChessBoard_C_SendMessageToPlayersCombat final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Player1;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SendMessageToPlayersCombat) == 0x000008, "Wrong alignment on BP_ChessBoard_C_SendMessageToPlayersCombat");
static_assert(sizeof(BP_ChessBoard_C_SendMessageToPlayersCombat) == 0x000020, "Wrong size on BP_ChessBoard_C_SendMessageToPlayersCombat");
static_assert(offsetof(BP_ChessBoard_C_SendMessageToPlayersCombat, Message) == 0x000000, "Member 'BP_ChessBoard_C_SendMessageToPlayersCombat::Message' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SendMessageToPlayersCombat, Player1) == 0x000018, "Member 'BP_ChessBoard_C_SendMessageToPlayersCombat::Player1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SendMessageToPlayers
// 0x0020 (0x0020 - 0x0000)
struct BP_ChessBoard_C_SendMessageToPlayers final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Player1;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SendMessageToPlayers) == 0x000008, "Wrong alignment on BP_ChessBoard_C_SendMessageToPlayers");
static_assert(sizeof(BP_ChessBoard_C_SendMessageToPlayers) == 0x000020, "Wrong size on BP_ChessBoard_C_SendMessageToPlayers");
static_assert(offsetof(BP_ChessBoard_C_SendMessageToPlayers, Message) == 0x000000, "Member 'BP_ChessBoard_C_SendMessageToPlayers::Message' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SendMessageToPlayers, Player1) == 0x000018, "Member 'BP_ChessBoard_C_SendMessageToPlayers::Player1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.Set In Combat Multi
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_Set_In_Combat_Multi final
{
public:
	bool                                          InCombat_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_Set_In_Combat_Multi) == 0x000001, "Wrong alignment on BP_ChessBoard_C_Set_In_Combat_Multi");
static_assert(sizeof(BP_ChessBoard_C_Set_In_Combat_Multi) == 0x000001, "Wrong size on BP_ChessBoard_C_Set_In_Combat_Multi");
static_assert(offsetof(BP_ChessBoard_C_Set_In_Combat_Multi, InCombat_0) == 0x000000, "Member 'BP_ChessBoard_C_Set_In_Combat_Multi::InCombat_0' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.Enqueue Move
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_Enqueue_Move final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           Square;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_Enqueue_Move) == 0x000008, "Wrong alignment on BP_ChessBoard_C_Enqueue_Move");
static_assert(sizeof(BP_ChessBoard_C_Enqueue_Move) == 0x000010, "Wrong size on BP_ChessBoard_C_Enqueue_Move");
static_assert(offsetof(BP_ChessBoard_C_Enqueue_Move, Piece) == 0x000000, "Member 'BP_ChessBoard_C_Enqueue_Move::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_Enqueue_Move, Square) == 0x000008, "Member 'BP_ChessBoard_C_Enqueue_Move::Square' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.MoveToMovepointMulti
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_MoveToMovepointMulti final
{
public:
	class ABP_Square_C*                           Square;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            Piece;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_MoveToMovepointMulti) == 0x000008, "Wrong alignment on BP_ChessBoard_C_MoveToMovepointMulti");
static_assert(sizeof(BP_ChessBoard_C_MoveToMovepointMulti) == 0x000010, "Wrong size on BP_ChessBoard_C_MoveToMovepointMulti");
static_assert(offsetof(BP_ChessBoard_C_MoveToMovepointMulti, Square) == 0x000000, "Member 'BP_ChessBoard_C_MoveToMovepointMulti::Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MoveToMovepointMulti, Piece) == 0x000008, "Member 'BP_ChessBoard_C_MoveToMovepointMulti::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DisablePieceLocal
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_DisablePieceLocal final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DisablePieceLocal) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DisablePieceLocal");
static_assert(sizeof(BP_ChessBoard_C_DisablePieceLocal) == 0x000008, "Wrong size on BP_ChessBoard_C_DisablePieceLocal");
static_assert(offsetof(BP_ChessBoard_C_DisablePieceLocal, Piece) == 0x000000, "Member 'BP_ChessBoard_C_DisablePieceLocal::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetProtagonistClient
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_SetProtagonistClient final
{
public:
	class UKillcamRecorder_C*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_SetProtagonistClient) == 0x000008, "Wrong alignment on BP_ChessBoard_C_SetProtagonistClient");
static_assert(sizeof(BP_ChessBoard_C_SetProtagonistClient) == 0x000008, "Wrong size on BP_ChessBoard_C_SetProtagonistClient");
static_assert(offsetof(BP_ChessBoard_C_SetProtagonistClient, Target) == 0x000000, "Member 'BP_ChessBoard_C_SetProtagonistClient::Target' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.Set Protagonist Multi
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_Set_Protagonist_Multi final
{
public:
	class UKillcamRecorder_C*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_Set_Protagonist_Multi) == 0x000008, "Wrong alignment on BP_ChessBoard_C_Set_Protagonist_Multi");
static_assert(sizeof(BP_ChessBoard_C_Set_Protagonist_Multi) == 0x000008, "Wrong size on BP_ChessBoard_C_Set_Protagonist_Multi");
static_assert(offsetof(BP_ChessBoard_C_Set_Protagonist_Multi, Target) == 0x000000, "Member 'BP_ChessBoard_C_Set_Protagonist_Multi::Target' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.EndGame
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_EndGame final
{
public:
	bool                                          Black_Win;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_EndGame) == 0x000001, "Wrong alignment on BP_ChessBoard_C_EndGame");
static_assert(sizeof(BP_ChessBoard_C_EndGame) == 0x000001, "Wrong size on BP_ChessBoard_C_EndGame");
static_assert(offsetof(BP_ChessBoard_C_EndGame, Black_Win) == 0x000000, "Member 'BP_ChessBoard_C_EndGame::Black_Win' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetMusicPosition
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_SetMusicPosition final
{
public:
	bool                                          FPS;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SetMusicPosition) == 0x000001, "Wrong alignment on BP_ChessBoard_C_SetMusicPosition");
static_assert(sizeof(BP_ChessBoard_C_SetMusicPosition) == 0x000001, "Wrong size on BP_ChessBoard_C_SetMusicPosition");
static_assert(offsetof(BP_ChessBoard_C_SetMusicPosition, FPS) == 0x000000, "Member 'BP_ChessBoard_C_SetMusicPosition::FPS' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetNobodyTurnAll
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_SetNobodyTurnAll final
{
public:
	bool                                          NobodyTurn_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SetNobodyTurnAll) == 0x000001, "Wrong alignment on BP_ChessBoard_C_SetNobodyTurnAll");
static_assert(sizeof(BP_ChessBoard_C_SetNobodyTurnAll) == 0x000001, "Wrong size on BP_ChessBoard_C_SetNobodyTurnAll");
static_assert(offsetof(BP_ChessBoard_C_SetNobodyTurnAll, NobodyTurn_0) == 0x000000, "Member 'BP_ChessBoard_C_SetNobodyTurnAll::NobodyTurn_0' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetNobodyTurnMulti
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_SetNobodyTurnMulti final
{
public:
	bool                                          NobodyTurn_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SetNobodyTurnMulti) == 0x000001, "Wrong alignment on BP_ChessBoard_C_SetNobodyTurnMulti");
static_assert(sizeof(BP_ChessBoard_C_SetNobodyTurnMulti) == 0x000001, "Wrong size on BP_ChessBoard_C_SetNobodyTurnMulti");
static_assert(offsetof(BP_ChessBoard_C_SetNobodyTurnMulti, NobodyTurn_0) == 0x000000, "Member 'BP_ChessBoard_C_SetNobodyTurnMulti::NobodyTurn_0' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetNobodyTurnServer
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_SetNobodyTurnServer final
{
public:
	bool                                          NobodyTurn_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SetNobodyTurnServer) == 0x000001, "Wrong alignment on BP_ChessBoard_C_SetNobodyTurnServer");
static_assert(sizeof(BP_ChessBoard_C_SetNobodyTurnServer) == 0x000001, "Wrong size on BP_ChessBoard_C_SetNobodyTurnServer");
static_assert(offsetof(BP_ChessBoard_C_SetNobodyTurnServer, NobodyTurn_0) == 0x000000, "Member 'BP_ChessBoard_C_SetNobodyTurnServer::NobodyTurn_0' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.InitializePiece
// 0x0018 (0x0018 - 0x0000)
struct BP_ChessBoard_C_InitializePiece final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           Square;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Black;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BSide;                                             // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_InitializePiece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_InitializePiece");
static_assert(sizeof(BP_ChessBoard_C_InitializePiece) == 0x000018, "Wrong size on BP_ChessBoard_C_InitializePiece");
static_assert(offsetof(BP_ChessBoard_C_InitializePiece, Piece) == 0x000000, "Member 'BP_ChessBoard_C_InitializePiece::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitializePiece, Square) == 0x000008, "Member 'BP_ChessBoard_C_InitializePiece::Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitializePiece, Black) == 0x000010, "Member 'BP_ChessBoard_C_InitializePiece::Black' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitializePiece, BSide) == 0x000011, "Member 'BP_ChessBoard_C_InitializePiece::BSide' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.TurnPieceBlackMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_TurnPieceBlackMulti final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_TurnPieceBlackMulti) == 0x000008, "Wrong alignment on BP_ChessBoard_C_TurnPieceBlackMulti");
static_assert(sizeof(BP_ChessBoard_C_TurnPieceBlackMulti) == 0x000008, "Wrong size on BP_ChessBoard_C_TurnPieceBlackMulti");
static_assert(offsetof(BP_ChessBoard_C_TurnPieceBlackMulti, Piece) == 0x000000, "Member 'BP_ChessBoard_C_TurnPieceBlackMulti::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SetNobodyTurn
// 0x0001 (0x0001 - 0x0000)
struct BP_ChessBoard_C_SetNobodyTurn final
{
public:
	bool                                          NobodyTurn_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_SetNobodyTurn) == 0x000001, "Wrong alignment on BP_ChessBoard_C_SetNobodyTurn");
static_assert(sizeof(BP_ChessBoard_C_SetNobodyTurn) == 0x000001, "Wrong size on BP_ChessBoard_C_SetNobodyTurn");
static_assert(offsetof(BP_ChessBoard_C_SetNobodyTurn, NobodyTurn_0) == 0x000000, "Member 'BP_ChessBoard_C_SetNobodyTurn::NobodyTurn_0' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.MoveToMovepoint
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_MoveToMovepoint final
{
public:
	class ABP_Square_C*                           Square;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            Piece;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_MoveToMovepoint) == 0x000008, "Wrong alignment on BP_ChessBoard_C_MoveToMovepoint");
static_assert(sizeof(BP_ChessBoard_C_MoveToMovepoint) == 0x000010, "Wrong size on BP_ChessBoard_C_MoveToMovepoint");
static_assert(offsetof(BP_ChessBoard_C_MoveToMovepoint, Square) == 0x000000, "Member 'BP_ChessBoard_C_MoveToMovepoint::Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MoveToMovepoint, Piece) == 0x000008, "Member 'BP_ChessBoard_C_MoveToMovepoint::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.LerpCamerasToTransform
// 0x0040 (0x0040 - 0x0000)
struct BP_ChessBoard_C_LerpCamerasToTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         Time;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_LerpCamerasToTransform) == 0x000010, "Wrong alignment on BP_ChessBoard_C_LerpCamerasToTransform");
static_assert(sizeof(BP_ChessBoard_C_LerpCamerasToTransform) == 0x000040, "Wrong size on BP_ChessBoard_C_LerpCamerasToTransform");
static_assert(offsetof(BP_ChessBoard_C_LerpCamerasToTransform, Transform) == 0x000000, "Member 'BP_ChessBoard_C_LerpCamerasToTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_LerpCamerasToTransform, Time) == 0x000030, "Member 'BP_ChessBoard_C_LerpCamerasToTransform::Time' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.CamPiece
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_CamPiece final
{
public:
	class ABP_PieceChar_C*                        PieceChar;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_CamPiece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_CamPiece");
static_assert(sizeof(BP_ChessBoard_C_CamPiece) == 0x000008, "Wrong size on BP_ChessBoard_C_CamPiece");
static_assert(offsetof(BP_ChessBoard_C_CamPiece, PieceChar) == 0x000000, "Member 'BP_ChessBoard_C_CamPiece::PieceChar' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DestroyAllX
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_DestroyAllX final
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DestroyAllX) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DestroyAllX");
static_assert(sizeof(BP_ChessBoard_C_DestroyAllX) == 0x000008, "Wrong size on BP_ChessBoard_C_DestroyAllX");
static_assert(offsetof(BP_ChessBoard_C_DestroyAllX, ActorClass) == 0x000000, "Member 'BP_ChessBoard_C_DestroyAllX::ActorClass' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.InitCutscene
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_InitCutscene final
{
public:
	class ABP_Piece_C*                            Piece_1;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            Piece_2;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_InitCutscene) == 0x000008, "Wrong alignment on BP_ChessBoard_C_InitCutscene");
static_assert(sizeof(BP_ChessBoard_C_InitCutscene) == 0x000010, "Wrong size on BP_ChessBoard_C_InitCutscene");
static_assert(offsetof(BP_ChessBoard_C_InitCutscene, Piece_1) == 0x000000, "Member 'BP_ChessBoard_C_InitCutscene::Piece_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitCutscene, Piece_2) == 0x000008, "Member 'BP_ChessBoard_C_InitCutscene::Piece_2' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.EnablePiece
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_EnablePiece final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_EnablePiece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_EnablePiece");
static_assert(sizeof(BP_ChessBoard_C_EnablePiece) == 0x000008, "Wrong size on BP_ChessBoard_C_EnablePiece");
static_assert(offsetof(BP_ChessBoard_C_EnablePiece, Piece) == 0x000000, "Member 'BP_ChessBoard_C_EnablePiece::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DisablePiece
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_DisablePiece final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DisablePiece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DisablePiece");
static_assert(sizeof(BP_ChessBoard_C_DisablePiece) == 0x000008, "Wrong size on BP_ChessBoard_C_DisablePiece");
static_assert(offsetof(BP_ChessBoard_C_DisablePiece, Piece) == 0x000000, "Member 'BP_ChessBoard_C_DisablePiece::Piece' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.JudgePiece
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_JudgePiece final
{
public:
	class ABP_PieceChar_C*                        PieceChar;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_JudgePiece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_JudgePiece");
static_assert(sizeof(BP_ChessBoard_C_JudgePiece) == 0x000008, "Wrong size on BP_ChessBoard_C_JudgePiece");
static_assert(offsetof(BP_ChessBoard_C_JudgePiece, PieceChar) == 0x000000, "Member 'BP_ChessBoard_C_JudgePiece::PieceChar' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.AddEnPessantTargetClient
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_AddEnPessantTargetClient final
{
public:
	class ABP_Square_C*                           Square;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_AddEnPessantTargetClient) == 0x000008, "Wrong alignment on BP_ChessBoard_C_AddEnPessantTargetClient");
static_assert(sizeof(BP_ChessBoard_C_AddEnPessantTargetClient) == 0x000008, "Wrong size on BP_ChessBoard_C_AddEnPessantTargetClient");
static_assert(offsetof(BP_ChessBoard_C_AddEnPessantTargetClient, Square) == 0x000000, "Member 'BP_ChessBoard_C_AddEnPessantTargetClient::Square' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.AddEnPessantTargetServer
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_AddEnPessantTargetServer final
{
public:
	class ABP_Square_C*                           Square;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_AddEnPessantTargetServer) == 0x000008, "Wrong alignment on BP_ChessBoard_C_AddEnPessantTargetServer");
static_assert(sizeof(BP_ChessBoard_C_AddEnPessantTargetServer) == 0x000008, "Wrong size on BP_ChessBoard_C_AddEnPessantTargetServer");
static_assert(offsetof(BP_ChessBoard_C_AddEnPessantTargetServer, Square) == 0x000000, "Member 'BP_ChessBoard_C_AddEnPessantTargetServer::Square' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.InitBlack
// 0x0008 (0x0008 - 0x0000)
struct BP_ChessBoard_C_InitBlack final
{
public:
	class ABP_PieceChar_C*                        PieceChar;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_InitBlack) == 0x000008, "Wrong alignment on BP_ChessBoard_C_InitBlack");
static_assert(sizeof(BP_ChessBoard_C_InitBlack) == 0x000008, "Wrong size on BP_ChessBoard_C_InitBlack");
static_assert(offsetof(BP_ChessBoard_C_InitBlack, PieceChar) == 0x000000, "Member 'BP_ChessBoard_C_InitBlack::PieceChar' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.CreatePieceChar
// 0x0020 (0x0020 - 0x0000)
struct BP_ChessBoard_C_CreatePieceChar final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           Owner_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player1;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           Contested_Square;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_CreatePieceChar) == 0x000008, "Wrong alignment on BP_ChessBoard_C_CreatePieceChar");
static_assert(sizeof(BP_ChessBoard_C_CreatePieceChar) == 0x000020, "Wrong size on BP_ChessBoard_C_CreatePieceChar");
static_assert(offsetof(BP_ChessBoard_C_CreatePieceChar, Piece) == 0x000000, "Member 'BP_ChessBoard_C_CreatePieceChar::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CreatePieceChar, Owner_0) == 0x000008, "Member 'BP_ChessBoard_C_CreatePieceChar::Owner_0' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CreatePieceChar, Player1) == 0x000010, "Member 'BP_ChessBoard_C_CreatePieceChar::Player1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CreatePieceChar, Contested_Square) == 0x000018, "Member 'BP_ChessBoard_C_CreatePieceChar::Contested_Square' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.InitiateCombat
// 0x0020 (0x0020 - 0x0000)
struct BP_ChessBoard_C_InitiateCombat final
{
public:
	bool                                          WhiteUlt;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            Player1Piece;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            Player2Piece;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           ContestedSquare;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_InitiateCombat) == 0x000008, "Wrong alignment on BP_ChessBoard_C_InitiateCombat");
static_assert(sizeof(BP_ChessBoard_C_InitiateCombat) == 0x000020, "Wrong size on BP_ChessBoard_C_InitiateCombat");
static_assert(offsetof(BP_ChessBoard_C_InitiateCombat, WhiteUlt) == 0x000000, "Member 'BP_ChessBoard_C_InitiateCombat::WhiteUlt' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitiateCombat, Player1Piece) == 0x000008, "Member 'BP_ChessBoard_C_InitiateCombat::Player1Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitiateCombat, Player2Piece) == 0x000010, "Member 'BP_ChessBoard_C_InitiateCombat::Player2Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_InitiateCombat, ContestedSquare) == 0x000018, "Member 'BP_ChessBoard_C_InitiateCombat::ContestedSquare' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DeactivatePiecesForCombat
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_DeactivatePiecesForCombat final
{
public:
	TArray<class ABP_Piece_C*>                    Array;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChessBoard_C_DeactivatePiecesForCombat) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DeactivatePiecesForCombat");
static_assert(sizeof(BP_ChessBoard_C_DeactivatePiecesForCombat) == 0x000010, "Wrong size on BP_ChessBoard_C_DeactivatePiecesForCombat");
static_assert(offsetof(BP_ChessBoard_C_DeactivatePiecesForCombat, Array) == 0x000000, "Member 'BP_ChessBoard_C_DeactivatePiecesForCombat::Array' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.ActivatePiecesForCombat
// 0x0010 (0x0010 - 0x0000)
struct BP_ChessBoard_C_ActivatePiecesForCombat final
{
public:
	TArray<class ABP_Piece_C*>                    Array;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChessBoard_C_ActivatePiecesForCombat) == 0x000008, "Wrong alignment on BP_ChessBoard_C_ActivatePiecesForCombat");
static_assert(sizeof(BP_ChessBoard_C_ActivatePiecesForCombat) == 0x000010, "Wrong size on BP_ChessBoard_C_ActivatePiecesForCombat");
static_assert(offsetof(BP_ChessBoard_C_ActivatePiecesForCombat, Array) == 0x000000, "Member 'BP_ChessBoard_C_ActivatePiecesForCombat::Array' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.MovePieceToSquare
// 0x0018 (0x0018 - 0x0000)
struct BP_ChessBoard_C_MovePieceToSquare final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           Square;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerMove;                                        // 0x0010(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Animated;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Queued;                                            // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_MovePieceToSquare) == 0x000008, "Wrong alignment on BP_ChessBoard_C_MovePieceToSquare");
static_assert(sizeof(BP_ChessBoard_C_MovePieceToSquare) == 0x000018, "Wrong size on BP_ChessBoard_C_MovePieceToSquare");
static_assert(offsetof(BP_ChessBoard_C_MovePieceToSquare, Piece) == 0x000000, "Member 'BP_ChessBoard_C_MovePieceToSquare::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MovePieceToSquare, Square) == 0x000008, "Member 'BP_ChessBoard_C_MovePieceToSquare::Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MovePieceToSquare, PlayerMove) == 0x000010, "Member 'BP_ChessBoard_C_MovePieceToSquare::PlayerMove' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MovePieceToSquare, Animated) == 0x000011, "Member 'BP_ChessBoard_C_MovePieceToSquare::Animated' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_MovePieceToSquare, Queued) == 0x000012, "Member 'BP_ChessBoard_C_MovePieceToSquare::Queued' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ChessBoard_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ChessBoard_C_ReceiveTick");
static_assert(sizeof(BP_ChessBoard_C_ReceiveTick) == 0x000004, "Wrong size on BP_ChessBoard_C_ReceiveTick");
static_assert(offsetof(BP_ChessBoard_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ChessBoard_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.GetSquareByIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_ChessBoard_C_GetSquareByIndex final
{
public:
	struct FVector2D                              Index_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           Square;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_GetSquareByIndex) == 0x000008, "Wrong alignment on BP_ChessBoard_C_GetSquareByIndex");
static_assert(sizeof(BP_ChessBoard_C_GetSquareByIndex) == 0x000050, "Wrong size on BP_ChessBoard_C_GetSquareByIndex");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, Index_0) == 0x000000, "Member 'BP_ChessBoard_C_GetSquareByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, Square) == 0x000008, "Member 'BP_ChessBoard_C_GetSquareByIndex::Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BreakVector2D_Y_1) == 0x00001C, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetSquareByIndex, CallFunc_BooleanOR_ReturnValue_2) == 0x000049, "Member 'BP_ChessBoard_C_GetSquareByIndex::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DebugSquare
// 0x0090 (0x0090 - 0x0000)
struct BP_ChessBoard_C_DebugSquare final
{
public:
	struct FVector2D                              NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue;        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DebugSquare) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DebugSquare");
static_assert(sizeof(BP_ChessBoard_C_DebugSquare) == 0x000090, "Wrong size on BP_ChessBoard_C_DebugSquare");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, NewParam) == 0x000000, "Member 'BP_ChessBoard_C_DebugSquare::NewParam' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_GetSquareByIndex_Square) == 0x000008, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_GetSquareByIndex_Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_Conv_Vector2dToString_ReturnValue) == 0x000010, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_Conv_Vector2dToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_Conv_VectorToString_ReturnValue) == 0x000040, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_BreakVector_Y) == 0x000064, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugSquare, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_ChessBoard_C_DebugSquare::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.Square Has Piece
// 0x0020 (0x0020 - 0x0000)
struct BP_ChessBoard_C_Square_Has_Piece final
{
public:
	struct FVector2D                              Index_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPiece;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Square_C*                           CallFunc_GetSquareByIndex_Square;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_Square_Has_Piece) == 0x000008, "Wrong alignment on BP_ChessBoard_C_Square_Has_Piece");
static_assert(sizeof(BP_ChessBoard_C_Square_Has_Piece) == 0x000020, "Wrong size on BP_ChessBoard_C_Square_Has_Piece");
static_assert(offsetof(BP_ChessBoard_C_Square_Has_Piece, Index_0) == 0x000000, "Member 'BP_ChessBoard_C_Square_Has_Piece::Index_0' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_Square_Has_Piece, HasPiece) == 0x000008, "Member 'BP_ChessBoard_C_Square_Has_Piece::HasPiece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_Square_Has_Piece, CallFunc_GetSquareByIndex_Square) == 0x000010, "Member 'BP_ChessBoard_C_Square_Has_Piece::CallFunc_GetSquareByIndex_Square' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_Square_Has_Piece, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ChessBoard_C_Square_Has_Piece::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_Square_Has_Piece, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_ChessBoard_C_Square_Has_Piece::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.CountPieces
// 0x0090 (0x0090 - 0x0000)
struct BP_ChessBoard_C_CountPieces final
{
public:
	int32                                         blacks;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         whites;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_CountPieces) == 0x000008, "Wrong alignment on BP_ChessBoard_C_CountPieces");
static_assert(sizeof(BP_ChessBoard_C_CountPieces) == 0x000090, "Wrong size on BP_ChessBoard_C_CountPieces");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, blacks) == 0x000000, "Member 'BP_ChessBoard_C_CountPieces::blacks' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, whites) == 0x000004, "Member 'BP_ChessBoard_C_CountPieces::whites' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ChessBoard_C_CountPieces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ChessBoard_C_CountPieces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_ChessBoard_C_CountPieces::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_ChessBoard_C_CountPieces::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Add_IntInt_ReturnValue_3) == 0x000070, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_CountPieces, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_ChessBoard_C_CountPieces::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.SpawnPieceChar
// 0x0230 (0x0230 - 0x0000)
struct BP_ChessBoard_C_SpawnPieceChar final
{
public:
	class ABP_Piece_C*                            Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        PieceChar;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 char;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Queen_C*                            K2Node_DynamicCast_AsBP_Queen;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_King_C*                             K2Node_DynamicCast_AsBP_King;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Rook_C*                             K2Node_DynamicCast_AsBP_Rook;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Bishop_C*                           K2Node_DynamicCast_AsBP_Bishop;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Knight_C*                           K2Node_DynamicCast_AsBP_Knight;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Pawn_C*                             K2Node_DynamicCast_AsBP_Pawn;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_2;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_8;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_3;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_9;                             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_10;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_4;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_11;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_5;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_SpawnPieceChar) == 0x000010, "Wrong alignment on BP_ChessBoard_C_SpawnPieceChar");
static_assert(sizeof(BP_ChessBoard_C_SpawnPieceChar) == 0x000230, "Wrong size on BP_ChessBoard_C_SpawnPieceChar");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Piece) == 0x000000, "Member 'BP_ChessBoard_C_SpawnPieceChar::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, PieceChar) == 0x000008, "Member 'BP_ChessBoard_C_SpawnPieceChar::PieceChar' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, char) == 0x000010, "Member 'BP_ChessBoard_C_SpawnPieceChar::char' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable) == 0x000018, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Queen) == 0x000020, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Queen' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_King) == 0x000030, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_King' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Rook) == 0x000040, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Rook' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Bishop) == 0x000050, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Bishop' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Knight) == 0x000060, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Knight' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_4) == 0x000068, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Pawn) == 0x000070, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Pawn' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_5) == 0x000078, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable) == 0x0000B0, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BreakTransform_Location) == 0x0000B4, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BreakTransform_Scale) == 0x0000CC, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_1) == 0x000110, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_2) == 0x000118, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable_1) == 0x000120, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default) == 0x000128, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_3) == 0x000138, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x000140, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_4) == 0x000148, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable_2) == 0x000150, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default_1) == 0x000158, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_5) == 0x000160, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000168, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000170, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_6) == 0x000178, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable_3) == 0x000180, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default_2) == 0x000188, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000190, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_7) == 0x000198, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0001A0, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_8) == 0x0001A8, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default_3) == 0x0001B0, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x0001B8, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_DynamicCast_bSuccess_6) == 0x0001C0, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0001C8, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x0001D0, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_9) == 0x0001D8, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable_4) == 0x0001E0, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_10) == 0x0001E8, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default_4) == 0x0001F0, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x0001F8, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_class_Variable_11) == 0x000200, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_class_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000208, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, Temp_bool_Variable_5) == 0x000210, "Member 'BP_ChessBoard_C_SpawnPieceChar::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, K2Node_Select_Default_5) == 0x000218, "Member 'BP_ChessBoard_C_SpawnPieceChar::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000220, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_SpawnPieceChar, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000228, "Member 'BP_ChessBoard_C_SpawnPieceChar::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.ResetPieces
// 0x0048 (0x0048 - 0x0000)
struct BP_ChessBoard_C_ResetPieces final
{
public:
	TArray<class ABP_Piece_C*>                    Pieces;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_ResetPieces) == 0x000008, "Wrong alignment on BP_ChessBoard_C_ResetPieces");
static_assert(sizeof(BP_ChessBoard_C_ResetPieces) == 0x000048, "Wrong size on BP_ChessBoard_C_ResetPieces");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, Pieces) == 0x000000, "Member 'BP_ChessBoard_C_ResetPieces::Pieces' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ChessBoard_C_ResetPieces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000021, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_ChessBoard_C_ResetPieces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000031, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_ResetPieces, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_ChessBoard_C_ResetPieces::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DebugCombat
// 0x0018 (0x0018 - 0x0000)
struct BP_ChessBoard_C_DebugCombat final
{
public:
	EPieceTypes                                   Player_1;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Player_2;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_GetPieceByType_Piece;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_GetPieceByType_Piece_1;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DebugCombat) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DebugCombat");
static_assert(sizeof(BP_ChessBoard_C_DebugCombat) == 0x000018, "Wrong size on BP_ChessBoard_C_DebugCombat");
static_assert(offsetof(BP_ChessBoard_C_DebugCombat, Player_1) == 0x000000, "Member 'BP_ChessBoard_C_DebugCombat::Player_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugCombat, Player_2) == 0x000001, "Member 'BP_ChessBoard_C_DebugCombat::Player_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugCombat, CallFunc_GetPieceByType_Piece) == 0x000008, "Member 'BP_ChessBoard_C_DebugCombat::CallFunc_GetPieceByType_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DebugCombat, CallFunc_GetPieceByType_Piece_1) == 0x000010, "Member 'BP_ChessBoard_C_DebugCombat::CallFunc_GetPieceByType_Piece_1' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.GetPieceByType
// 0x0040 (0x0040 - 0x0000)
struct BP_ChessBoard_C_GetPieceByType final
{
public:
	EPieceTypes                                   PieceType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Piece_C*>                    Pieces;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_Piece_C*                            Piece;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_GetPieceByType) == 0x000008, "Wrong alignment on BP_ChessBoard_C_GetPieceByType");
static_assert(sizeof(BP_ChessBoard_C_GetPieceByType) == 0x000040, "Wrong size on BP_ChessBoard_C_GetPieceByType");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, PieceType) == 0x000000, "Member 'BP_ChessBoard_C_GetPieceByType::PieceType' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, Pieces) == 0x000008, "Member 'BP_ChessBoard_C_GetPieceByType::Pieces' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, Piece) == 0x000018, "Member 'BP_ChessBoard_C_GetPieceByType::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ChessBoard_C_GetPieceByType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_ChessBoard_C_GetPieceByType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ChessBoard_C_GetPieceByType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ChessBoard_C_GetPieceByType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ChessBoard_C_GetPieceByType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_ChessBoard_C_GetPieceByType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_GetPieceByType, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ChessBoard_C_GetPieceByType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.FindClosestEnemyPieceToSquare
// 0x0088 (0x0088 - 0x0000)
struct BP_ChessBoard_C_FindClosestEnemyPieceToSquare final
{
public:
	bool                                          Black;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            Piece;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Piece_C*>                    ExcludeList;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_Piece_C*                            Closest_Piece;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            ClosestPiece;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Piece_C*>                    FriendlyPieces;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         shortestDistance;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare) == 0x000008, "Wrong alignment on BP_ChessBoard_C_FindClosestEnemyPieceToSquare");
static_assert(sizeof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare) == 0x000088, "Wrong size on BP_ChessBoard_C_FindClosestEnemyPieceToSquare");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Black) == 0x000000, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Black' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Piece) == 0x000008, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, ExcludeList) == 0x000010, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::ExcludeList' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Closest_Piece) == 0x000020, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Closest_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Distance) == 0x000028, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Distance' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, ClosestPiece) == 0x000030, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::ClosestPiece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, FriendlyPieces) == 0x000038, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::FriendlyPieces' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, shortestDistance) == 0x000048, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::shortestDistance' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Array_Contains_ReturnValue) == 0x000071, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000080, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindClosestEnemyPieceToSquare, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_ChessBoard_C_FindClosestEnemyPieceToSquare::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.FindTwoClosestEnemyPieces
// 0x0068 (0x0068 - 0x0000)
struct BP_ChessBoard_C_FindTwoClosestEnemyPieces final
{
public:
	TArray<class ABP_Piece_C*>                    ExcludeList;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABP_Piece_C*                            White_Piece;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            Black_Piece;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            BlackPiece;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            WhitePiece;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         shortestDistance;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_FindClosestEnemyPieceToSquare_Closest_Piece; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindClosestEnemyPieceToSquare_Distance;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_FindTwoClosestEnemyPieces) == 0x000008, "Wrong alignment on BP_ChessBoard_C_FindTwoClosestEnemyPieces");
static_assert(sizeof(BP_ChessBoard_C_FindTwoClosestEnemyPieces) == 0x000068, "Wrong size on BP_ChessBoard_C_FindTwoClosestEnemyPieces");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, ExcludeList) == 0x000000, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::ExcludeList' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, White_Piece) == 0x000010, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::White_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, Black_Piece) == 0x000018, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::Black_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, BlackPiece) == 0x000020, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::BlackPiece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, WhitePiece) == 0x000028, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::WhitePiece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, shortestDistance) == 0x000030, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::shortestDistance' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_FindClosestEnemyPieceToSquare_Closest_Piece) == 0x000058, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_FindClosestEnemyPieceToSquare_Closest_Piece' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_FindClosestEnemyPieceToSquare_Distance) == 0x000060, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_FindClosestEnemyPieceToSquare_Distance' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_FindTwoClosestEnemyPieces, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_ChessBoard_C_FindTwoClosestEnemyPieces::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.DisablePieces
// 0x0030 (0x0030 - 0x0000)
struct BP_ChessBoard_C_DisablePieces final
{
public:
	TArray<class ABP_Piece_C*>                    Pieces;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChessBoard_C_DisablePieces) == 0x000008, "Wrong alignment on BP_ChessBoard_C_DisablePieces");
static_assert(sizeof(BP_ChessBoard_C_DisablePieces) == 0x000030, "Wrong size on BP_ChessBoard_C_DisablePieces");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, Pieces) == 0x000000, "Member 'BP_ChessBoard_C_DisablePieces::Pieces' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ChessBoard_C_DisablePieces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_ChessBoard_C_DisablePieces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ChessBoard_C_DisablePieces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ChessBoard_C_DisablePieces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_ChessBoard_C_DisablePieces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_DisablePieces, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ChessBoard_C_DisablePieces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ChessBoard.BP_ChessBoard_C.KingVerification
// 0x0058 (0x0058 - 0x0000)
struct BP_ChessBoard_C_KingVerification final
{
public:
	bool                                          WhiteWon;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BlackWon;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BlackWins;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WhiteWins;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BlackKingFound;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WhiteKingFound;                                    // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ChessBoard_C_KingVerification) == 0x000008, "Wrong alignment on BP_ChessBoard_C_KingVerification");
static_assert(sizeof(BP_ChessBoard_C_KingVerification) == 0x000058, "Wrong size on BP_ChessBoard_C_KingVerification");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, WhiteWon) == 0x000000, "Member 'BP_ChessBoard_C_KingVerification::WhiteWon' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, BlackWon) == 0x000001, "Member 'BP_ChessBoard_C_KingVerification::BlackWon' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, BlackWins) == 0x000002, "Member 'BP_ChessBoard_C_KingVerification::BlackWins' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, WhiteWins) == 0x000003, "Member 'BP_ChessBoard_C_KingVerification::WhiteWins' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, BlackKingFound) == 0x000004, "Member 'BP_ChessBoard_C_KingVerification::BlackKingFound' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, WhiteKingFound) == 0x000005, "Member 'BP_ChessBoard_C_KingVerification::WhiteKingFound' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ChessBoard_C_KingVerification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ChessBoard_C_KingVerification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_ChessBoard_C_KingVerification::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Length_ReturnValue_2) == 0x000030, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_BooleanOR_ReturnValue) == 0x000035, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_ChessBoard_C_KingVerification::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Array_Length_ReturnValue_3) == 0x000050, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChessBoard_C_KingVerification, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000055, "Member 'BP_ChessBoard_C_KingVerification::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

}

