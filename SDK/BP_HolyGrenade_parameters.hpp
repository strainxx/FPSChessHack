#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HolyGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HolyGrenade.BP_HolyGrenade_C.ExecuteUbergraph_BP_HolyGrenade
// 0x02C0 (0x02C0 - 0x0000)
struct BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0118(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01CC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B[0x5];                                      // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_3;                     // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade) == 0x000008, "Wrong alignment on BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade");
static_assert(sizeof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade) == 0x0002C0, "Wrong size on BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, EntryPoint) == 0x000000, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_HasAuthority_ReturnValue_1) == 0x000018, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_HasAuthority_ReturnValue_2) == 0x000019, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_AsBP_Destructible) == 0x000058, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000068, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000084, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_AsBP_Piece) == 0x0000A0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000AC, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_BreakVector_X) == 0x0000C4, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_BreakVector_Z) == 0x0000CC, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000E8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F1, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000F8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000100, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000108, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000110, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_bFromSweep) == 0x000114, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_SweepResult) == 0x000118, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_HitComponent) == 0x0001A8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OtherActor) == 0x0001B0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_OtherComp) == 0x0001B8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001C0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_ComponentBoundEvent_Hit) == 0x0001CC, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000258, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_ComponentHasTag_ReturnValue) == 0x000259, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00025A, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_GetObjectClass_ReturnValue) == 0x000260, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000268, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_BooleanAND_ReturnValue) == 0x000269, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_CustomEvent_Location_3) == 0x00026C, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_CustomEvent_Location_3' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000278, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_CustomEvent_Location_2) == 0x000284, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_CustomEvent_Location_1) == 0x000290, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, K2Node_CustomEvent_Location) == 0x00029C, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0002A8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_GetObjectClass_ReturnValue_1) == 0x0002B0, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0002B8, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade, CallFunc_Array_Add_ReturnValue) == 0x0002BC, "Member 'BP_HolyGrenade_C_ExecuteUbergraph_BP_HolyGrenade::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.SpawnExplosionSystemAll
// 0x000C (0x000C - 0x0000)
struct BP_HolyGrenade_C_SpawnExplosionSystemAll final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HolyGrenade_C_SpawnExplosionSystemAll) == 0x000004, "Wrong alignment on BP_HolyGrenade_C_SpawnExplosionSystemAll");
static_assert(sizeof(BP_HolyGrenade_C_SpawnExplosionSystemAll) == 0x00000C, "Wrong size on BP_HolyGrenade_C_SpawnExplosionSystemAll");
static_assert(offsetof(BP_HolyGrenade_C_SpawnExplosionSystemAll, Location) == 0x000000, "Member 'BP_HolyGrenade_C_SpawnExplosionSystemAll::Location' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.ExplosionSystemMulti
// 0x000C (0x000C - 0x0000)
struct BP_HolyGrenade_C_ExplosionSystemMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HolyGrenade_C_ExplosionSystemMulti) == 0x000004, "Wrong alignment on BP_HolyGrenade_C_ExplosionSystemMulti");
static_assert(sizeof(BP_HolyGrenade_C_ExplosionSystemMulti) == 0x00000C, "Wrong size on BP_HolyGrenade_C_ExplosionSystemMulti");
static_assert(offsetof(BP_HolyGrenade_C_ExplosionSystemMulti, Location) == 0x000000, "Member 'BP_HolyGrenade_C_ExplosionSystemMulti::Location' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.ExplosionSystemServer
// 0x000C (0x000C - 0x0000)
struct BP_HolyGrenade_C_ExplosionSystemServer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HolyGrenade_C_ExplosionSystemServer) == 0x000004, "Wrong alignment on BP_HolyGrenade_C_ExplosionSystemServer");
static_assert(sizeof(BP_HolyGrenade_C_ExplosionSystemServer) == 0x00000C, "Wrong size on BP_HolyGrenade_C_ExplosionSystemServer");
static_assert(offsetof(BP_HolyGrenade_C_ExplosionSystemServer, Location) == 0x000000, "Member 'BP_HolyGrenade_C_ExplosionSystemServer::Location' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.SpawnExplosionSystem
// 0x000C (0x000C - 0x0000)
struct BP_HolyGrenade_C_SpawnExplosionSystem final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HolyGrenade_C_SpawnExplosionSystem) == 0x000004, "Wrong alignment on BP_HolyGrenade_C_SpawnExplosionSystem");
static_assert(sizeof(BP_HolyGrenade_C_SpawnExplosionSystem) == 0x00000C, "Wrong size on BP_HolyGrenade_C_SpawnExplosionSystem");
static_assert(offsetof(BP_HolyGrenade_C_SpawnExplosionSystem, Location) == 0x000000, "Member 'BP_HolyGrenade_C_SpawnExplosionSystem::Location' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_HolyGrenade.BP_HolyGrenade_C.BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_HolyGrenade_C_BndEvt__BP_HolyGrenade_Mesh_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

