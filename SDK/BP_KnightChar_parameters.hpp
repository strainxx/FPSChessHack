#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KnightChar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_KnightChar.BP_KnightChar_C.ExecuteUbergraph_BP_KnightChar
// 0x0520 (0x0520 - 0x0000)
struct BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_1;                    // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_197[0x1];                                      // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction_1;                          // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_CustomEvent_Mesh;                           // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_direction;                      // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0xC];                                      // 0x0234(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02A8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Arrow_C*                            K2Node_DynamicCast_AsBP_Arrow;                     // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB[0x1];                                      // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x03B8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0468(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar) == 0x000010, "Wrong alignment on BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar");
static_assert(sizeof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar) == 0x000520, "Wrong size on BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, EntryPoint) == 0x000000, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, Temp_bool_Variable) == 0x000006, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_direction_1) == 0x00000C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_direction_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_GetController_ReturnValue_1) == 0x000020, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, Temp_class_Variable) == 0x000030, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000050, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_MakeVector_ReturnValue) == 0x00005C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000074, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Conv_BoolToString_ReturnValue) == 0x000080, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_Location_2) == 0x000094, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_FMin_ReturnValue) == 0x000130, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_VLerp_ReturnValue) == 0x000134, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000140, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakTransform_Location) == 0x000170, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakTransform_Rotation) == 0x00017C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BreakTransform_Scale) == 0x000188, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_HasAuthority_ReturnValue_2) == 0x000194, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_HasAuthority_ReturnValue_3) == 0x000195, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_HasAuthority_ReturnValue_4) == 0x000196, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CreateDelegate_OutputDelegate) == 0x000198, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_Event_Direction_1) == 0x0001B0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_Event_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_Event_Direction) == 0x0001BC, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_Mesh) == 0x0001C8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_Mesh' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_IsValid_ReturnValue_1) == 0x0001D0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_direction) == 0x0001D4, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_direction' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_GetForwardVector_ReturnValue) == 0x0001E0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0001EC, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_ComposeRotators_ReturnValue) == 0x0001F8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000204, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_GetForwardVector_ReturnValue_1) == 0x000210, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00021C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Add_VectorVector_ReturnValue) == 0x000228, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_MakeTransform_ReturnValue) == 0x000240, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000270, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_FMin_ReturnValue_1) == 0x000274, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000278, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x00027C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000288, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_OtherActor) == 0x000290, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_OtherComp) == 0x000298, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002A0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002A4, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_ComponentBoundEvent_SweepResult) == 0x0002A8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_AsBP_Destructible) == 0x000338, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_bSuccess) == 0x000340, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000348, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_bSuccess_1) == 0x000350, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_AsBP_Piece) == 0x000358, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000364, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, Temp_class_Variable_1) == 0x000370, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_Select_Default) == 0x000378, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000380, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000388, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x000398, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_AsBP_Arrow) == 0x0003A0, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_AsBP_Arrow' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_DynamicCast_bSuccess_3) == 0x0003A8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_IsValid_ReturnValue_2) == 0x0003A9, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_IsValid_ReturnValue_3) == 0x0003AA, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_Location_1) == 0x0003AC, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0003B8, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000444, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_FMin_ReturnValue_2) == 0x000448, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00044C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000450, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, K2Node_CustomEvent_Location) == 0x00045C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000468, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0004F4, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_VLerp_ReturnValue_1) == 0x000500, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00050C, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000510, "Member 'BP_KnightChar_C_ExecuteUbergraph_BP_KnightChar::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.SetMiniArrowLocation
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_SetMiniArrowLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_SetMiniArrowLocation) == 0x000004, "Wrong alignment on BP_KnightChar_C_SetMiniArrowLocation");
static_assert(sizeof(BP_KnightChar_C_SetMiniArrowLocation) == 0x00000C, "Wrong size on BP_KnightChar_C_SetMiniArrowLocation");
static_assert(offsetof(BP_KnightChar_C_SetMiniArrowLocation, Location) == 0x000000, "Member 'BP_KnightChar_C_SetMiniArrowLocation::Location' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.SetArrowLocationLocal
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_SetArrowLocationLocal final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_SetArrowLocationLocal) == 0x000004, "Wrong alignment on BP_KnightChar_C_SetArrowLocationLocal");
static_assert(sizeof(BP_KnightChar_C_SetArrowLocationLocal) == 0x00000C, "Wrong size on BP_KnightChar_C_SetArrowLocationLocal");
static_assert(offsetof(BP_KnightChar_C_SetArrowLocationLocal, Location) == 0x000000, "Member 'BP_KnightChar_C_SetArrowLocationLocal::Location' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_KnightChar_C_BndEvt__BP_KnightChar_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.ChargeClient
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_ChargeClient final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_ChargeClient) == 0x000004, "Wrong alignment on BP_KnightChar_C_ChargeClient");
static_assert(sizeof(BP_KnightChar_C_ChargeClient) == 0x00000C, "Wrong size on BP_KnightChar_C_ChargeClient");
static_assert(offsetof(BP_KnightChar_C_ChargeClient, Direction) == 0x000000, "Member 'BP_KnightChar_C_ChargeClient::Direction' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.TurnBlack
// 0x0008 (0x0008 - 0x0000)
struct BP_KnightChar_C_TurnBlack final
{
public:
	class UMeshComponent*                         Mesh_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_TurnBlack) == 0x000008, "Wrong alignment on BP_KnightChar_C_TurnBlack");
static_assert(sizeof(BP_KnightChar_C_TurnBlack) == 0x000008, "Wrong size on BP_KnightChar_C_TurnBlack");
static_assert(offsetof(BP_KnightChar_C_TurnBlack, Mesh_0) == 0x000000, "Member 'BP_KnightChar_C_TurnBlack::Mesh_0' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.SetArrowLocation
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_SetArrowLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_SetArrowLocation) == 0x000004, "Wrong alignment on BP_KnightChar_C_SetArrowLocation");
static_assert(sizeof(BP_KnightChar_C_SetArrowLocation) == 0x00000C, "Wrong size on BP_KnightChar_C_SetArrowLocation");
static_assert(offsetof(BP_KnightChar_C_SetArrowLocation, Location) == 0x000000, "Member 'BP_KnightChar_C_SetArrowLocation::Location' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.StartCharge
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_StartCharge final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_StartCharge) == 0x000004, "Wrong alignment on BP_KnightChar_C_StartCharge");
static_assert(sizeof(BP_KnightChar_C_StartCharge) == 0x00000C, "Wrong size on BP_KnightChar_C_StartCharge");
static_assert(offsetof(BP_KnightChar_C_StartCharge, Direction) == 0x000000, "Member 'BP_KnightChar_C_StartCharge::Direction' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.StopShooting
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_StopShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_StopShooting) == 0x000004, "Wrong alignment on BP_KnightChar_C_StopShooting");
static_assert(sizeof(BP_KnightChar_C_StopShooting) == 0x00000C, "Wrong size on BP_KnightChar_C_StopShooting");
static_assert(offsetof(BP_KnightChar_C_StopShooting, Direction) == 0x000000, "Member 'BP_KnightChar_C_StopShooting::Direction' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.StartShooting
// 0x000C (0x000C - 0x0000)
struct BP_KnightChar_C_StartShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_StartShooting) == 0x000004, "Wrong alignment on BP_KnightChar_C_StartShooting");
static_assert(sizeof(BP_KnightChar_C_StartShooting) == 0x00000C, "Wrong size on BP_KnightChar_C_StartShooting");
static_assert(offsetof(BP_KnightChar_C_StartShooting, Direction) == 0x000000, "Member 'BP_KnightChar_C_StartShooting::Direction' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KnightChar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KnightChar_C_ReceiveTick");
static_assert(sizeof(BP_KnightChar_C_ReceiveTick) == 0x000004, "Wrong size on BP_KnightChar_C_ReceiveTick");
static_assert(offsetof(BP_KnightChar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KnightChar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KnightChar.BP_KnightChar_C.MovementAbility
// 0x0028 (0x0028 - 0x0000)
struct BP_KnightChar_C_MovementAbility final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastInputVector_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KnightChar_C_MovementAbility) == 0x000004, "Wrong alignment on BP_KnightChar_C_MovementAbility");
static_assert(sizeof(BP_KnightChar_C_MovementAbility) == 0x000028, "Wrong size on BP_KnightChar_C_MovementAbility");
static_assert(offsetof(BP_KnightChar_C_MovementAbility, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'BP_KnightChar_C_MovementAbility::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_MovementAbility, CallFunc_GetLastInputVector_ReturnValue) == 0x00000C, "Member 'BP_KnightChar_C_MovementAbility::CallFunc_GetLastInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_MovementAbility, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000018, "Member 'BP_KnightChar_C_MovementAbility::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KnightChar_C_MovementAbility, CallFunc_SelectVector_ReturnValue) == 0x00001C, "Member 'BP_KnightChar_C_MovementAbility::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

}

