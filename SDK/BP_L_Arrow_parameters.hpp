#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_L_Arrow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_L_Arrow.BP_L_Arrow_C.ExecuteUbergraph_BP_L_Arrow
// 0x0120 (0x0120 - 0x0000)
struct BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow) == 0x000008, "Wrong alignment on BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow");
static_assert(sizeof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow) == 0x000120, "Wrong size on BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, EntryPoint) == 0x000000, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B4, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0000CC, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_VSize_ReturnValue) == 0x0000E4, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Normal_ReturnValue) == 0x0000E8, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000104, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000110, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00011C, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00011D, "Member 'BP_L_Arrow_C_ExecuteUbergraph_BP_L_Arrow::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_L_Arrow.BP_L_Arrow_C.BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_L_Arrow_C_BndEvt__BP_L_Arrow_HomingDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

