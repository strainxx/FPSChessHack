#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PawnChar

#include "Basic.hpp"

#include "BP_PawnChar_classes.hpp"
#include "BP_PawnChar_parameters.hpp"


namespace SDK
{

// Function BP_PawnChar.BP_PawnChar_C.ExecuteUbergraph_BP_PawnChar
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PawnChar_C::ExecuteUbergraph_BP_PawnChar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "ExecuteUbergraph_BP_PawnChar");

	Params::BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PawnChar.BP_PawnChar_C.DestroyAllAllies
// (BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::DestroyAllAllies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "DestroyAllAllies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.StopSprintingServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::StopSprintingServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "StopSprintingServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.StopSprinting
// (BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::StopSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "StopSprinting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.StartSprinting
// (BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::StartSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "StartSprinting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.AllyDead
// (BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::AllyDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "AllyDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.CreateAndExplodeDestructible
// (BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::CreateAndExplodeDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "CreateAndExplodeDestructible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.StartShooting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PawnChar_C::StartShooting(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "StartShooting");

	Params::BP_PawnChar_C_StartShooting Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PawnChar.BP_PawnChar_C.Start Blocking
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::Start_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "Start Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PawnChar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.MainAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::MainAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "MainAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PawnChar.BP_PawnChar_C.MovementAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PawnChar_C::MovementAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PawnChar_C", "MovementAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

