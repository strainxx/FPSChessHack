#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PawnChar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PawnChar.BP_PawnChar_C.ExecuteUbergraph_BP_PawnChar
// 0x0048 (0x0048 - 0x0000)
struct BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar) == 0x000008, "Wrong alignment on BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar");
static_assert(sizeof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar) == 0x000048, "Wrong size on BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, EntryPoint) == 0x000000, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, K2Node_Event_Direction) == 0x000024, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_HasAuthority_ReturnValue_1) == 0x000030, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_PawnChar_C_ExecuteUbergraph_BP_PawnChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PawnChar.BP_PawnChar_C.StartShooting
// 0x000C (0x000C - 0x0000)
struct BP_PawnChar_C_StartShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PawnChar_C_StartShooting) == 0x000004, "Wrong alignment on BP_PawnChar_C_StartShooting");
static_assert(sizeof(BP_PawnChar_C_StartShooting) == 0x00000C, "Wrong size on BP_PawnChar_C_StartShooting");
static_assert(offsetof(BP_PawnChar_C_StartShooting, Direction) == 0x000000, "Member 'BP_PawnChar_C_StartShooting::Direction' has a wrong offset!");

// Function BP_PawnChar.BP_PawnChar_C.MainAbility
// 0x0058 (0x0058 - 0x0000)
struct BP_PawnChar_C_MainAbility final
{
public:
	class ABP_Piece_C*                            ClosestPiece;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_FindClosestFriendlyPiece_Closest_Piece;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        CallFunc_SpawnPieceChar_PieceChar;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PawnChar_C*                         K2Node_DynamicCast_AsBP_Pawn_Char;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PawnChar_C_MainAbility) == 0x000008, "Wrong alignment on BP_PawnChar_C_MainAbility");
static_assert(sizeof(BP_PawnChar_C_MainAbility) == 0x000058, "Wrong size on BP_PawnChar_C_MainAbility");
static_assert(offsetof(BP_PawnChar_C_MainAbility, ClosestPiece) == 0x000000, "Member 'BP_PawnChar_C_MainAbility::ClosestPiece' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_PawnChar_C_MainAbility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PawnChar_C_MainAbility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_FindClosestFriendlyPiece_Closest_Piece) == 0x000010, "Member 'BP_PawnChar_C_MainAbility::CallFunc_FindClosestFriendlyPiece_Closest_Piece' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PawnChar_C_MainAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BP_PawnChar_C_MainAbility::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PawnChar_C_MainAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_SpawnPieceChar_PieceChar) == 0x000030, "Member 'BP_PawnChar_C_MainAbility::CallFunc_SpawnPieceChar_PieceChar' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_GetAIController_ReturnValue) == 0x000038, "Member 'BP_PawnChar_C_MainAbility::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_PawnChar_C_MainAbility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_RunBehaviorTree_ReturnValue) == 0x000041, "Member 'BP_PawnChar_C_MainAbility::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_IsValid_ReturnValue_2) == 0x000042, "Member 'BP_PawnChar_C_MainAbility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, K2Node_DynamicCast_AsBP_Pawn_Char) == 0x000048, "Member 'BP_PawnChar_C_MainAbility::K2Node_DynamicCast_AsBP_Pawn_Char' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PawnChar_C_MainAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PawnChar_C_MainAbility, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_PawnChar_C_MainAbility::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

