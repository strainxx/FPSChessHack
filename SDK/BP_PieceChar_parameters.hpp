#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PieceChar

#include "Basic.hpp"

#include "PieceTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "KillcamEvents_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_PieceChar.BP_PieceChar_C.ExecuteUbergraph_BP_PieceChar
// 0x1130 (0x1130 - 0x0000)
struct BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_7;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_6;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_2;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_3;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00F8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_187[0x1];                                      // 0x0187(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable_1;                              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bValue_1;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bValue;                         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0270(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_Unreplicated_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_direction_7;                    // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Endpoint_3;                     // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_6;                    // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_Rot;                            // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Amount_8;                       // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_7;                        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_10;                    // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_2;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3[0x1];                                      // 0x03B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Input_Vector;                   // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_5;                    // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_4;                    // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Vector;                         // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x03F8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E[0x2];                                      // 0x048E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0498(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RookChar_C*                         K2Node_DynamicCast_AsBP_Rook_Char;                 // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_9;                     // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_11;                      // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_6;                        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPieceAnimBP_C*                         K2Node_DynamicCast_AsPiece_Anim_BP;                // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable_2;                              // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A[0x2];                                      // 0x057A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x2];                                      // 0x0582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0xF];                                      // 0x0591(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x05A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x05D8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_ShateredScreen_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x05F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Piece;                          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Object_7;                       // 0x0600(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Force_3;                        // 0x0608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_8;                     // 0x0614(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_ActualObject_4;                 // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_10;                      // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal_3;                       // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Object_6;                       // 0x0638(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Force_2;                        // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_7;                     // 0x064C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_ActualObject_3;                 // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_9;                       // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal_2;                       // 0x0664(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Object_5;                       // 0x0670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Force_1;                        // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_6;                     // 0x0684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_ActualObject_2;                 // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_8;                       // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal_1;                       // 0x069C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_Object_4;                       // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Force;                          // 0x06B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_5;                     // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_ActualObject_1;                 // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_7;                       // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x06D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Endpoint_2;                     // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_3;                    // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0718(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0728(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Endpoint_1;                     // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_2;                    // 0x073C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Endpoint;                       // 0x0748(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction_1;                    // 0x0754(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_19;                           // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_7;                       // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_5;                        // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_4;                     // 0x0778(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_6;                       // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_4;                        // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_3;                     // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_5;                       // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_3;                        // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x07A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x07B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PawnChar_C*                         K2Node_DynamicCast_AsBP_Pawn_Char;                 // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D2[0x6];                                      // 0x07D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x07D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x07E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E2[0x2];                                      // 0x07E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_4;                       // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable_3;                              // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7ED[0x3];                                      // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char_1;              // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x3];                                      // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Count;                          // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81A[0x2];                                      // 0x081A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Amount_3;                       // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_821[0x3];                                      // 0x0821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_2;                       // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_1;                       // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount;                         // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_839[0x3];                                      // 0x0839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0840(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0850(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0858(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_Destructible_C*                     K2Node_CustomEvent_Object_3;                       // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_6;                       // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ImpulseStrength_3;              // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_CustomEvent_Object_2;                       // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_5;                       // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ImpulseStrength_2;              // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_CustomEvent_Object_1;                       // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_4;                       // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ImpulseStrength_1;              // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_CustomEvent_Object;                         // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_3;                       // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ImpulseStrength;                // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Tie;                            // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPieceTypes                                   K2Node_CustomEvent_Winner;                         // 0x08AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Black;                          // 0x08AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x08AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x08AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8AE[0x2];                                      // 0x08AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Target_5;                       // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_ActualObject;                   // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_2;                       // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x08D0(0x0018)(HasGetValueTypeHash)
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece_1;                   // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x08F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_911[0x3];                                      // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0919(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91A[0x6];                                      // 0x091A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0920(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0938(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0948(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952[0x2];                                      // 0x0952(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0954(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_964[0x4];                                      // 0x0964(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0968(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x0973(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0974(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x0988(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992[0x6];                                      // 0x0992(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0998(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B2[0x6];                                      // 0x09B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_20;                           // 0x09B8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x09D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieSceneSequencePlayer*              K2Node_CustomEvent_Target_4;                       // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMovieSceneSequencePlayer*              K2Node_CustomEvent_Target_3;                       // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMovieSceneSequencePlayer*              K2Node_CustomEvent_Target_2;                       // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UMovieSceneSequencePlayer*              K2Node_CustomEvent_Target_1;                       // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0A10(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x0A20(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_11;              // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2A[0x6];                                      // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0A30(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A49[0x3];                                      // 0x0A49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0A58(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_12;              // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0A78(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_13;              // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x0A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A92[0x2];                                      // 0x0A92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_14;              // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A99[0x3];                                      // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0AA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA3[0x5];                                      // 0x0AA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0AA8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0AC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0AC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x0AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_15;              // 0x0AC6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EKillcamEvents                                Temp_byte_Variable_4;                              // 0x0AC7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_16;              // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0ACC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD8[0x8];                                      // 0x0AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0AE0(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      K2Node_CustomEvent_OwningPlayer;                   // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPieceHUD_C*                            CallFunc_Create_ReturnValue;                       // 0x0B18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B21[0x7];                                      // 0x0B21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B32[0x2];                                      // 0x0B32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_17;              // 0x0B3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3E[0x2];                                      // 0x0B3E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CrackValue_2;                   // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CrackValue_1;                   // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CrackValue;                     // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0B4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_4;        // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_5;        // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5A[0x2];                                      // 0x0B5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool NewParam)>                K2Node_CreateDelegate_OutputDelegate_8;            // 0x0B5C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_Type_4;                         // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B71[0x3];                                      // 0x0B71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Type_3;                         // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Type_2;                         // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Type_1;                         // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKillcamEvents                                Temp_byte_Variable_5;                              // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EKillcamEvents                                K2Node_Select_Default_1;                           // 0x0B82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0B83(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0B85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B86[0x2];                                      // 0x0B86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0B88(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_3;          // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance;       // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShateredScreen_C*                      CallFunc_Create_ReturnValue_1;                     // 0x0BD8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue_1;          // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE1[0x7];                                      // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorSequenceComponent*                K2Node_CustomEvent_Target;                         // 0x0BE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0BF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0C10(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_18;              // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C29[0x3];                                      // 0x0C29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Sensitivity, bool Player2)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0C2C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_19;              // 0x0C3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3D[0x3];                                      // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0C40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0C4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0C58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x0C64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URookAnimBP_C*                          K2Node_DynamicCast_AsRook_Anim_BP;                 // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPieceAnimBP_C*                         K2Node_DynamicCast_AsPiece_Anim_BP_1;              // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C99[0x7];                                      // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0CA0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0CB8(0x0018)(HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0CD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_2;                        // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0CE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy_1;                        // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0D00(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_20;              // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0D12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D13[0x1];                                      // 0x0D13(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0D14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0D18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D25[0x3];                                      // 0x0D25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameMapsSettings*                      CallFunc_GetGameMapsSettings_ReturnValue;          // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkipAssigningGamepadToPlayer1_ReturnValue; // 0x0D31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D32[0x6];                                      // 0x0D32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0D38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0D48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0D54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D55[0x3];                                      // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0D58(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0DE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE5[0x3];                                      // 0x0DE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0DE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0DF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF5[0x3];                                      // 0x0DF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Arrow_C*                            K2Node_DynamicCast_AsBP_Arrow;                     // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E02[0x6];                                      // 0x0E02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save;                // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E19[0x3];                                      // 0x0E19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Sensitivity;                    // 0x0E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Player2;                        // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_2;               // 0x0E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0E22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_21;              // 0x0E23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_3;               // 0x0E24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0E25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NewParam;                       // 0x0E26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E27[0x1];                                      // 0x0E27(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0E30(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E49[0x7];                                      // 0x0E49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0E59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5A[0x6];                                      // 0x0E5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message_1;                      // 0x0E60(0x0018)()
	bool                                          K2Node_CustomEvent_Player1;                        // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0E79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0E7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0E7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0E7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7D[0x3];                                      // 0x0E7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x0E80(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0E99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0E9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0E9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0E9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0E9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9E[0x2];                                      // 0x0E9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ChessBoard_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0EA0(0x0010)(ReferenceParm)
	class ABP_ChessBoard_C*                       CallFunc_Array_Get_Item;                           // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x0EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_22;              // 0x0EBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0EBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EBC[0x4];                                      // 0x0EBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_21;                           // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetDefaultCamera_Default_Camera;          // 0x0EC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0ED0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EDC[0x4];                                      // 0x0EDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetDefaultCamera_Default_Camera_1;        // 0x0EE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x0EE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0EF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcShootDirection_Shoot_Direction;       // 0x0EFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0F08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0F14(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA1[0x3];                                      // 0x0FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcShootDirection_Shoot_Direction_1;     // 0x0FA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0FB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB2[0x2];                                      // 0x0FB2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0FB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0FB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0FBC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0FC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0FD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0FE0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FEC[0x4];                                      // 0x0FEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0FF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x1000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x1018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x1024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcShootDirection_Shoot_Direction_2;     // 0x1030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x103C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x1048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue_1;            // 0x1049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x104A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x104B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104C[0x4];                                     // 0x104C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x1059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105A[0x6];                                     // 0x105A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char_2;              // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1069[0x3];                                     // 0x1069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x106C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x1078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PointInHead_In_Head;                      // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x1081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1082[0x2];                                     // 0x1082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108C[0x4];                                     // 0x108C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_22;                           // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x1098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x109C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Type;                           // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x10A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x10A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x10AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10AB[0x5];                                     // 0x10AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_23;                           // 0x10B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x10B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x10BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x10C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x10C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x10C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x10CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x10D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x10E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_23;              // 0x10E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x10E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x10E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E4[0x4];                                     // 0x10E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_CustomEvent_Enemy;                          // 0x10E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_direction;                      // 0x10F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10FC[0x4];                                     // 0x10FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_24;                           // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x1108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x1118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x1120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar) == 0x000010, "Wrong alignment on BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar");
static_assert(sizeof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar) == 0x001130, "Wrong size on BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, EntryPoint) == 0x000000, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable) == 0x000004, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable) == 0x000008, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_1) == 0x000010, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_2) == 0x000018, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_3) == 0x000020, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_4) == 0x000028, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_5) == 0x000030, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_7) == 0x000038, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_6) == 0x00003C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000041, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_5) == 0x000044, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_4) == 0x000048, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue_3) == 0x00004D, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_3) == 0x000050, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_2) == 0x000054, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_6) == 0x000058, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetForwardVector_ReturnValue) == 0x000060, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_RotateAngleAxis_ReturnValue) == 0x000070, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000088, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000094, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetController_ReturnValue) == 0x0000B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_MyComp) == 0x0000B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_Other) == 0x0000C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_OtherComp) == 0x0000C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_bSelfMoved) == 0x0000D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_HitLocation) == 0x0000D4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_HitNormal) == 0x0000E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_NormalImpulse) == 0x0000EC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_Hit) == 0x0000F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue) == 0x000184, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_bBlockingHit) == 0x000185, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_bInitialOverlap) == 0x000186, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Time) == 0x000188, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Distance) == 0x00018C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_ImpactPoint) == 0x00019C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_PhysMat) == 0x0001C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitActor) == 0x0001C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitComponent) == 0x0001D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitBoneName) == 0x0001D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_FaceIndex) == 0x0001E4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_TraceStart) == 0x0001E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_TraceEnd) == 0x0001F4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_ComponentHasTag_ReturnValue) == 0x000200, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000201, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPlayer_Controller) == 0x000208, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000211, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanOR_ReturnValue) == 0x000212, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_7) == 0x000218, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetUpVector_ReturnValue) == 0x000220, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Dot_VectorVector_ReturnValue) == 0x00022C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_DegAcos_ReturnValue) == 0x000230, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000234, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeVector_ReturnValue) == 0x000238, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000244, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000245, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_8) == 0x000248, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable_1) == 0x000250, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SelectFloat_ReturnValue) == 0x000254, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_bValue_1) == 0x000258, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_bValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00025C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_bValue) == 0x000260, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_bValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Delay) == 0x000264, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetTransform_ReturnValue) == 0x000270, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SelectFloat_ReturnValue_1) == 0x0002B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetAIController_ReturnValue) == 0x0002B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_1) == 0x0002C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_2) == 0x0002C1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_SwitchEnum_CmpSuccess) == 0x0002C2, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_9) == 0x0002C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_DeltaSeconds) == 0x0002D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_10) == 0x0002D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0002E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetController_ReturnValue_1) == 0x0002E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0002F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_1) == 0x0002F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_7) == 0x0002FC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_11) == 0x000308, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000310, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x00031C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_12) == 0x000328, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_3) == 0x000330, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Endpoint_3) == 0x000334, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Endpoint_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_6) == 0x000340, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_13) == 0x000350, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_4) == 0x000358, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Rot) == 0x00035C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Rot' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue) == 0x000368, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakRotator_Roll) == 0x00036C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakRotator_Pitch) == 0x000370, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakRotator_Yaw) == 0x000374, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeRotator_ReturnValue) == 0x000378, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_8) == 0x000384, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_7) == 0x000388, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_10) == 0x000390, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00039C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetController_ReturnValue_2) == 0x0003A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPlayer_Controller_2) == 0x0003A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_2) == 0x0003B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_5) == 0x0003B1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_1) == 0x0003B2, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Input_Vector) == 0x0003B4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Input_Vector' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_5) == 0x0003C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_4) == 0x0003CC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Vector) == 0x0003D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Vector' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetControlRotation_ReturnValue) == 0x0003E4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_14) == 0x0003F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0003F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000484, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000488, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_6) == 0x00048C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_7) == 0x00048D, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetController_ReturnValue_3) == 0x000490, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000498, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_8) == 0x000524, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_15) == 0x000528, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Rook_Char) == 0x000530, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Rook_Char' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_3) == 0x000538, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_9) == 0x00053C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_11) == 0x000548, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_6) == 0x000550, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetAnimInstance_ReturnValue) == 0x000558, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Less_FloatFloat_ReturnValue) == 0x000560, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPiece_Anim_BP) == 0x000568, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPiece_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_4) == 0x000570, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000574, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable_2) == 0x000578, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000579, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00057C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000580, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue) == 0x000581, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000584, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_16) == 0x000588, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_9) == 0x000590, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeTransform_ReturnValue) == 0x0005A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0005D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate) == 0x0005D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0005E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0005F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Piece) == 0x0005F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Piece' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_7) == 0x000600, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Force_3) == 0x000608, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Force_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_8) == 0x000614, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ActualObject_4) == 0x000620, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ActualObject_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_10) == 0x000628, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Normal_3) == 0x00062C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_6) == 0x000638, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Force_2) == 0x000640, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Force_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_7) == 0x00064C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ActualObject_3) == 0x000658, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ActualObject_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_9) == 0x000660, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Normal_2) == 0x000664, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_5) == 0x000670, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Force_1) == 0x000678, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Force_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_6) == 0x000684, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ActualObject_2) == 0x000690, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ActualObject_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_8) == 0x000698, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Normal_1) == 0x00069C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_4) == 0x0006A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Force) == 0x0006B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Force' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_5) == 0x0006BC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ActualObject_1) == 0x0006C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ActualObject_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_7) == 0x0006D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Normal) == 0x0006D4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Piece) == 0x0006E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_5) == 0x0006E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_17) == 0x0006F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_18) == 0x0006F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Endpoint_2) == 0x000700, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Endpoint_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_3) == 0x00070C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_1) == 0x000718, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000728, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Endpoint_1) == 0x000730, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Endpoint_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_2) == 0x00073C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Endpoint) == 0x000748, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Endpoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction_1) == 0x000754, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_19) == 0x000760, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_7) == 0x000768, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_5) == 0x000770, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_4) == 0x000778, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_6) == 0x000784, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_4) == 0x000788, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_3) == 0x000790, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_5) == 0x00079C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_3) == 0x0007A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_2) == 0x0007A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0007B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0007C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Pawn_Char) == 0x0007C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Pawn_Char' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_6) == 0x0007D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Array_RemoveItem_ReturnValue) == 0x0007D1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimer_ReturnValue) == 0x0007D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_10) == 0x0007E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0007E1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0007E4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_4) == 0x0007E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable_3) == 0x0007EC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SelectObject_ReturnValue) == 0x0007F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Piece_Char) == 0x0007F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_7) == 0x000800, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Piece_Char_1) == 0x000808, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Piece_Char_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_8) == 0x000810, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Count) == 0x000814, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_2) == 0x000818, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_11) == 0x000819, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_3) == 0x00081C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_3) == 0x000820, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000824, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_2) == 0x000828, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount_1) == 0x00082C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Amount) == 0x000830, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000834, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000838, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00083C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_2) == 0x000840, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000850, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_3) == 0x000858, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_3) == 0x000868, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_6) == 0x000870, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ImpulseStrength_3) == 0x000874, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ImpulseStrength_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_2) == 0x000878, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_5) == 0x000880, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ImpulseStrength_2) == 0x000884, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ImpulseStrength_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object_1) == 0x000888, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_4) == 0x000890, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ImpulseStrength_1) == 0x000894, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ImpulseStrength_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Object) == 0x000898, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_3) == 0x0008A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ImpulseStrength) == 0x0008A4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ImpulseStrength' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_12) == 0x0008A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Tie) == 0x0008A9, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Tie' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Winner) == 0x0008AA, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Winner' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Black) == 0x0008AB, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Black' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_4) == 0x0008AC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_13) == 0x0008AD, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target_5) == 0x0008B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_FMin_ReturnValue) == 0x0008B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_ActualObject) == 0x0008C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_2) == 0x0008C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_struct_Variable) == 0x0008D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Piece_1) == 0x0008E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Piece_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_9) == 0x0008F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_2) == 0x0008F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000910, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000914, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsPlaying_ReturnValue) == 0x000918, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanOR_ReturnValue_1) == 0x000919, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_3) == 0x000920, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_4) == 0x000938, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000948, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_5) == 0x000950, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_6) == 0x000951, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_5) == 0x000954, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000968, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_14) == 0x000970, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_15) == 0x000971, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_7) == 0x000972, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_8) == 0x000973, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_6) == 0x000974, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x000988, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_16) == 0x000990, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_17) == 0x000991, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_struct_Variable_1) == 0x000998, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_18) == 0x0009B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_9) == 0x0009B1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_20) == 0x0009B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_10) == 0x0009C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key) == 0x0009D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_AddToPlayerScreen_ReturnValue) == 0x0009E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target_4) == 0x0009F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target_3) == 0x0009F8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target_2) == 0x000A00, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target_1) == 0x000A08, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_7) == 0x000A10, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x000A20, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_19) == 0x000A28, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_11) == 0x000A29, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_struct_Variable_2) == 0x000A30, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_20) == 0x000A48, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000A4C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x000A50, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_4) == 0x000A58, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_12) == 0x000A70, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_5) == 0x000A78, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_13) == 0x000A90, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x000A91, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000A94, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_14) == 0x000A98, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SelectFloat_ReturnValue_2) == 0x000A9C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue) == 0x000AA0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_21) == 0x000AA1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_1) == 0x000AA2, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_1) == 0x000AA8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_1) == 0x000AC0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_2) == 0x000AC1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_2) == 0x000AC2, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_3) == 0x000AC3, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_4) == 0x000AC4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x000AC5, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_15) == 0x000AC6, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable_4) == 0x000AC7, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_16) == 0x000AC8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000ACC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeTransform_ReturnValue_1) == 0x000AE0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_OwningPlayer) == 0x000B10, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_OwningPlayer' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Create_ReturnValue) == 0x000B18, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Event_EndPlayReason) == 0x000B20, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Select_Default) == 0x000B28, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_SwitchEnum_CmpSuccess_1) == 0x000B30, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_22) == 0x000B31, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000B34, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000B38, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_23) == 0x000B3C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_17) == 0x000B3D, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_CrackValue_2) == 0x000B40, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_CrackValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_CrackValue_1) == 0x000B44, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_CrackValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_CrackValue) == 0x000B48, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_CrackValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeVector_ReturnValue_1) == 0x000B4C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue_4) == 0x000B58, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_NotEqual_FloatFloat_ReturnValue_5) == 0x000B59, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_NotEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_8) == 0x000B5C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Type_4) == 0x000B6C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Type_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_SwitchInteger_CmpSuccess) == 0x000B70, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Type_3) == 0x000B74, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Type_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Type_2) == 0x000B78, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Type_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Type_1) == 0x000B7C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Type_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_byte_Variable_5) == 0x000B80, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_bool_Variable) == 0x000B81, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Select_Default_1) == 0x000B82, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000B83, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_24) == 0x000B84, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_25) == 0x000B85, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_6) == 0x000B88, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_26) == 0x000BA0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetController_ReturnValue_4) == 0x000BA8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetGameInstance_ReturnValue) == 0x000BB0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPlayer_Controller_3) == 0x000BB8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_10) == 0x000BC0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsFPSChess_Game_Instance) == 0x000BC8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsFPSChess_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_11) == 0x000BD0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Create_ReturnValue_1) == 0x000BD8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_AddToPlayerScreen_ReturnValue_1) == 0x000BE0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_AddToPlayerScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Target) == 0x000BE8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_27) == 0x000BF0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetObjectName_ReturnValue) == 0x000BF8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsPlaying_ReturnValue_1) == 0x000C08, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_7) == 0x000C10, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_18) == 0x000C28, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_9) == 0x000C2C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_19) == 0x000C3C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetSocketLocation_ReturnValue) == 0x000C40, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000C4C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000C58, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetSocketLocation_ReturnValue_3) == 0x000C64, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000C70, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000C78, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsRook_Anim_BP) == 0x000C80, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsRook_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_12) == 0x000C88, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsPiece_Anim_BP_1) == 0x000C90, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsPiece_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_13) == 0x000C98, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_struct_Variable_3) == 0x000CA0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_8) == 0x000CB8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location_1) == 0x000CD0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage_1) == 0x000CDC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_2) == 0x000CE0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Location) == 0x000CE8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Damage) == 0x000CF4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy_1) == 0x000CF8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CreateDelegate_OutputDelegate_10) == 0x000D00, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_20) == 0x000D10, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsFalling_ReturnValue) == 0x000D11, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsStandalone_ReturnValue) == 0x000D12, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000D14, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeVector_ReturnValue_2) == 0x000D18, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_5) == 0x000D24, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetGameMapsSettings_ReturnValue) == 0x000D28, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetGameMapsSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsStandalone_ReturnValue_1) == 0x000D30, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetSkipAssigningGamepadToPlayer1_ReturnValue) == 0x000D31, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetSkipAssigningGamepadToPlayer1_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000D38, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_OtherActor) == 0x000D40, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_OtherComp) == 0x000D48, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000D50, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_bFromSweep) == 0x000D54, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_ComponentBoundEvent_SweepResult) == 0x000D58, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_3) == 0x000DE4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000DE8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_6) == 0x000DF4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Arrow) == 0x000DF8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Arrow' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_14) == 0x000E00, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanOR_ReturnValue_2) == 0x000E01, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000E08, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsGameplay_Save) == 0x000E10, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsGameplay_Save' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_15) == 0x000E18, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Sensitivity) == 0x000E1C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Player2) == 0x000E20, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Player2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsStandalone_ReturnValue_2) == 0x000E21, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsStandalone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanXOR_ReturnValue) == 0x000E22, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_21) == 0x000E23, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsStandalone_ReturnValue_3) == 0x000E24, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsStandalone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_28) == 0x000E25, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_NewParam) == 0x000E26, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetPlayerController_ReturnValue) == 0x000E28, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputActionEvent_Key_9) == 0x000E30, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_29) == 0x000E48, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetPlayerController_ReturnValue_1) == 0x000E50, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_30) == 0x000E58, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_31) == 0x000E59, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Message_1) == 0x000E60, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Player1) == 0x000E78, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Player1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_32) == 0x000E79, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetVisibility_ReturnValue) == 0x000E7A, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_7) == 0x000E7B, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000E7C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Message) == 0x000E80, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_33) == 0x000E98, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_34) == 0x000E99, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_4) == 0x000E9A, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_35) == 0x000E9B, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_36) == 0x000E9C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_37) == 0x000E9D, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetAllActorsOfClass_OutActors) == 0x000EA0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Array_Get_Item) == 0x000EB0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_38) == 0x000EB8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_39) == 0x000EB9, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_22) == 0x000EBA, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_40) == 0x000EBB, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_21) == 0x000EC0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetDefaultCamera_Default_Camera) == 0x000EC8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetDefaultCamera_Default_Camera' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000ED0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_GetDefaultCamera_Default_Camera_1) == 0x000EE0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_GetDefaultCamera_Default_Camera_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x000EE8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000EF0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_CalcShootDirection_Shoot_Direction) == 0x000EFC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_CalcShootDirection_Shoot_Direction' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Add_VectorVector_ReturnValue) == 0x000F08, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_LineTraceSingle_OutHit) == 0x000F14, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_LineTraceSingle_ReturnValue) == 0x000FA0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_CalcShootDirection_Shoot_Direction_1) == 0x000FA4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_CalcShootDirection_Shoot_Direction_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000FB0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000FB1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Time_1) == 0x000FB4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Distance_1) == 0x000FB8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Location_1) == 0x000FBC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000FC8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_Normal_1) == 0x000FD4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000FE0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_PhysMat_1) == 0x000FF0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitActor_1) == 0x000FF8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitComponent_1) == 0x001000, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitBoneName_1) == 0x001008, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_HitItem_1) == 0x001010, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_FaceIndex_1) == 0x001014, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_TraceStart_1) == 0x001018, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakHitResult_TraceEnd_1) == 0x001024, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_CalcShootDirection_Shoot_Direction_2) == 0x001030, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_CalcShootDirection_Shoot_Direction_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SelectVector_ReturnValue) == 0x00103C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x001048, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_ComponentHasTag_ReturnValue_1) == 0x001049, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_ComponentHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_ActorHasTag_ReturnValue) == 0x00104A, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_5) == 0x00104B, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Destructible) == 0x001050, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_16) == 0x001058, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_8) == 0x001059, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_AsBP_Piece_Char_2) == 0x001060, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_AsBP_Piece_Char_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_DynamicCast_bSuccess_17) == 0x001068, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00106C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_SpawnDecalAttached_ReturnValue) == 0x001078, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_PointInHead_In_Head) == 0x001080, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_PointInHead_In_Head' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_IsValid_ReturnValue_41) == 0x001081, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x001084, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x001088, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_22) == 0x001090, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x001098, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_FClamp_ReturnValue) == 0x00109C, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Type) == 0x0010A0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0010A4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_SwitchInteger_CmpSuccess_1) == 0x0010A8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x0010A9, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_SwitchInteger_CmpSuccess_2) == 0x0010AA, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_23) == 0x0010B0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue_1) == 0x0010B8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_InputAxisEvent_AxisValue) == 0x0010BC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakVector2D_X) == 0x0010C0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakVector2D_Y) == 0x0010C4, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakVector2D_X_1) == 0x0010C8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BreakVector2D_Y_1) == 0x0010CC, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeVector2D_ReturnValue) == 0x0010D0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_MakeVector2D_ReturnValue_1) == 0x0010D8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_9) == 0x0010E0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_HasAuthority_ReturnValue_23) == 0x0010E1, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_HasAuthority_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_Not_PreBool_ReturnValue_6) == 0x0010E2, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_BooleanAND_ReturnValue_10) == 0x0010E3, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_Enemy) == 0x0010E8, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_CustomEvent_direction) == 0x0010F0, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_CustomEvent_direction' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, Temp_object_Variable_24) == 0x001100, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Select_Default_2) == 0x001108, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Select_Default_3) == 0x001110, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, K2Node_Select_Default_4) == 0x001118, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x001120, "Member 'BP_PieceChar_C_ExecuteUbergraph_BP_PieceChar::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SpecialDamageEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_SpecialDamageEffects final
{
public:
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_SpecialDamageEffects) == 0x000008, "Wrong alignment on BP_PieceChar_C_SpecialDamageEffects");
static_assert(sizeof(BP_PieceChar_C_SpecialDamageEffects) == 0x000018, "Wrong size on BP_PieceChar_C_SpecialDamageEffects");
static_assert(offsetof(BP_PieceChar_C_SpecialDamageEffects, Enemy) == 0x000000, "Member 'BP_PieceChar_C_SpecialDamageEffects::Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_SpecialDamageEffects, Direction) == 0x000008, "Member 'BP_PieceChar_C_SpecialDamageEffects::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.HitmarkerStart
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_HitmarkerStart final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_HitmarkerStart) == 0x000004, "Wrong alignment on BP_PieceChar_C_HitmarkerStart");
static_assert(sizeof(BP_PieceChar_C_HitmarkerStart) == 0x000004, "Wrong size on BP_PieceChar_C_HitmarkerStart");
static_assert(offsetof(BP_PieceChar_C_HitmarkerStart, Type) == 0x000000, "Member 'BP_PieceChar_C_HitmarkerStart::Type' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SendMessageToPlayers
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_SendMessageToPlayers final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PieceChar_C_SendMessageToPlayers) == 0x000008, "Wrong alignment on BP_PieceChar_C_SendMessageToPlayers");
static_assert(sizeof(BP_PieceChar_C_SendMessageToPlayers) == 0x000018, "Wrong size on BP_PieceChar_C_SendMessageToPlayers");
static_assert(offsetof(BP_PieceChar_C_SendMessageToPlayers, Message) == 0x000000, "Member 'BP_PieceChar_C_SendMessageToPlayers::Message' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Send New Message
// 0x0020 (0x0020 - 0x0000)
struct BP_PieceChar_C_Send_New_Message final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Player1;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_Send_New_Message) == 0x000008, "Wrong alignment on BP_PieceChar_C_Send_New_Message");
static_assert(sizeof(BP_PieceChar_C_Send_New_Message) == 0x000020, "Wrong size on BP_PieceChar_C_Send_New_Message");
static_assert(offsetof(BP_PieceChar_C_Send_New_Message, Message) == 0x000000, "Member 'BP_PieceChar_C_Send_New_Message::Message' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_Send_New_Message, Player1) == 0x000018, "Member 'BP_PieceChar_C_Send_New_Message::Player1' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Y invert
// 0x0001 (0x0001 - 0x0000)
struct BP_PieceChar_C_Y_invert final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_Y_invert) == 0x000001, "Wrong alignment on BP_PieceChar_C_Y_invert");
static_assert(sizeof(BP_PieceChar_C_Y_invert) == 0x000001, "Wrong size on BP_PieceChar_C_Y_invert");
static_assert(offsetof(BP_PieceChar_C_Y_invert, NewParam) == 0x000000, "Member 'BP_PieceChar_C_Y_invert::NewParam' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.UpdateSensitivity
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_UpdateSensitivity final
{
public:
	float                                         Sensitivity;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player2;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_UpdateSensitivity) == 0x000004, "Wrong alignment on BP_PieceChar_C_UpdateSensitivity");
static_assert(sizeof(BP_PieceChar_C_UpdateSensitivity) == 0x000008, "Wrong size on BP_PieceChar_C_UpdateSensitivity");
static_assert(offsetof(BP_PieceChar_C_UpdateSensitivity, Sensitivity) == 0x000000, "Member 'BP_PieceChar_C_UpdateSensitivity::Sensitivity' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_UpdateSensitivity, Player2) == 0x000004, "Member 'BP_PieceChar_C_UpdateSensitivity::Player2' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_PieceChar_C_BndEvt__BP_PieceChar_BlockingBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.BlockShotServer
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_BlockShotServer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_BlockShotServer) == 0x000008, "Wrong alignment on BP_PieceChar_C_BlockShotServer");
static_assert(sizeof(BP_PieceChar_C_BlockShotServer) == 0x000018, "Wrong size on BP_PieceChar_C_BlockShotServer");
static_assert(offsetof(BP_PieceChar_C_BlockShotServer, Location) == 0x000000, "Member 'BP_PieceChar_C_BlockShotServer::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotServer, Damage) == 0x00000C, "Member 'BP_PieceChar_C_BlockShotServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotServer, Enemy) == 0x000010, "Member 'BP_PieceChar_C_BlockShotServer::Enemy' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.BlockShotMulti
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_BlockShotMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_BlockShotMulti) == 0x000008, "Wrong alignment on BP_PieceChar_C_BlockShotMulti");
static_assert(sizeof(BP_PieceChar_C_BlockShotMulti) == 0x000018, "Wrong size on BP_PieceChar_C_BlockShotMulti");
static_assert(offsetof(BP_PieceChar_C_BlockShotMulti, Location) == 0x000000, "Member 'BP_PieceChar_C_BlockShotMulti::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotMulti, Damage) == 0x00000C, "Member 'BP_PieceChar_C_BlockShotMulti::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotMulti, Enemy) == 0x000010, "Member 'BP_PieceChar_C_BlockShotMulti::Enemy' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DebugAnimation
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_DebugAnimation final
{
public:
	class UActorSequenceComponent*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DebugAnimation) == 0x000008, "Wrong alignment on BP_PieceChar_C_DebugAnimation");
static_assert(sizeof(BP_PieceChar_C_DebugAnimation) == 0x000008, "Wrong size on BP_PieceChar_C_DebugAnimation");
static_assert(offsetof(BP_PieceChar_C_DebugAnimation, Target) == 0x000000, "Member 'BP_PieceChar_C_DebugAnimation::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordHitmarker
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordHitmarker final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordHitmarker) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordHitmarker");
static_assert(sizeof(BP_PieceChar_C_RecordHitmarker) == 0x000004, "Wrong size on BP_PieceChar_C_RecordHitmarker");
static_assert(offsetof(BP_PieceChar_C_RecordHitmarker, Type) == 0x000000, "Member 'BP_PieceChar_C_RecordHitmarker::Type' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordHitmarkerServer
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordHitmarkerServer final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordHitmarkerServer) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordHitmarkerServer");
static_assert(sizeof(BP_PieceChar_C_RecordHitmarkerServer) == 0x000004, "Wrong size on BP_PieceChar_C_RecordHitmarkerServer");
static_assert(offsetof(BP_PieceChar_C_RecordHitmarkerServer, Type) == 0x000000, "Member 'BP_PieceChar_C_RecordHitmarkerServer::Type' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordHitmarkerMulti
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordHitmarkerMulti final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordHitmarkerMulti) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordHitmarkerMulti");
static_assert(sizeof(BP_PieceChar_C_RecordHitmarkerMulti) == 0x000004, "Wrong size on BP_PieceChar_C_RecordHitmarkerMulti");
static_assert(offsetof(BP_PieceChar_C_RecordHitmarkerMulti, Type) == 0x000000, "Member 'BP_PieceChar_C_RecordHitmarkerMulti::Type' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordHitmarkerAll
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordHitmarkerAll final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordHitmarkerAll) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordHitmarkerAll");
static_assert(sizeof(BP_PieceChar_C_RecordHitmarkerAll) == 0x000004, "Wrong size on BP_PieceChar_C_RecordHitmarkerAll");
static_assert(offsetof(BP_PieceChar_C_RecordHitmarkerAll, Type) == 0x000000, "Member 'BP_PieceChar_C_RecordHitmarkerAll::Type' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordCracksLocal
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordCracksLocal final
{
public:
	float                                         CrackValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordCracksLocal) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordCracksLocal");
static_assert(sizeof(BP_PieceChar_C_RecordCracksLocal) == 0x000004, "Wrong size on BP_PieceChar_C_RecordCracksLocal");
static_assert(offsetof(BP_PieceChar_C_RecordCracksLocal, CrackValue) == 0x000000, "Member 'BP_PieceChar_C_RecordCracksLocal::CrackValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordCracksMulti
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordCracksMulti final
{
public:
	float                                         CrackValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordCracksMulti) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordCracksMulti");
static_assert(sizeof(BP_PieceChar_C_RecordCracksMulti) == 0x000004, "Wrong size on BP_PieceChar_C_RecordCracksMulti");
static_assert(offsetof(BP_PieceChar_C_RecordCracksMulti, CrackValue) == 0x000000, "Member 'BP_PieceChar_C_RecordCracksMulti::CrackValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.RecordCracksServer
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_RecordCracksServer final
{
public:
	float                                         CrackValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_RecordCracksServer) == 0x000004, "Wrong alignment on BP_PieceChar_C_RecordCracksServer");
static_assert(sizeof(BP_PieceChar_C_RecordCracksServer) == 0x000004, "Wrong size on BP_PieceChar_C_RecordCracksServer");
static_assert(offsetof(BP_PieceChar_C_RecordCracksServer, CrackValue) == 0x000000, "Member 'BP_PieceChar_C_RecordCracksServer::CrackValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PieceChar_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PieceChar_C_ReceiveEndPlay");
static_assert(sizeof(BP_PieceChar_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PieceChar_C_ReceiveEndPlay");
static_assert(offsetof(BP_PieceChar_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PieceChar_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.CreateHUD
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_CreateHUD final
{
public:
	class APlayerController*                      OwningPlayer_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_CreateHUD) == 0x000008, "Wrong alignment on BP_PieceChar_C_CreateHUD");
static_assert(sizeof(BP_PieceChar_C_CreateHUD) == 0x000008, "Wrong size on BP_PieceChar_C_CreateHUD");
static_assert(offsetof(BP_PieceChar_C_CreateHUD, OwningPlayer_0) == 0x000000, "Member 'BP_PieceChar_C_CreateHUD::OwningPlayer_0' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.PlayAnimationSequence
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_PlayAnimationSequence final
{
public:
	class UMovieSceneSequencePlayer*              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_PlayAnimationSequence) == 0x000008, "Wrong alignment on BP_PieceChar_C_PlayAnimationSequence");
static_assert(sizeof(BP_PieceChar_C_PlayAnimationSequence) == 0x000008, "Wrong size on BP_PieceChar_C_PlayAnimationSequence");
static_assert(offsetof(BP_PieceChar_C_PlayAnimationSequence, Target) == 0x000000, "Member 'BP_PieceChar_C_PlayAnimationSequence::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.PlayAnimationMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_PlayAnimationMulti final
{
public:
	class UMovieSceneSequencePlayer*              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_PlayAnimationMulti) == 0x000008, "Wrong alignment on BP_PieceChar_C_PlayAnimationMulti");
static_assert(sizeof(BP_PieceChar_C_PlayAnimationMulti) == 0x000008, "Wrong size on BP_PieceChar_C_PlayAnimationMulti");
static_assert(offsetof(BP_PieceChar_C_PlayAnimationMulti, Target) == 0x000000, "Member 'BP_PieceChar_C_PlayAnimationMulti::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.PlayAnimationServer
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_PlayAnimationServer final
{
public:
	class UMovieSceneSequencePlayer*              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_PlayAnimationServer) == 0x000008, "Wrong alignment on BP_PieceChar_C_PlayAnimationServer");
static_assert(sizeof(BP_PieceChar_C_PlayAnimationServer) == 0x000008, "Wrong size on BP_PieceChar_C_PlayAnimationServer");
static_assert(offsetof(BP_PieceChar_C_PlayAnimationServer, Target) == 0x000000, "Member 'BP_PieceChar_C_PlayAnimationServer::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.PlayAnimationAll
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_PlayAnimationAll final
{
public:
	class UMovieSceneSequencePlayer*              Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_PlayAnimationAll) == 0x000008, "Wrong alignment on BP_PieceChar_C_PlayAnimationAll");
static_assert(sizeof(BP_PieceChar_C_PlayAnimationAll) == 0x000008, "Wrong size on BP_PieceChar_C_PlayAnimationAll");
static_assert(offsetof(BP_PieceChar_C_PlayAnimationAll, Target) == 0x000000, "Member 'BP_PieceChar_C_PlayAnimationAll::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DamageProjectilePiece
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_DamageProjectilePiece final
{
public:
	class UObject*                                ActualObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DamageProjectilePiece) == 0x000008, "Wrong alignment on BP_PieceChar_C_DamageProjectilePiece");
static_assert(sizeof(BP_PieceChar_C_DamageProjectilePiece) == 0x000010, "Wrong size on BP_PieceChar_C_DamageProjectilePiece");
static_assert(offsetof(BP_PieceChar_C_DamageProjectilePiece, ActualObject) == 0x000000, "Member 'BP_PieceChar_C_DamageProjectilePiece::ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageProjectilePiece, Damage) == 0x000008, "Member 'BP_PieceChar_C_DamageProjectilePiece::Damage' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ExplodeEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_ExplodeEnemy final
{
public:
	class ABP_PieceChar_C*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ExplodeEnemy) == 0x000008, "Wrong alignment on BP_PieceChar_C_ExplodeEnemy");
static_assert(sizeof(BP_PieceChar_C_ExplodeEnemy) == 0x000008, "Wrong size on BP_PieceChar_C_ExplodeEnemy");
static_assert(offsetof(BP_PieceChar_C_ExplodeEnemy, Target) == 0x000000, "Member 'BP_PieceChar_C_ExplodeEnemy::Target' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Set Winner
// 0x0003 (0x0003 - 0x0000)
struct BP_PieceChar_C_Set_Winner final
{
public:
	bool                                          Tie;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPieceTypes                                   Winner;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Black_0;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_Set_Winner) == 0x000001, "Wrong alignment on BP_PieceChar_C_Set_Winner");
static_assert(sizeof(BP_PieceChar_C_Set_Winner) == 0x000003, "Wrong size on BP_PieceChar_C_Set_Winner");
static_assert(offsetof(BP_PieceChar_C_Set_Winner, Tie) == 0x000000, "Member 'BP_PieceChar_C_Set_Winner::Tie' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_Set_Winner, Winner) == 0x000001, "Member 'BP_PieceChar_C_Set_Winner::Winner' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_Set_Winner, Black_0) == 0x000002, "Member 'BP_PieceChar_C_Set_Winner::Black_0' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootDestructableAll
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_ShootDestructableAll final
{
public:
	class ABP_Destructible_C*                     Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseStrength;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootDestructableAll) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootDestructableAll");
static_assert(sizeof(BP_PieceChar_C_ShootDestructableAll) == 0x000010, "Wrong size on BP_PieceChar_C_ShootDestructableAll");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableAll, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootDestructableAll::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableAll, Damage) == 0x000008, "Member 'BP_PieceChar_C_ShootDestructableAll::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableAll, ImpulseStrength) == 0x00000C, "Member 'BP_PieceChar_C_ShootDestructableAll::ImpulseStrength' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootDestructableServer
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_ShootDestructableServer final
{
public:
	class ABP_Destructible_C*                     Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseStrength;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootDestructableServer) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootDestructableServer");
static_assert(sizeof(BP_PieceChar_C_ShootDestructableServer) == 0x000010, "Wrong size on BP_PieceChar_C_ShootDestructableServer");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableServer, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootDestructableServer::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableServer, Damage) == 0x000008, "Member 'BP_PieceChar_C_ShootDestructableServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableServer, ImpulseStrength) == 0x00000C, "Member 'BP_PieceChar_C_ShootDestructableServer::ImpulseStrength' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootDestructableMulti
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_ShootDestructableMulti final
{
public:
	class ABP_Destructible_C*                     Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseStrength;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootDestructableMulti) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootDestructableMulti");
static_assert(sizeof(BP_PieceChar_C_ShootDestructableMulti) == 0x000010, "Wrong size on BP_PieceChar_C_ShootDestructableMulti");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableMulti, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootDestructableMulti::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableMulti, Damage) == 0x000008, "Member 'BP_PieceChar_C_ShootDestructableMulti::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructableMulti, ImpulseStrength) == 0x00000C, "Member 'BP_PieceChar_C_ShootDestructableMulti::ImpulseStrength' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootDestructable
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_ShootDestructable final
{
public:
	class ABP_Destructible_C*                     Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseStrength;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootDestructable) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootDestructable");
static_assert(sizeof(BP_PieceChar_C_ShootDestructable) == 0x000010, "Wrong size on BP_PieceChar_C_ShootDestructable");
static_assert(offsetof(BP_PieceChar_C_ShootDestructable, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootDestructable::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructable, Damage) == 0x000008, "Member 'BP_PieceChar_C_ShootDestructable::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootDestructable, ImpulseStrength) == 0x00000C, "Member 'BP_PieceChar_C_ShootDestructable::ImpulseStrength' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.HealAll
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_HealAll final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_HealAll) == 0x000004, "Wrong alignment on BP_PieceChar_C_HealAll");
static_assert(sizeof(BP_PieceChar_C_HealAll) == 0x000004, "Wrong size on BP_PieceChar_C_HealAll");
static_assert(offsetof(BP_PieceChar_C_HealAll, Amount) == 0x000000, "Member 'BP_PieceChar_C_HealAll::Amount' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.HealServer
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_HealServer final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_HealServer) == 0x000004, "Wrong alignment on BP_PieceChar_C_HealServer");
static_assert(sizeof(BP_PieceChar_C_HealServer) == 0x000004, "Wrong size on BP_PieceChar_C_HealServer");
static_assert(offsetof(BP_PieceChar_C_HealServer, Amount) == 0x000000, "Member 'BP_PieceChar_C_HealServer::Amount' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.HealMulti
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_HealMulti final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_HealMulti) == 0x000004, "Wrong alignment on BP_PieceChar_C_HealMulti");
static_assert(sizeof(BP_PieceChar_C_HealMulti) == 0x000004, "Wrong size on BP_PieceChar_C_HealMulti");
static_assert(offsetof(BP_PieceChar_C_HealMulti, Amount) == 0x000000, "Member 'BP_PieceChar_C_HealMulti::Amount' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Heal
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_Heal final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_Heal) == 0x000004, "Wrong alignment on BP_PieceChar_C_Heal");
static_assert(sizeof(BP_PieceChar_C_Heal) == 0x000004, "Wrong size on BP_PieceChar_C_Heal");
static_assert(offsetof(BP_PieceChar_C_Heal, Amount) == 0x000000, "Member 'BP_PieceChar_C_Heal::Amount' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SetCountdownOnClient
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_SetCountdownOnClient final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_SetCountdownOnClient) == 0x000004, "Wrong alignment on BP_PieceChar_C_SetCountdownOnClient");
static_assert(sizeof(BP_PieceChar_C_SetCountdownOnClient) == 0x000004, "Wrong size on BP_PieceChar_C_SetCountdownOnClient");
static_assert(offsetof(BP_PieceChar_C_SetCountdownOnClient, Count) == 0x000000, "Member 'BP_PieceChar_C_SetCountdownOnClient::Count' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.UpdateCracks
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_UpdateCracks final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_UpdateCracks) == 0x000004, "Wrong alignment on BP_PieceChar_C_UpdateCracks");
static_assert(sizeof(BP_PieceChar_C_UpdateCracks) == 0x000004, "Wrong size on BP_PieceChar_C_UpdateCracks");
static_assert(offsetof(BP_PieceChar_C_UpdateCracks, Amount) == 0x000000, "Member 'BP_PieceChar_C_UpdateCracks::Amount' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DamageAll
// 0x0020 (0x0020 - 0x0000)
struct BP_PieceChar_C_DamageAll final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DamageAll) == 0x000008, "Wrong alignment on BP_PieceChar_C_DamageAll");
static_assert(sizeof(BP_PieceChar_C_DamageAll) == 0x000020, "Wrong size on BP_PieceChar_C_DamageAll");
static_assert(offsetof(BP_PieceChar_C_DamageAll, Amount) == 0x000000, "Member 'BP_PieceChar_C_DamageAll::Amount' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageAll, Enemy) == 0x000008, "Member 'BP_PieceChar_C_DamageAll::Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageAll, Location) == 0x000010, "Member 'BP_PieceChar_C_DamageAll::Location' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DamageMulti
// 0x0020 (0x0020 - 0x0000)
struct BP_PieceChar_C_DamageMulti final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DamageMulti) == 0x000008, "Wrong alignment on BP_PieceChar_C_DamageMulti");
static_assert(sizeof(BP_PieceChar_C_DamageMulti) == 0x000020, "Wrong size on BP_PieceChar_C_DamageMulti");
static_assert(offsetof(BP_PieceChar_C_DamageMulti, Amount) == 0x000000, "Member 'BP_PieceChar_C_DamageMulti::Amount' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageMulti, Enemy) == 0x000008, "Member 'BP_PieceChar_C_DamageMulti::Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageMulti, Location) == 0x000010, "Member 'BP_PieceChar_C_DamageMulti::Location' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DamageServer
// 0x0020 (0x0020 - 0x0000)
struct BP_PieceChar_C_DamageServer final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DamageServer) == 0x000008, "Wrong alignment on BP_PieceChar_C_DamageServer");
static_assert(sizeof(BP_PieceChar_C_DamageServer) == 0x000020, "Wrong size on BP_PieceChar_C_DamageServer");
static_assert(offsetof(BP_PieceChar_C_DamageServer, Amount) == 0x000000, "Member 'BP_PieceChar_C_DamageServer::Amount' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageServer, Enemy) == 0x000008, "Member 'BP_PieceChar_C_DamageServer::Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageServer, Location) == 0x000010, "Member 'BP_PieceChar_C_DamageServer::Location' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootEffectsAll
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_ShootEffectsAll final
{
public:
	struct FVector                                Endpoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootEffectsAll) == 0x000004, "Wrong alignment on BP_PieceChar_C_ShootEffectsAll");
static_assert(sizeof(BP_PieceChar_C_ShootEffectsAll) == 0x000018, "Wrong size on BP_PieceChar_C_ShootEffectsAll");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsAll, Endpoint) == 0x000000, "Member 'BP_PieceChar_C_ShootEffectsAll::Endpoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsAll, Direction) == 0x00000C, "Member 'BP_PieceChar_C_ShootEffectsAll::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootEffectsMulti
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_ShootEffectsMulti final
{
public:
	struct FVector                                Endpoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootEffectsMulti) == 0x000004, "Wrong alignment on BP_PieceChar_C_ShootEffectsMulti");
static_assert(sizeof(BP_PieceChar_C_ShootEffectsMulti) == 0x000018, "Wrong size on BP_PieceChar_C_ShootEffectsMulti");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsMulti, Endpoint) == 0x000000, "Member 'BP_PieceChar_C_ShootEffectsMulti::Endpoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsMulti, Direction) == 0x00000C, "Member 'BP_PieceChar_C_ShootEffectsMulti::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootEffectsServer
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_ShootEffectsServer final
{
public:
	struct FVector                                Endpoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootEffectsServer) == 0x000004, "Wrong alignment on BP_PieceChar_C_ShootEffectsServer");
static_assert(sizeof(BP_PieceChar_C_ShootEffectsServer) == 0x000018, "Wrong size on BP_PieceChar_C_ShootEffectsServer");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsServer, Endpoint) == 0x000000, "Member 'BP_PieceChar_C_ShootEffectsServer::Endpoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootEffectsServer, Direction) == 0x00000C, "Member 'BP_PieceChar_C_ShootEffectsServer::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootObjectAll
// 0x0038 (0x0038 - 0x0000)
struct BP_PieceChar_C_ShootObjectAll final
{
public:
	class UPrimitiveComponent*                    Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ActualObject;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootObjectAll) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootObjectAll");
static_assert(sizeof(BP_PieceChar_C_ShootObjectAll) == 0x000038, "Wrong size on BP_PieceChar_C_ShootObjectAll");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootObjectAll::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, Force) == 0x000008, "Member 'BP_PieceChar_C_ShootObjectAll::Force' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, Location) == 0x000014, "Member 'BP_PieceChar_C_ShootObjectAll::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, ActualObject) == 0x000020, "Member 'BP_PieceChar_C_ShootObjectAll::ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, Damage) == 0x000028, "Member 'BP_PieceChar_C_ShootObjectAll::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectAll, Normal) == 0x00002C, "Member 'BP_PieceChar_C_ShootObjectAll::Normal' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootObjectMulti
// 0x0038 (0x0038 - 0x0000)
struct BP_PieceChar_C_ShootObjectMulti final
{
public:
	class UPrimitiveComponent*                    Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ActualObject;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootObjectMulti) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootObjectMulti");
static_assert(sizeof(BP_PieceChar_C_ShootObjectMulti) == 0x000038, "Wrong size on BP_PieceChar_C_ShootObjectMulti");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootObjectMulti::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, Force) == 0x000008, "Member 'BP_PieceChar_C_ShootObjectMulti::Force' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, Location) == 0x000014, "Member 'BP_PieceChar_C_ShootObjectMulti::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, ActualObject) == 0x000020, "Member 'BP_PieceChar_C_ShootObjectMulti::ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, Damage) == 0x000028, "Member 'BP_PieceChar_C_ShootObjectMulti::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectMulti, Normal) == 0x00002C, "Member 'BP_PieceChar_C_ShootObjectMulti::Normal' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootObjectServer
// 0x0038 (0x0038 - 0x0000)
struct BP_PieceChar_C_ShootObjectServer final
{
public:
	class UPrimitiveComponent*                    Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ActualObject;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootObjectServer) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootObjectServer");
static_assert(sizeof(BP_PieceChar_C_ShootObjectServer) == 0x000038, "Wrong size on BP_PieceChar_C_ShootObjectServer");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootObjectServer::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, Force) == 0x000008, "Member 'BP_PieceChar_C_ShootObjectServer::Force' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, Location) == 0x000014, "Member 'BP_PieceChar_C_ShootObjectServer::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, ActualObject) == 0x000020, "Member 'BP_PieceChar_C_ShootObjectServer::ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, Damage) == 0x000028, "Member 'BP_PieceChar_C_ShootObjectServer::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObjectServer, Normal) == 0x00002C, "Member 'BP_PieceChar_C_ShootObjectServer::Normal' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootObject
// 0x0038 (0x0038 - 0x0000)
struct BP_PieceChar_C_ShootObject final
{
public:
	class UPrimitiveComponent*                    Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Force;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ActualObject;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x002C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootObject) == 0x000008, "Wrong alignment on BP_PieceChar_C_ShootObject");
static_assert(sizeof(BP_PieceChar_C_ShootObject) == 0x000038, "Wrong size on BP_PieceChar_C_ShootObject");
static_assert(offsetof(BP_PieceChar_C_ShootObject, Object) == 0x000000, "Member 'BP_PieceChar_C_ShootObject::Object' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObject, Force) == 0x000008, "Member 'BP_PieceChar_C_ShootObject::Force' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObject, Location) == 0x000014, "Member 'BP_PieceChar_C_ShootObject::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObject, ActualObject) == 0x000020, "Member 'BP_PieceChar_C_ShootObject::ActualObject' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObject, Damage) == 0x000028, "Member 'BP_PieceChar_C_ShootObject::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootObject, Normal) == 0x00002C, "Member 'BP_PieceChar_C_ShootObject::Normal' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DieClient
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_DieClient final
{
public:
	class ABP_PieceChar_C*                        Piece;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DieClient) == 0x000008, "Wrong alignment on BP_PieceChar_C_DieClient");
static_assert(sizeof(BP_PieceChar_C_DieClient) == 0x000008, "Wrong size on BP_PieceChar_C_DieClient");
static_assert(offsetof(BP_PieceChar_C_DieClient, Piece) == 0x000000, "Member 'BP_PieceChar_C_DieClient::Piece' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.BlockShotLocal
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_BlockShotLocal final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_BlockShotLocal) == 0x000008, "Wrong alignment on BP_PieceChar_C_BlockShotLocal");
static_assert(sizeof(BP_PieceChar_C_BlockShotLocal) == 0x000018, "Wrong size on BP_PieceChar_C_BlockShotLocal");
static_assert(offsetof(BP_PieceChar_C_BlockShotLocal, Location) == 0x000000, "Member 'BP_PieceChar_C_BlockShotLocal::Location' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotLocal, Damage) == 0x00000C, "Member 'BP_PieceChar_C_BlockShotLocal::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_BlockShotLocal, Enemy) == 0x000010, "Member 'BP_PieceChar_C_BlockShotLocal::Enemy' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SetGunRotation
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_SetGunRotation final
{
public:
	struct FRotator                               Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_SetGunRotation) == 0x000004, "Wrong alignment on BP_PieceChar_C_SetGunRotation");
static_assert(sizeof(BP_PieceChar_C_SetGunRotation) == 0x00000C, "Wrong size on BP_PieceChar_C_SetGunRotation");
static_assert(offsetof(BP_PieceChar_C_SetGunRotation, Vector) == 0x000000, "Member 'BP_PieceChar_C_SetGunRotation::Vector' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.StopShooting
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_StopShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_StopShooting) == 0x000004, "Wrong alignment on BP_PieceChar_C_StopShooting");
static_assert(sizeof(BP_PieceChar_C_StopShooting) == 0x00000C, "Wrong size on BP_PieceChar_C_StopShooting");
static_assert(offsetof(BP_PieceChar_C_StopShooting, Direction) == 0x000000, "Member 'BP_PieceChar_C_StopShooting::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.StartShooting
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_StartShooting final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_StartShooting) == 0x000004, "Wrong alignment on BP_PieceChar_C_StartShooting");
static_assert(sizeof(BP_PieceChar_C_StartShooting) == 0x00000C, "Wrong size on BP_PieceChar_C_StartShooting");
static_assert(offsetof(BP_PieceChar_C_StartShooting, Direction) == 0x000000, "Member 'BP_PieceChar_C_StartShooting::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.MoveChar
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_MoveChar final
{
public:
	struct FVector                                Input_Vector;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_MoveChar) == 0x000004, "Wrong alignment on BP_PieceChar_C_MoveChar");
static_assert(sizeof(BP_PieceChar_C_MoveChar) == 0x00000C, "Wrong size on BP_PieceChar_C_MoveChar");
static_assert(offsetof(BP_PieceChar_C_MoveChar, Input_Vector) == 0x000000, "Member 'BP_PieceChar_C_MoveChar::Input_Vector' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.DamageEnemy
// 0x0020 (0x0020 - 0x0000)
struct BP_PieceChar_C_DamageEnemy final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_DamageEnemy) == 0x000008, "Wrong alignment on BP_PieceChar_C_DamageEnemy");
static_assert(sizeof(BP_PieceChar_C_DamageEnemy) == 0x000020, "Wrong size on BP_PieceChar_C_DamageEnemy");
static_assert(offsetof(BP_PieceChar_C_DamageEnemy, Amount) == 0x000000, "Member 'BP_PieceChar_C_DamageEnemy::Amount' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageEnemy, Enemy) == 0x000008, "Member 'BP_PieceChar_C_DamageEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_DamageEnemy, Location) == 0x000010, "Member 'BP_PieceChar_C_DamageEnemy::Location' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SetRot
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_SetRot final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_SetRot) == 0x000004, "Wrong alignment on BP_PieceChar_C_SetRot");
static_assert(sizeof(BP_PieceChar_C_SetRot) == 0x00000C, "Wrong size on BP_PieceChar_C_SetRot");
static_assert(offsetof(BP_PieceChar_C_SetRot, Rot) == 0x000000, "Member 'BP_PieceChar_C_SetRot::Rot' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_ShootEffects final
{
public:
	struct FVector                                Endpoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootEffects) == 0x000004, "Wrong alignment on BP_PieceChar_C_ShootEffects");
static_assert(sizeof(BP_PieceChar_C_ShootEffects) == 0x000018, "Wrong size on BP_PieceChar_C_ShootEffects");
static_assert(offsetof(BP_PieceChar_C_ShootEffects, Endpoint) == 0x000000, "Member 'BP_PieceChar_C_ShootEffects::Endpoint' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ShootEffects, Direction) == 0x00000C, "Member 'BP_PieceChar_C_ShootEffects::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ShootDirection
// 0x000C (0x000C - 0x0000)
struct BP_PieceChar_C_ShootDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ShootDirection) == 0x000004, "Wrong alignment on BP_PieceChar_C_ShootDirection");
static_assert(sizeof(BP_PieceChar_C_ShootDirection) == 0x00000C, "Wrong size on BP_PieceChar_C_ShootDirection");
static_assert(offsetof(BP_PieceChar_C_ShootDirection, Direction) == 0x000000, "Member 'BP_PieceChar_C_ShootDirection::Direction' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PieceChar_C_ReceiveTick");
static_assert(sizeof(BP_PieceChar_C_ReceiveTick) == 0x000004, "Wrong size on BP_PieceChar_C_ReceiveTick");
static_assert(offsetof(BP_PieceChar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PieceChar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Unlock Abilities
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_Unlock_Abilities final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_Unlock_Abilities) == 0x000004, "Wrong alignment on BP_PieceChar_C_Unlock_Abilities");
static_assert(sizeof(BP_PieceChar_C_Unlock_Abilities) == 0x000004, "Wrong size on BP_PieceChar_C_Unlock_Abilities");
static_assert(offsetof(BP_PieceChar_C_Unlock_Abilities, Delay) == 0x000000, "Member 'BP_PieceChar_C_Unlock_Abilities::Delay' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SetGlowingPlayback
// 0x0001 (0x0001 - 0x0000)
struct BP_PieceChar_C_SetGlowingPlayback final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_SetGlowingPlayback) == 0x000001, "Wrong alignment on BP_PieceChar_C_SetGlowingPlayback");
static_assert(sizeof(BP_PieceChar_C_SetGlowingPlayback) == 0x000001, "Wrong size on BP_PieceChar_C_SetGlowingPlayback");
static_assert(offsetof(BP_PieceChar_C_SetGlowingPlayback, bValue) == 0x000000, "Member 'BP_PieceChar_C_SetGlowingPlayback::bValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.SetGlowing
// 0x0001 (0x0001 - 0x0000)
struct BP_PieceChar_C_SetGlowing final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_SetGlowing) == 0x000001, "Wrong alignment on BP_PieceChar_C_SetGlowing");
static_assert(sizeof(BP_PieceChar_C_SetGlowing) == 0x000001, "Wrong size on BP_PieceChar_C_SetGlowing");
static_assert(offsetof(BP_PieceChar_C_SetGlowing, bValue) == 0x000000, "Member 'BP_PieceChar_C_SetGlowing::bValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PieceChar_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PieceChar_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_PieceChar_C_ReceiveHit");
static_assert(sizeof(BP_PieceChar_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_PieceChar_C_ReceiveHit");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_PieceChar_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, Other) == 0x000008, "Member 'BP_PieceChar_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_PieceChar_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_PieceChar_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_PieceChar_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_PieceChar_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_PieceChar_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_PieceChar_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Pitch_K2Node_InputAxisEvent_8
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Pitch_K2Node_InputAxisEvent_8::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Yaw_K2Node_InputAxisEvent_7
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Yaw_K2Node_InputAxisEvent_7::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Left_K2Node_InputAxisEvent_6
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Left_K2Node_InputAxisEvent_6::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Backward_K2Node_InputAxisEvent_5
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Backward_K2Node_InputAxisEvent_5::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Forward_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Forward_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpAxisEvt_Right_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3");
static_assert(sizeof(BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3");
static_assert(offsetof(BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'BP_PieceChar_C_InpAxisEvt_Right_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Block_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Block_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Block_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Fire_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Fire_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Fire_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Movement Ability_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Movement_Ability_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Main Ability_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Main_Ability_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Jump_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.InpActEvt_Jump_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9");
static_assert(sizeof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9");
static_assert(offsetof(BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'BP_PieceChar_C_InpActEvt_Jump_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.EnterCombatMode
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_EnterCombatMode final
{
public:
	class ABP_Piece_C*                            StaticChild;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_EnterCombatMode) == 0x000008, "Wrong alignment on BP_PieceChar_C_EnterCombatMode");
static_assert(sizeof(BP_PieceChar_C_EnterCombatMode) == 0x000008, "Wrong size on BP_PieceChar_C_EnterCombatMode");
static_assert(offsetof(BP_PieceChar_C_EnterCombatMode, StaticChild) == 0x000000, "Member 'BP_PieceChar_C_EnterCombatMode::StaticChild' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.Exit Combat
// 0x0010 (0x0010 - 0x0000)
struct BP_PieceChar_C_Exit_Combat final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_Exit_Combat) == 0x000008, "Wrong alignment on BP_PieceChar_C_Exit_Combat");
static_assert(sizeof(BP_PieceChar_C_Exit_Combat) == 0x000010, "Wrong size on BP_PieceChar_C_Exit_Combat");
static_assert(offsetof(BP_PieceChar_C_Exit_Combat, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BP_PieceChar_C_Exit_Combat::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_Exit_Combat, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PieceChar_C_Exit_Combat::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.FindClosestFriendlyPiece
// 0x0078 (0x0078 - 0x0000)
struct BP_PieceChar_C_FindClosestFriendlyPiece final
{
public:
	bool                                          PawnsOnly;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            Closest_Piece;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Piece_C*                            ClosestPiece;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Piece_C*>                    FriendlyPieces;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         shortestDistance;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Pawn_C*                             K2Node_DynamicCast_AsBP_Pawn;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_FindClosestFriendlyPiece) == 0x000008, "Wrong alignment on BP_PieceChar_C_FindClosestFriendlyPiece");
static_assert(sizeof(BP_PieceChar_C_FindClosestFriendlyPiece) == 0x000078, "Wrong size on BP_PieceChar_C_FindClosestFriendlyPiece");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, PawnsOnly) == 0x000000, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::PawnsOnly' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, Closest_Piece) == 0x000008, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::Closest_Piece' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, ClosestPiece) == 0x000010, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::ClosestPiece' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, FriendlyPieces) == 0x000018, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::FriendlyPieces' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, shortestDistance) == 0x000028, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::shortestDistance' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, K2Node_DynamicCast_AsBP_Pawn) == 0x000058, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::K2Node_DynamicCast_AsBP_Pawn' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000064, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000070, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_Less_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FindClosestFriendlyPiece, CallFunc_IsValid_ReturnValue) == 0x000076, "Member 'BP_PieceChar_C_FindClosestFriendlyPiece::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.PointInHead
// 0x003C (0x003C - 0x0000)
struct BP_PieceChar_C_PointInHead final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Head;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_PointInHead) == 0x000004, "Wrong alignment on BP_PieceChar_C_PointInHead");
static_assert(sizeof(BP_PieceChar_C_PointInHead) == 0x00003C, "Wrong size on BP_PieceChar_C_PointInHead");
static_assert(offsetof(BP_PieceChar_C_PointInHead, Point) == 0x000000, "Member 'BP_PieceChar_C_PointInHead::Point' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, In_Head) == 0x00000C, "Member 'BP_PieceChar_C_PointInHead::In_Head' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_PieceChar_C_PointInHead::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PieceChar_C_PointInHead::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000020, "Member 'BP_PieceChar_C_PointInHead::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000024, "Member 'BP_PieceChar_C_PointInHead::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'BP_PieceChar_C_PointInHead::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_PieceChar_C_PointInHead::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_PointInHead, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PieceChar_C_PointInHead::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.OverrideAnimateWalk
// 0x0001 (0x0001 - 0x0000)
struct BP_PieceChar_C_OverrideAnimateWalk final
{
public:
	bool                                          Override;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_OverrideAnimateWalk) == 0x000001, "Wrong alignment on BP_PieceChar_C_OverrideAnimateWalk");
static_assert(sizeof(BP_PieceChar_C_OverrideAnimateWalk) == 0x000001, "Wrong size on BP_PieceChar_C_OverrideAnimateWalk");
static_assert(offsetof(BP_PieceChar_C_OverrideAnimateWalk, Override) == 0x000000, "Member 'BP_PieceChar_C_OverrideAnimateWalk::Override' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.CantPlayAnimations
// 0x0004 (0x0004 - 0x0000)
struct BP_PieceChar_C_CantPlayAnimations final
{
public:
	bool                                          CantPlay;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_CantPlayAnimations) == 0x000001, "Wrong alignment on BP_PieceChar_C_CantPlayAnimations");
static_assert(sizeof(BP_PieceChar_C_CantPlayAnimations) == 0x000004, "Wrong size on BP_PieceChar_C_CantPlayAnimations");
static_assert(offsetof(BP_PieceChar_C_CantPlayAnimations, CantPlay) == 0x000000, "Member 'BP_PieceChar_C_CantPlayAnimations::CantPlay' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CantPlayAnimations, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'BP_PieceChar_C_CantPlayAnimations::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CantPlayAnimations, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_PieceChar_C_CantPlayAnimations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CantPlayAnimations, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'BP_PieceChar_C_CantPlayAnimations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.OnRep_OwningPlayer
// 0x0014 (0x0014 - 0x0000)
struct BP_PieceChar_C_OnRep_OwningPlayer final
{
public:
	TDelegate<void(class FText Message)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_OnRep_OwningPlayer) == 0x000004, "Wrong alignment on BP_PieceChar_C_OnRep_OwningPlayer");
static_assert(sizeof(BP_PieceChar_C_OnRep_OwningPlayer) == 0x000014, "Wrong size on BP_PieceChar_C_OnRep_OwningPlayer");
static_assert(offsetof(BP_PieceChar_C_OnRep_OwningPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_PieceChar_C_OnRep_OwningPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_OwningPlayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PieceChar_C_OnRep_OwningPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_OwningPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PieceChar_C_OnRep_OwningPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_OwningPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_PieceChar_C_OnRep_OwningPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.GetDefaultCamera
// 0x0008 (0x0008 - 0x0000)
struct BP_PieceChar_C_GetDefaultCamera final
{
public:
	class UCameraComponent*                       Default_Camera;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_GetDefaultCamera) == 0x000008, "Wrong alignment on BP_PieceChar_C_GetDefaultCamera");
static_assert(sizeof(BP_PieceChar_C_GetDefaultCamera) == 0x000008, "Wrong size on BP_PieceChar_C_GetDefaultCamera");
static_assert(offsetof(BP_PieceChar_C_GetDefaultCamera, Default_Camera) == 0x000000, "Member 'BP_PieceChar_C_GetDefaultCamera::Default_Camera' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.CalcShootDirection
// 0x0050 (0x0050 - 0x0000)
struct BP_PieceChar_C_CalcShootDirection final
{
public:
	struct FVector                                Shoot_Direction;                                   // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetDefaultCamera_Default_Camera;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_CalcShootDirection) == 0x000008, "Wrong alignment on BP_PieceChar_C_CalcShootDirection");
static_assert(sizeof(BP_PieceChar_C_CalcShootDirection) == 0x000050, "Wrong size on BP_PieceChar_C_CalcShootDirection");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, Shoot_Direction) == 0x000000, "Member 'BP_PieceChar_C_CalcShootDirection::Shoot_Direction' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_GetDefaultCamera_Default_Camera) == 0x000010, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_GetDefaultCamera_Default_Camera' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_GetForwardVector_ReturnValue) == 0x000018, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_RandomUnitVector_ReturnValue) == 0x000028, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_RandomFloatInRange_ReturnValue) == 0x000034, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_CalcShootDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_PieceChar_C_CalcShootDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.OnRep_RepresentedPiece
// 0x0088 (0x0088 - 0x0000)
struct BP_PieceChar_C_OnRep_RepresentedPiece final
{
public:
	class UTexture2D*                             Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPieceTypes                                   Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_OnRep_RepresentedPiece) == 0x000008, "Wrong alignment on BP_PieceChar_C_OnRep_RepresentedPiece");
static_assert(sizeof(BP_PieceChar_C_OnRep_RepresentedPiece) == 0x000088, "Wrong size on BP_PieceChar_C_OnRep_RepresentedPiece");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable) == 0x000000, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_1) == 0x000008, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_2) == 0x000010, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_3) == 0x000018, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_4) == 0x000020, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_5) == 0x000028, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_byte_Variable) == 0x000030, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_6) == 0x000038, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_7) == 0x000040, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_8) == 0x000048, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_9) == 0x000050, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_10) == 0x000058, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_object_Variable_11) == 0x000060, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, Temp_byte_Variable_1) == 0x000068, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, K2Node_Select_Default) == 0x000070, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, K2Node_Select_Default_1) == 0x000078, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_RepresentedPiece, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_PieceChar_C_OnRep_RepresentedPiece::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.OnRep_Black
// 0x0038 (0x0038 - 0x0000)
struct BP_PieceChar_C_OnRep_Black final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PieceChar_C_OnRep_Black) == 0x000008, "Wrong alignment on BP_PieceChar_C_OnRep_Black");
static_assert(sizeof(BP_PieceChar_C_OnRep_Black) == 0x000038, "Wrong size on BP_PieceChar_C_OnRep_Black");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PieceChar_C_OnRep_Black::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PieceChar_C_OnRep_Black::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PieceChar_C_OnRep_Black::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_PieceChar_C_OnRep_Black::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PieceChar_C_OnRep_Black::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PieceChar_C_OnRep_Black::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_OnRep_Black, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_PieceChar_C_OnRep_Black::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PieceChar.BP_PieceChar_C.FalloffFromDistance
// 0x001C (0x001C - 0x0000)
struct BP_PieceChar_C_FalloffFromDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PieceChar_C_FalloffFromDistance) == 0x000004, "Wrong alignment on BP_PieceChar_C_FalloffFromDistance");
static_assert(sizeof(BP_PieceChar_C_FalloffFromDistance) == 0x00001C, "Wrong size on BP_PieceChar_C_FalloffFromDistance");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, Distance) == 0x000000, "Member 'BP_PieceChar_C_FalloffFromDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, Damage) == 0x000004, "Member 'BP_PieceChar_C_FalloffFromDistance::Damage' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'BP_PieceChar_C_FalloffFromDistance::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PieceChar_C_FalloffFromDistance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PieceChar_C_FalloffFromDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_PieceChar_C_FalloffFromDistance::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PieceChar_C_FalloffFromDistance, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'BP_PieceChar_C_FalloffFromDistance::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}

