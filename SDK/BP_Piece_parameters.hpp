#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Piece

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_PP_HighlightState_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Piece.BP_Piece_C.ExecuteUbergraph_BP_Piece
// 0x02B0 (0x02B0 - 0x0000)
struct BP_Piece_C_ExecuteUbergraph_BP_Piece final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PP_HighlightState                           K2Node_Event_HighlightState;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0060(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_C*                     K2Node_DynamicCast_AsBP_Destructible;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Impulse_1;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0xF];                                      // 0x0191(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Destructible_Unreplicated_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetRenderedComponent_RenderedComponent;   // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_Impulse;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Position;                       // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Shiny;                          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Piece_C_ExecuteUbergraph_BP_Piece) == 0x000010, "Wrong alignment on BP_Piece_C_ExecuteUbergraph_BP_Piece");
static_assert(sizeof(BP_Piece_C_ExecuteUbergraph_BP_Piece) == 0x0002B0, "Wrong size on BP_Piece_C_ExecuteUbergraph_BP_Piece");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, EntryPoint) == 0x000000, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, Temp_object_Variable) == 0x000008, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, Temp_object_Variable_1) == 0x000010, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_HighlightState) == 0x000018, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_HighlightState' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_MyComp) == 0x000020, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_Other) == 0x000028, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_OtherComp) == 0x000030, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_bSelfMoved) == 0x000038, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_HitLocation) == 0x00003C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_HitNormal) == 0x000048, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_NormalImpulse) == 0x000054, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_Hit) == 0x000060, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_SwitchEnum_CmpSuccess) == 0x0000EC, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_bBlockingHit) == 0x0000ED, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000EE, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_Time) == 0x0000F0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_Distance) == 0x0000F4, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_ImpactPoint) == 0x000104, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_Normal) == 0x000110, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_ImpactNormal) == 0x00011C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_FaceIndex) == 0x00014C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_TraceStart) == 0x000150, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BreakHitResult_TraceEnd) == 0x00015C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_DynamicCast_AsBP_Destructible) == 0x000168, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_DynamicCast_AsBP_Destructible' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000171, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000178, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000181, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Add_FloatFloat_ReturnValue) == 0x000184, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CustomEvent_Impulse_1) == 0x00018C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CustomEvent_Impulse_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, Temp_bool_Variable) == 0x000190, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D8, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001E0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_SelectFloat_ReturnValue) == 0x0001E4, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetRenderedComponent_RenderedComponent) == 0x0001E8, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetRenderedComponent_RenderedComponent' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, Temp_int_Variable) == 0x0001F0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Add_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_HasAuthority_ReturnValue) == 0x0001F8, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001FC, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CreateDelegate_OutputDelegate) == 0x000208, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CustomEvent_Impulse) == 0x000218, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CustomEvent_Impulse' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00021C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Vector_Distance_ReturnValue) == 0x000228, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CustomEvent_Position) == 0x00022C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CustomEvent_Normal) == 0x000238, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000248, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_SelectFloat_ReturnValue_1) == 0x000250, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetVelocity_ReturnValue) == 0x000254, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_VSize_ReturnValue) == 0x000260, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000264, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_MapRangeClamped_ReturnValue) == 0x000268, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000270, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000278, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetTimeSeconds_ReturnValue) == 0x00027C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000280, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Event_DeltaSeconds) == 0x000284, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000288, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00028C, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_CustomEvent_Shiny) == 0x000290, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_CustomEvent_Shiny' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, K2Node_Select_Default) == 0x000298, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_GetNumMaterials_ReturnValue) == 0x0002A0, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ExecuteUbergraph_BP_Piece, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002A9, "Member 'BP_Piece_C_ExecuteUbergraph_BP_Piece::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.SetShinyOnAllMaterials
// 0x0001 (0x0001 - 0x0000)
struct BP_Piece_C_SetShinyOnAllMaterials final
{
public:
	bool                                          Shiny;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(BP_Piece_C_SetShinyOnAllMaterials) == 0x000001, "Wrong alignment on BP_Piece_C_SetShinyOnAllMaterials");
static_assert(sizeof(BP_Piece_C_SetShinyOnAllMaterials) == 0x000001, "Wrong size on BP_Piece_C_SetShinyOnAllMaterials");
static_assert(offsetof(BP_Piece_C_SetShinyOnAllMaterials, Shiny) == 0x000000, "Member 'BP_Piece_C_SetShinyOnAllMaterials::Shiny' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Piece_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Piece_C_ReceiveTick");
static_assert(sizeof(BP_Piece_C_ReceiveTick) == 0x000004, "Wrong size on BP_Piece_C_ReceiveTick");
static_assert(offsetof(BP_Piece_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Piece_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.HitPiece
// 0x0018 (0x0018 - 0x0000)
struct BP_Piece_C_HitPiece final
{
public:
	struct FVector                                Position;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_HitPiece) == 0x000004, "Wrong alignment on BP_Piece_C_HitPiece");
static_assert(sizeof(BP_Piece_C_HitPiece) == 0x000018, "Wrong size on BP_Piece_C_HitPiece");
static_assert(offsetof(BP_Piece_C_HitPiece, Position) == 0x000000, "Member 'BP_Piece_C_HitPiece::Position' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_HitPiece, Normal) == 0x00000C, "Member 'BP_Piece_C_HitPiece::Normal' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.MulticastExplodeDestructible
// 0x0004 (0x0004 - 0x0000)
struct BP_Piece_C_MulticastExplodeDestructible final
{
public:
	float                                         Impulse;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_MulticastExplodeDestructible) == 0x000004, "Wrong alignment on BP_Piece_C_MulticastExplodeDestructible");
static_assert(sizeof(BP_Piece_C_MulticastExplodeDestructible) == 0x000004, "Wrong size on BP_Piece_C_MulticastExplodeDestructible");
static_assert(offsetof(BP_Piece_C_MulticastExplodeDestructible, Impulse) == 0x000000, "Member 'BP_Piece_C_MulticastExplodeDestructible::Impulse' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.CreateAndExplodeDestructible
// 0x0004 (0x0004 - 0x0000)
struct BP_Piece_C_CreateAndExplodeDestructible final
{
public:
	float                                         Impulse;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_CreateAndExplodeDestructible) == 0x000004, "Wrong alignment on BP_Piece_C_CreateAndExplodeDestructible");
static_assert(sizeof(BP_Piece_C_CreateAndExplodeDestructible) == 0x000004, "Wrong size on BP_Piece_C_CreateAndExplodeDestructible");
static_assert(offsetof(BP_Piece_C_CreateAndExplodeDestructible, Impulse) == 0x000000, "Member 'BP_Piece_C_CreateAndExplodeDestructible::Impulse' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Piece_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Piece_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Piece_C_ReceiveHit");
static_assert(sizeof(BP_Piece_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_Piece_C_ReceiveHit");
static_assert(offsetof(BP_Piece_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Piece_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Piece_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Piece_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Piece_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_Piece_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_Piece_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_Piece_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Piece_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_Piece_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.ActivateHighlight
// 0x0001 (0x0001 - 0x0000)
struct BP_Piece_C_ActivateHighlight final
{
public:
	E_PP_HighlightState                           HighlightState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_ActivateHighlight) == 0x000001, "Wrong alignment on BP_Piece_C_ActivateHighlight");
static_assert(sizeof(BP_Piece_C_ActivateHighlight) == 0x000001, "Wrong size on BP_Piece_C_ActivateHighlight");
static_assert(offsetof(BP_Piece_C_ActivateHighlight, HighlightState) == 0x000000, "Member 'BP_Piece_C_ActivateHighlight::HighlightState' has a wrong offset!");

// Function BP_Piece.BP_Piece_C.GetRenderedComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Piece_C_GetRenderedComponent final
{
public:
	class UPrimitiveComponent*                    RenderedComponent;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Piece_C_GetRenderedComponent) == 0x000008, "Wrong alignment on BP_Piece_C_GetRenderedComponent");
static_assert(sizeof(BP_Piece_C_GetRenderedComponent) == 0x000008, "Wrong size on BP_Piece_C_GetRenderedComponent");
static_assert(offsetof(BP_Piece_C_GetRenderedComponent, RenderedComponent) == 0x000000, "Member 'BP_Piece_C_GetRenderedComponent::RenderedComponent' has a wrong offset!");

}

