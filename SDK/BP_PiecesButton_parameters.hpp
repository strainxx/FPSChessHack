#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PiecesButton

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PiecesButton.BP_PiecesButton_C.ExecuteUbergraph_BP_PiecesButton
// 0x0028 (0x0028 - 0x0000)
struct BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAllAbilitiesTutorial_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class AAllAbilitiesTutorial_C*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton) == 0x000008, "Wrong alignment on BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton");
static_assert(sizeof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton) == 0x000028, "Wrong size on BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton");
static_assert(offsetof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton, EntryPoint) == 0x000000, "Member 'BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_PiecesButton_C_ExecuteUbergraph_BP_PiecesButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_PiecesButton.BP_PiecesButton_C.AfterClickSequence
// 0x0020 (0x0020 - 0x0000)
struct BP_PiecesButton_C_AfterClickSequence final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PiecesButton_C_AfterClickSequence) == 0x000008, "Wrong alignment on BP_PiecesButton_C_AfterClickSequence");
static_assert(sizeof(BP_PiecesButton_C_AfterClickSequence) == 0x000020, "Wrong size on BP_PiecesButton_C_AfterClickSequence");
static_assert(offsetof(BP_PiecesButton_C_AfterClickSequence, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_PiecesButton_C_AfterClickSequence::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PiecesButton_C_AfterClickSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PiecesButton_C_AfterClickSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PiecesButton_C_AfterClickSequence, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'BP_PiecesButton_C_AfterClickSequence::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");

}

