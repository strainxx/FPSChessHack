#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player

#include "Basic.hpp"

#include "BP_Player_classes.hpp"
#include "BP_Player_parameters.hpp"


namespace SDK
{

// Function BP_Player.BP_Player_C.ExecuteUbergraph_BP_Player
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ExecuteUbergraph_BP_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ExecuteUbergraph_BP_Player");

	Params::BP_Player_C_ExecuteUbergraph_BP_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.SetIsPromotingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPromoting_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::SetIsPromotingServer(bool IsPromoting_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetIsPromotingServer");

	Params::BP_Player_C_SetIsPromotingServer Parms{};

	Parms.IsPromoting_0 = IsPromoting_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.DeselectAllPieces
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::DeselectAllPieces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "DeselectAllPieces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.DehoverAllPieces
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::DehoverAllPieces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "DehoverAllPieces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_2");

	Params::BP_Player_C_InpAxisEvt_ChatWheelY_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_1");

	Params::BP_Player_C_InpAxisEvt_ChatWheelX_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ChatOffCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ChatOffCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ChatOffCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ChangeChatEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ChatEnabled_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::ChangeChatEnabled(bool ChatEnabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ChangeChatEnabled");

	Params::BP_Player_C_ChangeChatEnabled Parms{};

	Parms.ChatEnabled_0 = ChatEnabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.RebindMessage
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::RebindMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "RebindMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.CreateHUD
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::CreateHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CreateHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.SendMessageToPlayers
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_Player_C::SendMessageToPlayers(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SendMessageToPlayers");

	Params::BP_Player_C_SendMessageToPlayers Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.Send New Message
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Player1_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::Send_New_Message(const class FText& Message, bool Player1_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Send New Message");

	Params::BP_Player_C_Send_New_Message Parms{};

	Parms.Message = std::move(Message);
	Parms.Player1_0 = Player1_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.DestroyWinScreen
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::DestroyWinScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "DestroyWinScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.StartRematch
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::StartRematch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "StartRematch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.GetChallengedServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::GetChallengedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GetChallengedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.GetChallengedClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::GetChallengedClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GetChallengedClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.Challenged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Player_C*                     Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::Challenged(class ABP_Player_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Challenged");

	Params::BP_Player_C_Challenged Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpAxisEvt_GamepadChessYaw_K2Node_InputAxisEvent_5
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::InpAxisEvt_GamepadChessYaw_K2Node_InputAxisEvent_5(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpAxisEvt_GamepadChessYaw_K2Node_InputAxisEvent_5");

	Params::BP_Player_C_InpAxisEvt_GamepadChessYaw_K2Node_InputAxisEvent_5 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpAxisEvt_GamepadChessPitch_K2Node_InputAxisEvent_4
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::InpAxisEvt_GamepadChessPitch_K2Node_InputAxisEvent_4(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpAxisEvt_GamepadChessPitch_K2Node_InputAxisEvent_4");

	Params::BP_Player_C_InpAxisEvt_GamepadChessPitch_K2Node_InputAxisEvent_4 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.HoverSquare
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Square_C*                     Square                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_Player_C::HoverSquare(class ABP_Square_C* Square)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "HoverSquare");

	Params::BP_Player_C_HoverSquare Parms{};

	Parms.Square = Square;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.CleanUp
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::CleanUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CleanUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.WinnerScreen
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BlackWin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_Player_C*                     Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Tied                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::WinnerScreen(bool BlackWin, class ABP_Player_C* Enemy, bool Tied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "WinnerScreen");

	Params::BP_Player_C_WinnerScreen Parms{};

	Parms.BlackWin = BlackWin;
	Parms.Enemy = Enemy;
	Parms.Tied = Tied;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.SetEnemySelectedPieceAll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::SetEnemySelectedPieceAll(const class ABP_Piece_C* Piece, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetEnemySelectedPieceAll");

	Params::BP_Player_C_SetEnemySelectedPieceAll Parms{};

	Parms.Piece = Piece;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.SetEnemySelectedPieceClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::SetEnemySelectedPieceClient(const class ABP_Piece_C* Piece, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetEnemySelectedPieceClient");

	Params::BP_Player_C_SetEnemySelectedPieceClient Parms{};

	Parms.Piece = Piece;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.SetEnemySelectedPieceServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::SetEnemySelectedPieceServer(const class ABP_Piece_C* Piece, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetEnemySelectedPieceServer");

	Params::BP_Player_C_SetEnemySelectedPieceServer Parms{};

	Parms.Piece = Piece;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.SetEnemySelectedPiece
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::SetEnemySelectedPiece(const class ABP_Piece_C* Piece, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetEnemySelectedPiece");

	Params::BP_Player_C_SetEnemySelectedPiece Parms{};

	Parms.Piece = Piece;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.AddEnemyMovesAll
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Square_C*>             Moves                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::AddEnemyMovesAll(const TArray<class ABP_Square_C*>& Moves)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "AddEnemyMovesAll");

	Params::BP_Player_C_AddEnemyMovesAll Parms{};

	Parms.Moves = std::move(Moves);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.AddEnemyMoves
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Square_C*>             EnemySquares                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::AddEnemyMoves(const TArray<class ABP_Square_C*>& EnemySquares)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "AddEnemyMoves");

	Params::BP_Player_C_AddEnemyMoves Parms{};

	Parms.EnemySquares = std::move(EnemySquares);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.AddEnemyMovesServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Square_C*>             EnemySquares                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::AddEnemyMovesServer(const TArray<class ABP_Square_C*>& EnemySquares)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "AddEnemyMovesServer");

	Params::BP_Player_C_AddEnemyMovesServer Parms{};

	Parms.EnemySquares = std::move(EnemySquares);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.AddEnemyMovesClient
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Square_C*>             EnemySquares                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::AddEnemyMovesClient(const TArray<class ABP_Square_C*>& EnemySquares)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "AddEnemyMovesClient");

	Params::BP_Player_C_AddEnemyMovesClient Parms{};

	Parms.EnemySquares = std::move(EnemySquares);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.Select Piece
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::Select_Piece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Select Piece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.MouseOverPiece
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::MouseOverPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "MouseOverPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Player_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ClientInitPromoCutscene
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PromotionCutscene_C*          cutscene                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Piece_C*                      SelectedPiece_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ClientInitPromoCutscene(class ABP_PromotionCutscene_C* cutscene, class ABP_Piece_C* SelectedPiece_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ClientInitPromoCutscene");

	Params::BP_Player_C_ClientInitPromoCutscene Parms{};

	Parms.cutscene = cutscene;
	Parms.SelectedPiece_0 = SelectedPiece_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ServerInitPromoCutscene
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BlackOwner                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::ServerInitPromoCutscene(class ABP_Piece_C* Piece, bool BlackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ServerInitPromoCutscene");

	Params::BP_Player_C_ServerInitPromoCutscene Parms{};

	Parms.Piece = Piece;
	Parms.BlackOwner = BlackOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InitializePromotionCutscene
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BlackOwner                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::InitializePromotionCutscene(class ABP_Piece_C* Piece, bool BlackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InitializePromotionCutscene");

	Params::BP_Player_C_InitializePromotionCutscene Parms{};

	Parms.Piece = Piece;
	Parms.BlackOwner = BlackOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InitializePromoCutsceneNoSpawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PromotionCutscene_C*          cutscene                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Piece_C*                      SelectedPiece_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BlackOwner                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::InitializePromoCutsceneNoSpawn(class ABP_PromotionCutscene_C* cutscene, class ABP_Piece_C* SelectedPiece_0, bool BlackOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InitializePromoCutsceneNoSpawn");

	Params::BP_Player_C_InitializePromoCutsceneNoSpawn Parms{};

	Parms.cutscene = cutscene;
	Parms.SelectedPiece_0 = SelectedPiece_0;
	Parms.BlackOwner = BlackOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.Promotion
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::Promotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Promotion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ReceivePromotedClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ReceivePromotedClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceivePromotedClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ReceivePromotedServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ReceivePromotedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceivePromotedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.NotifyEnemyPromoted
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::NotifyEnemyPromoted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "NotifyEnemyPromoted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_0");

	Params::BP_Player_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_Open Chat Wheel_K2Node_InputActionEvent_1");

	Params::BP_Player_C_InpActEvt_Open_Chat_Wheel_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpActEvt_Skip_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_Skip_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_Skip_K2Node_InputActionEvent_2");

	Params::BP_Player_C_InpActEvt_Skip_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpActEvt_MouseFocus_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_MouseFocus_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_MouseFocus_K2Node_InputActionEvent_3");

	Params::BP_Player_C_InpActEvt_MouseFocus_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpActEvt_SelectPiece_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_SelectPiece_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_SelectPiece_K2Node_InputActionEvent_4");

	Params::BP_Player_C_InpActEvt_SelectPiece_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ClearMoves
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Square_C*>             Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::ClearMoves(TArray<class ABP_Square_C*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ClearMoves");

	Params::BP_Player_C_ClearMoves Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_Player.BP_Player_C.AddSquareToValidMovesFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Square_C*                     Square                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::AddSquareToValidMovesFromIndex(const struct FVector2D& Index_0, class ABP_Square_C** Square, bool* bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "AddSquareToValidMovesFromIndex");

	Params::BP_Player_C_AddSquareToValidMovesFromIndex Parms{};

	Parms.Index_0 = std::move(Index_0);

	UObject::ProcessEvent(Func, &Parms);

	if (Square != nullptr)
		*Square = Parms.Square;

	if (bLocked != nullptr)
		*bLocked = Parms.bLocked;
}


// Function BP_Player.BP_Player_C.CheckForPromotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::CheckForPromotion(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CheckForPromotion");

	Params::BP_Player_C_CheckForPromotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_Player.BP_Player_C.OnRep_PromotionTarget
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::OnRep_PromotionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnRep_PromotionTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.OnRep_IsPromoting
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::OnRep_IsPromoting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnRep_IsPromoting");

	UObject::ProcessEvent(Func, nullptr);
}

}

