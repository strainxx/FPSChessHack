#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessing

#include "Basic.hpp"

#include "E_PP_Effect_structs.hpp"


namespace SDK::Params
{

// Function BP_PostProcessing.BP_PostProcessing_C.ExecuteUbergraph_BP_PostProcessing
// 0x0008 (0x0008 - 0x0000)
struct BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PP_Effect                                   K2Node_Event_Type;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PP_Effect                                   K2Node_Event_Type_1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing) == 0x000004, "Wrong alignment on BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing");
static_assert(sizeof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing) == 0x000008, "Wrong size on BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing");
static_assert(offsetof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing, EntryPoint) == 0x000000, "Member 'BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing, K2Node_Event_Type) == 0x000004, "Member 'BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing, K2Node_Event_Type_1) == 0x000005, "Member 'BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing::K2Node_Event_Type_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing, K2Node_SwitchEnum_CmpSuccess_1) == 0x000007, "Member 'BP_PostProcessing_C_ExecuteUbergraph_BP_PostProcessing::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_PostProcessing.BP_PostProcessing_C.DeactivatePostProcessing
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessing_C_DeactivatePostProcessing final
{
public:
	E_PP_Effect                                   Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessing_C_DeactivatePostProcessing) == 0x000001, "Wrong alignment on BP_PostProcessing_C_DeactivatePostProcessing");
static_assert(sizeof(BP_PostProcessing_C_DeactivatePostProcessing) == 0x000001, "Wrong size on BP_PostProcessing_C_DeactivatePostProcessing");
static_assert(offsetof(BP_PostProcessing_C_DeactivatePostProcessing, Type) == 0x000000, "Member 'BP_PostProcessing_C_DeactivatePostProcessing::Type' has a wrong offset!");

// Function BP_PostProcessing.BP_PostProcessing_C.ActivatePostProcessing
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessing_C_ActivatePostProcessing final
{
public:
	E_PP_Effect                                   Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessing_C_ActivatePostProcessing) == 0x000001, "Wrong alignment on BP_PostProcessing_C_ActivatePostProcessing");
static_assert(sizeof(BP_PostProcessing_C_ActivatePostProcessing) == 0x000001, "Wrong size on BP_PostProcessing_C_ActivatePostProcessing");
static_assert(offsetof(BP_PostProcessing_C_ActivatePostProcessing, Type) == 0x000000, "Member 'BP_PostProcessing_C_ActivatePostProcessing::Type' has a wrong offset!");

}

