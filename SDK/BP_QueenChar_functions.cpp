#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QueenChar

#include "Basic.hpp"

#include "BP_QueenChar_classes.hpp"
#include "BP_QueenChar_parameters.hpp"


namespace SDK
{

// Function BP_QueenChar.BP_QueenChar_C.ExecuteUbergraph_BP_QueenChar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_QueenChar_C::ExecuteUbergraph_BP_QueenChar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "ExecuteUbergraph_BP_QueenChar");

	Params::BP_QueenChar_C_ExecuteUbergraph_BP_QueenChar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.EndShootingFXPlayback
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndShootingFXPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndShootingFXPlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartShootingFXPlayback
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartShootingFXPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartShootingFXPlayback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndShootingFXMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndShootingFXMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndShootingFXMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartShootingFXMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartShootingFXMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartShootingFXMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndShootingFXServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndShootingFXServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndShootingFXServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartShootingFXServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartShootingFXServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartShootingFXServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndShootingFX
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndShootingFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndShootingFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartShootingFX
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartShootingFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartShootingFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.PlaybackAuraOff
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::PlaybackAuraOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "PlaybackAuraOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.PlaybackAuraOn
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::PlaybackAuraOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "PlaybackAuraOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndLevitateMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndLevitateMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndLevitateMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.LevitateServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::LevitateServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "LevitateServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndLevitateServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndLevitateServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndLevitateServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.LevitateMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::LevitateMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "LevitateMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.FinishFlight
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::FinishFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "FinishFlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.BeginFlight
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::BeginFlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "BeginFlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.ThrowSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::ThrowSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "ThrowSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.Revolving
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revolving_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_QueenChar_C::Revolving(bool Revolving_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Revolving");

	Params::BP_QueenChar_C_Revolving Parms{};

	Parms.Revolving_0 = Revolving_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.RevolvingMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revolving                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_QueenChar_C::RevolvingMulti(bool Revolving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "RevolvingMulti");

	Params::BP_QueenChar_C_RevolvingMulti Parms{};

	Parms.Revolving = Revolving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.RevolvingServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revolving                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_QueenChar_C::RevolvingServer(bool Revolving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "RevolvingServer");

	Params::BP_QueenChar_C_RevolvingServer Parms{};

	Parms.Revolving = Revolving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.RevolvingAll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revolving                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_QueenChar_C::RevolvingAll(bool Revolving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "RevolvingAll");

	Params::BP_QueenChar_C_RevolvingAll Parms{};

	Parms.Revolving = Revolving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.Throw Piece
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_QueenChar_C::Throw_Piece(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Throw Piece");

	Params::BP_QueenChar_C_Throw_Piece Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.ReleasePiece
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::ReleasePiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "ReleasePiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.HoldPiece
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Piece_C*                      Piece                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_QueenChar_C::HoldPiece(class ABP_Piece_C* Piece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "HoldPiece");

	Params::BP_QueenChar_C_HoldPiece Parms{};

	Parms.Piece = Piece;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.GoUp__UpdateFunc
// (BlueprintEvent)

void ABP_QueenChar_C::GoUp__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "GoUp__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.GoUp__FinishedFunc
// (BlueprintEvent)

void ABP_QueenChar_C::GoUp__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "GoUp__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.RevolveGun__UpdateFunc
// (BlueprintEvent)

void ABP_QueenChar_C::RevolveGun__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "RevolveGun__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.RevolveGun__FinishedFunc
// (BlueprintEvent)

void ABP_QueenChar_C::RevolveGun__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "RevolveGun__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.Timeline_0_0__UpdateFunc
// (BlueprintEvent)

void ABP_QueenChar_C::Timeline_0_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Timeline_0_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.Timeline_0_0__FinishedFunc
// (BlueprintEvent)

void ABP_QueenChar_C::Timeline_0_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Timeline_0_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.EndJump
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::EndJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "EndJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartJump
// (BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StopBlockingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StopBlockingServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StopBlockingServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StartBlockingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::StartBlockingServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartBlockingServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.Stop Blocking
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::Stop_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Stop Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.Start Blocking
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::Start_Blocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "Start Blocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.DeathCleanup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::DeathCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "DeathCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.StopShooting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_QueenChar_C::StopShooting(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StopShooting");

	Params::BP_QueenChar_C_StopShooting Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.StartShooting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_QueenChar_C::StartShooting(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "StartShooting");

	Params::BP_QueenChar_C_StartShooting Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_QueenChar.BP_QueenChar_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_QueenChar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.MainAbility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::MainAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "MainAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_QueenChar.BP_QueenChar_C.MovementAbility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_QueenChar_C::MovementAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_QueenChar_C", "MovementAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

