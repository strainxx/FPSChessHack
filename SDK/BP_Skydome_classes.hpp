#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Skydome

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Skydome.BP_Skydome_C
// 0x0028 (0x0248 - 0x0220)
class ABP_Skydome_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SkydomeMesh;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SkyDome_Material;                                  // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      Directional_Light;                                 // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Skydome(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void UpdateLightDirection();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Skydome_C">();
	}
	static class ABP_Skydome_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Skydome_C>();
	}
};
static_assert(alignof(ABP_Skydome_C) == 0x000008, "Wrong alignment on ABP_Skydome_C");
static_assert(sizeof(ABP_Skydome_C) == 0x000248, "Wrong size on ABP_Skydome_C");
static_assert(offsetof(ABP_Skydome_C, UberGraphFrame) == 0x000220, "Member 'ABP_Skydome_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Skydome_C, SkydomeMesh) == 0x000228, "Member 'ABP_Skydome_C::SkydomeMesh' has a wrong offset!");
static_assert(offsetof(ABP_Skydome_C, Scene) == 0x000230, "Member 'ABP_Skydome_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Skydome_C, SkyDome_Material) == 0x000238, "Member 'ABP_Skydome_C::SkyDome_Material' has a wrong offset!");
static_assert(offsetof(ABP_Skydome_C, Directional_Light) == 0x000240, "Member 'ABP_Skydome_C::Directional_Light' has a wrong offset!");

}

