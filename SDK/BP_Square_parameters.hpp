#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Square

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Square.BP_Square_C.ExecuteUbergraph_BP_Square
// 0x0018 (0x0018 - 0x0000)
struct BP_Square_C_ExecuteUbergraph_BP_Square final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_White;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Square_C_ExecuteUbergraph_BP_Square) == 0x000004, "Wrong alignment on BP_Square_C_ExecuteUbergraph_BP_Square");
static_assert(sizeof(BP_Square_C_ExecuteUbergraph_BP_Square) == 0x000018, "Wrong size on BP_Square_C_ExecuteUbergraph_BP_Square");
static_assert(offsetof(BP_Square_C_ExecuteUbergraph_BP_Square, EntryPoint) == 0x000000, "Member 'BP_Square_C_ExecuteUbergraph_BP_Square::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Square_C_ExecuteUbergraph_BP_Square, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Square_C_ExecuteUbergraph_BP_Square::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Square_C_ExecuteUbergraph_BP_Square, K2Node_CustomEvent_White) == 0x000008, "Member 'BP_Square_C_ExecuteUbergraph_BP_Square::K2Node_CustomEvent_White' has a wrong offset!");
static_assert(offsetof(BP_Square_C_ExecuteUbergraph_BP_Square, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_Square_C_ExecuteUbergraph_BP_Square::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Square_C_ExecuteUbergraph_BP_Square, CallFunc_SelectVector_ReturnValue) == 0x00000C, "Member 'BP_Square_C_ExecuteUbergraph_BP_Square::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_Square.BP_Square_C.SelectColor
// 0x0001 (0x0001 - 0x0000)
struct BP_Square_C_SelectColor final
{
public:
	bool                                          White;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Square_C_SelectColor) == 0x000001, "Wrong alignment on BP_Square_C_SelectColor");
static_assert(sizeof(BP_Square_C_SelectColor) == 0x000001, "Wrong size on BP_Square_C_SelectColor");
static_assert(offsetof(BP_Square_C_SelectColor, White) == 0x000000, "Member 'BP_Square_C_SelectColor::White' has a wrong offset!");

// Function BP_Square.BP_Square_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Square_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Square_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Square_C_ReceiveTick");
static_assert(sizeof(BP_Square_C_ReceiveTick) == 0x000004, "Wrong size on BP_Square_C_ReceiveTick");
static_assert(offsetof(BP_Square_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Square_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

