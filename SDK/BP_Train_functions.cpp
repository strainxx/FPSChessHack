#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Train

#include "Basic.hpp"

#include "BP_Train_classes.hpp"
#include "BP_Train_parameters.hpp"


namespace SDK
{

// Function BP_Train.BP_Train_C.ExecuteUbergraph_BP_Train
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Train_C::ExecuteUbergraph_BP_Train(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "ExecuteUbergraph_BP_Train");

	Params::BP_Train_C_ExecuteUbergraph_BP_Train Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.ReverseTrain
// (BlueprintCallable, BlueprintEvent)

void ABP_Train_C::ReverseTrain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "ReverseTrain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Train.BP_Train_C.ForceHeadLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Train_C::ForceHeadLocation(float Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "ForceHeadLocation");

	Params::BP_Train_C_ForceHeadLocation Parms{};

	Parms.Position = Position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.OffCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_Train_C::OffCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "OffCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Train.BP_Train_C.BndEvt__BP_Train_RunOverCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Train_C::BndEvt__BP_Train_RunOverCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "BndEvt__BP_Train_RunOverCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Train_C_BndEvt__BP_Train_RunOverCollider_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.EndSmoke
// (BlueprintCallable, BlueprintEvent)

void ABP_Train_C::EndSmoke()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "EndSmoke");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Train.BP_Train_C.StartSmoke
// (BlueprintCallable, BlueprintEvent)

void ABP_Train_C::StartSmoke()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "StartSmoke");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Train.BP_Train_C.InitializeWagon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Wagon                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Train_C::InitializeWagon(class UStaticMeshComponent* Wagon, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "InitializeWagon");

	Params::BP_Train_C_InitializeWagon Parms{};

	Parms.Wagon = Wagon;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.SetLocationMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class USceneComponent*                  Wagon                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Train_C::SetLocationMulti(const struct FTransform& Transform, class USceneComponent* Wagon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "SetLocationMulti");

	Params::BP_Train_C_SetLocationMulti Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Wagon = Wagon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Train_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "ReceiveTick");

	Params::BP_Train_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Train.BP_Train_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Train_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Train.BP_Train_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Train_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Train_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

