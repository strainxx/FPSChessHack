#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_Destructible_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Wall.BP_Wall_C
// 0x00A0 (0x0300 - 0x0260)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Wall_C : public ABP_Destructible_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Wall_C;                          // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_6B65E7A9426170DDA8840D9606301C01; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_6B65E7A9426170DDA8840D9606301C01; // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             GoalTransform;                                     // 0x0280(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             StartTransform;                                    // 0x02B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_PieceChar_C*                        ParentChar;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                goalscale;                                         // 0x02E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PositionFinalized;                                 // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Wall(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void AnimateLocal();
	void SpawnAnimate();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void InitAsReplayActor();
	void TakeDamage(float Amount, float ImpulseStrength);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Wall_C">();
	}
	static class ABP_Wall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Wall_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Wall_C) == 0x000010, "Wrong alignment on ABP_Wall_C");
static_assert(sizeof(ABP_Wall_C) == 0x000300, "Wrong size on ABP_Wall_C");
static_assert(offsetof(ABP_Wall_C, UberGraphFrame_BP_Wall_C) == 0x000260, "Member 'ABP_Wall_C::UberGraphFrame_BP_Wall_C' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, StaticMesh) == 0x000268, "Member 'ABP_Wall_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, Timeline_0_NewTrack_0_6B65E7A9426170DDA8840D9606301C01) == 0x000270, "Member 'ABP_Wall_C::Timeline_0_NewTrack_0_6B65E7A9426170DDA8840D9606301C01' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, Timeline_0__Direction_6B65E7A9426170DDA8840D9606301C01) == 0x000274, "Member 'ABP_Wall_C::Timeline_0__Direction_6B65E7A9426170DDA8840D9606301C01' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, Timeline_0) == 0x000278, "Member 'ABP_Wall_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, GoalTransform) == 0x000280, "Member 'ABP_Wall_C::GoalTransform' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, StartTransform) == 0x0002B0, "Member 'ABP_Wall_C::StartTransform' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, ParentChar) == 0x0002E0, "Member 'ABP_Wall_C::ParentChar' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, goalscale) == 0x0002E8, "Member 'ABP_Wall_C::goalscale' has a wrong offset!");
static_assert(offsetof(ABP_Wall_C, PositionFinalized) == 0x0002F4, "Member 'ABP_Wall_C::PositionFinalized' has a wrong offset!");

}

