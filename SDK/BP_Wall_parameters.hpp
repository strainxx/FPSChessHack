#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Wall.BP_Wall_C.ExecuteUbergraph_BP_Wall
// 0x016C (0x016C - 0x0000)
struct BP_Wall_C_ExecuteUbergraph_BP_Wall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Amount;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ImpulseStrength;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0010(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x00B4(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wall_C_ExecuteUbergraph_BP_Wall) == 0x000004, "Wrong alignment on BP_Wall_C_ExecuteUbergraph_BP_Wall");
static_assert(sizeof(BP_Wall_C_ExecuteUbergraph_BP_Wall) == 0x00016C, "Wrong size on BP_Wall_C_ExecuteUbergraph_BP_Wall");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, EntryPoint) == 0x000000, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, K2Node_Event_Amount) == 0x000004, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, K2Node_Event_ImpulseStrength) == 0x000008, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::K2Node_Event_ImpulseStrength' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_IsValid_ReturnValue_1) == 0x00000E, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000010, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00009C, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0000A8, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0000B4, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_BreakVector_X) == 0x000140, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_BreakVector_Y) == 0x000144, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_BreakVector_Z) == 0x000148, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_Lerp_ReturnValue) == 0x00014C, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_MakeVector_ReturnValue) == 0x000150, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, CallFunc_MakeVector_ReturnValue_1) == 0x00015C, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_ExecuteUbergraph_BP_Wall, K2Node_Event_DeltaSeconds) == 0x000168, "Member 'BP_Wall_C_ExecuteUbergraph_BP_Wall::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_Wall.BP_Wall_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Wall_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wall_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Wall_C_ReceiveTick");
static_assert(sizeof(BP_Wall_C_ReceiveTick) == 0x000004, "Wrong size on BP_Wall_C_ReceiveTick");
static_assert(offsetof(BP_Wall_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Wall_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Wall.BP_Wall_C.TakeDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_Wall_C_TakeDamage final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseStrength;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Wall_C_TakeDamage) == 0x000004, "Wrong alignment on BP_Wall_C_TakeDamage");
static_assert(sizeof(BP_Wall_C_TakeDamage) == 0x000008, "Wrong size on BP_Wall_C_TakeDamage");
static_assert(offsetof(BP_Wall_C_TakeDamage, Amount) == 0x000000, "Member 'BP_Wall_C_TakeDamage::Amount' has a wrong offset!");
static_assert(offsetof(BP_Wall_C_TakeDamage, ImpulseStrength) == 0x000004, "Member 'BP_Wall_C_TakeDamage::ImpulseStrength' has a wrong offset!");

}

