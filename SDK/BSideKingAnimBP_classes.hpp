#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BSideKingAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BSideKingAnimBP.BSideKingAnimBP_C
// 0x0E90 (0x1150 - 0x02C0)
class UBSideKingAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0488(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x04B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0530(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0560(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x05E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0610(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0690(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x06C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0740(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0770(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x07F0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0820(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0908(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0938(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x09E8(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0B40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0B68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0B90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0BB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0BE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0C08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0C30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0C58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0C80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0CA8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0D28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0D58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0DD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E08(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0E88(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0EB8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0EE8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0F68(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0F98(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1048(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1070(0x00C8)()
	class ABP_BSideKingChar_C*                    Player;                                            // 0x1138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x1140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirePlayrate;                                      // 0x1144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fire;                                              // 0x1148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jumping;                                           // 0x1149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Blocking;                                          // 0x114A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Swinging;                                          // 0x114B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          Beam;                                              // 0x114C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Flying;                                            // 0x114D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Slamming;                                          // 0x114E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BSideKingAnimBP(int32 EntryPoint);
	void AnimNotify_CantHit();
	void AnimNotify_CanHit();
	void AnimNotify_SwordWoosh();
	void AnimNotify_PlayedShoot();
	void PlayShoot();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_2148FAFF4E37821B470FDBB827E33EA6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_55256EE548162B1C832B37A9F7D5C3C4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_486AE122493AAAE7814A2FA4AD422891();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_C9C7734447278F2A7BBACC9D2AB7FBA9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_7DF1CBD64B21E113F39903BD3C64C008();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSideKingAnimBP_AnimGraphNode_TransitionResult_42547CAD4BF4D4C4E8615CA9D880A2AF();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BSideKingAnimBP_C">();
	}
	static class UBSideKingAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBSideKingAnimBP_C>();
	}
};
static_assert(alignof(UBSideKingAnimBP_C) == 0x000010, "Wrong alignment on UBSideKingAnimBP_C");
static_assert(sizeof(UBSideKingAnimBP_C) == 0x001150, "Wrong size on UBSideKingAnimBP_C");
static_assert(offsetof(UBSideKingAnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UBSideKingAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_19) == 0x0002F8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000320, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000348, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_16) == 0x000370, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000398, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_14) == 0x0003C0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0003E8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000410, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000438, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000460, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000488, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0004B0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_10) == 0x000530, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000560, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_9) == 0x0005E0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000610, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_8) == 0x000690, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0006C0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_7) == 0x000740, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000770, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_6) == 0x0007F0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000820, "Member 'UBSideKingAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_5) == 0x000908, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateMachine_1) == 0x000938, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0009E8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000B40, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000B68, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000B90, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000BB8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000BE0, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000C08, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000C30, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000C58, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_TransitionResult) == 0x000C80, "Member 'UBSideKingAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000CA8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_4) == 0x000D28, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000D58, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_3) == 0x000DD8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000E08, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_2) == 0x000E88, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult_1) == 0x000EB8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000EE8, "Member 'UBSideKingAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateResult) == 0x000F68, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_StateMachine) == 0x000F98, "Member 'UBSideKingAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001048, "Member 'UBSideKingAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x001070, "Member 'UBSideKingAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Player) == 0x001138, "Member 'UBSideKingAnimBP_C::Player' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Speed) == 0x001140, "Member 'UBSideKingAnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, FirePlayrate) == 0x001144, "Member 'UBSideKingAnimBP_C::FirePlayrate' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Fire) == 0x001148, "Member 'UBSideKingAnimBP_C::Fire' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Jumping) == 0x001149, "Member 'UBSideKingAnimBP_C::Jumping' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Blocking) == 0x00114A, "Member 'UBSideKingAnimBP_C::Blocking' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Swinging) == 0x00114B, "Member 'UBSideKingAnimBP_C::Swinging' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Beam) == 0x00114C, "Member 'UBSideKingAnimBP_C::Beam' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Flying) == 0x00114D, "Member 'UBSideKingAnimBP_C::Flying' has a wrong offset!");
static_assert(offsetof(UBSideKingAnimBP_C, Slamming) == 0x00114E, "Member 'UBSideKingAnimBP_C::Slamming' has a wrong offset!");

}

