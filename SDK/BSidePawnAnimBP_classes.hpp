#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BSidePawnAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BSidePawnAnimBP.BSidePawnAnimBP_C
// 0x0C90 (0x0F50 - 0x02C0)
class UBSidePawnAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0418(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0448(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x04C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x04F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0578(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x05A8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0690(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x06C0(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0770(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x08C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x08F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0918(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0940(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0968(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0990(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x09B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x09E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0A08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0A30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0A58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0A80(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0AA8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0B28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0BD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C08(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0C88(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0CB8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0CE8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0D68(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D98(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0E48(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0E70(0x00C8)()
	class ABP_BSidePawnChar_C*                    Player;                                            // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0F40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirePlayrate;                                      // 0x0F44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fire;                                              // 0x0F48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jumping;                                           // 0x0F49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Blocking;                                          // 0x0F4A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Swinging;                                          // 0x0F4B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          Throwing;                                          // 0x0F4C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BSidePawnAnimBP(int32 EntryPoint);
	void AnimNotify_EnteredThrow();
	void AnimNotify_SwordThrow();
	void PlayThrow();
	void AnimNotify_SwordWoosh();
	void AnimNotify_CantHit();
	void AnimNotify_CanHit();
	void AnimNotify_PlayedShoot();
	void PlayShoot();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_06340448457F3B425C5FF88DF0B2AAFF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_C0C8C70B43319032CCEECE9802EC3D3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_FB286E7640420CBB1CE488B910CF1810();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_E7FB1B0D44DF0FF9233D76B7E1C4673C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_80A934CD4C876596542FEAA6F2119642();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_63F012AE473E48D20044999C735EEE4C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BSidePawnAnimBP_AnimGraphNode_TransitionResult_961556F641162F9C43AC8280813E5E61();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BSidePawnAnimBP_C">();
	}
	static class UBSidePawnAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBSidePawnAnimBP_C>();
	}
};
static_assert(alignof(UBSidePawnAnimBP_C) == 0x000010, "Wrong alignment on UBSidePawnAnimBP_C");
static_assert(sizeof(UBSidePawnAnimBP_C) == 0x000F50, "Wrong size on UBSidePawnAnimBP_C");
static_assert(offsetof(UBSidePawnAnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UBSidePawnAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_15) == 0x0002F8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000320, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000348, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000370, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000398, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_8) == 0x000418, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000448, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_7) == 0x0004C8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0004F8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_6) == 0x000578, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0005A8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_5) == 0x000690, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateMachine_1) == 0x0006C0, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x000770, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0008C8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x0008F0, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000918, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000940, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000968, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000990, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0009B8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0009E0, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000A08, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000A30, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000A58, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_TransitionResult) == 0x000A80, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000AA8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_4) == 0x000B28, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000B58, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_3) == 0x000BD8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000C08, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_2) == 0x000C88, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult_1) == 0x000CB8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000CE8, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateResult) == 0x000D68, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_StateMachine) == 0x000D98, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_UseCachedPose) == 0x000E48, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000E70, "Member 'UBSidePawnAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Player) == 0x000F38, "Member 'UBSidePawnAnimBP_C::Player' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Speed) == 0x000F40, "Member 'UBSidePawnAnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, FirePlayrate) == 0x000F44, "Member 'UBSidePawnAnimBP_C::FirePlayrate' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Fire) == 0x000F48, "Member 'UBSidePawnAnimBP_C::Fire' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Jumping) == 0x000F49, "Member 'UBSidePawnAnimBP_C::Jumping' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Blocking) == 0x000F4A, "Member 'UBSidePawnAnimBP_C::Blocking' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Swinging) == 0x000F4B, "Member 'UBSidePawnAnimBP_C::Swinging' has a wrong offset!");
static_assert(offsetof(UBSidePawnAnimBP_C, Throwing) == 0x000F4C, "Member 'UBSidePawnAnimBP_C::Throwing' has a wrong offset!");

}

