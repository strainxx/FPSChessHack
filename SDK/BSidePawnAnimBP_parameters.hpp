#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BSidePawnAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BSidePawnAnimBP.BSidePawnAnimBP_C.ExecuteUbergraph_BSidePawnAnimBP
// 0x0070 (0x0070 - 0x0000)
struct BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_6;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BSidePawnChar_C*                    K2Node_DynamicCast_AsBP_BSide_Pawn_Char;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP) == 0x000008, "Wrong alignment on BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP");
static_assert(sizeof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP) == 0x000070, "Wrong size on BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, EntryPoint) == 0x000000, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000004, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x00000C, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000011, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue) == 0x000014, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x00001C, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000020, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x000021, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000024, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000028, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x000029, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00002A, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1) == 0x00002C, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x000030, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, Temp_bool_Variable) == 0x000031, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000032, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x000034, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_6) == 0x000038, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, K2Node_Event_DeltaTimeX) == 0x000044, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000048, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, K2Node_DynamicCast_AsBP_BSide_Pawn_Char) == 0x000050, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::K2Node_DynamicCast_AsBP_BSide_Pawn_Char' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_IsFalling_ReturnValue) == 0x00005A, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, K2Node_Select_Default) == 0x00005B, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_VSizeXY_ReturnValue) == 0x00005C, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BSidePawnAnimBP_C_ExecuteUbergraph_BSidePawnAnimBP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BSidePawnAnimBP.BSidePawnAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BSidePawnAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BSidePawnAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BSidePawnAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(BSidePawnAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BSidePawnAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(BSidePawnAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BSidePawnAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BSidePawnAnimBP.BSidePawnAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BSidePawnAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BSidePawnAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on BSidePawnAnimBP_C_AnimGraph");
static_assert(sizeof(BSidePawnAnimBP_C_AnimGraph) == 0x000010, "Wrong size on BSidePawnAnimBP_C_AnimGraph");
static_assert(offsetof(BSidePawnAnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'BSidePawnAnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

