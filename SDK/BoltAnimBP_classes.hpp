#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BoltAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BoltAnimBP.BoltAnimBP_C
// 0x0780 (0x0A40 - 0x02C0)
class UBoltAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0398(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0440(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0470(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04F0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0520(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0550(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0628(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0650(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x06D0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0700(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0730(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x07E0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0938(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0960(0x00C8)()
	float                                         PlayRate;                                          // 0x0A28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BSideKnightChar_C*                  Owner;                                             // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ShouldFire;                                        // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Mega_Arrow;                                        // 0x0A39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Mega_Gattling;                                     // 0x0A3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BoltAnimBP(int32 EntryPoint);
	void UpdatePlayrate();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void SetShouldFire();
	void AnimNotify_PlayedShoot();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BoltAnimBP_AnimGraphNode_TransitionResult_F673E4D848CCCAA0C600BEAC122AB70A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BoltAnimBP_AnimGraphNode_TransitionResult_CC43FCB7473F4243CBAC508398164CC2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BoltAnimBP_AnimGraphNode_TransitionResult_7954EC6D4F1024F76B0839842DC99856();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BoltAnimBP_C">();
	}
	static class UBoltAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBoltAnimBP_C>();
	}
};
static_assert(alignof(UBoltAnimBP_C) == 0x000010, "Wrong alignment on UBoltAnimBP_C");
static_assert(sizeof(UBoltAnimBP_C) == 0x000A40, "Wrong size on UBoltAnimBP_C");
static_assert(offsetof(UBoltAnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UBoltAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UBoltAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0002F8, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000320, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000348, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000370, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000398, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0003C0, "Member 'UBoltAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateResult_4) == 0x000440, "Member 'UBoltAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000470, "Member 'UBoltAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateResult_3) == 0x0004F0, "Member 'UBoltAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateResult_2) == 0x000520, "Member 'UBoltAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateMachine_1) == 0x000550, "Member 'UBoltAnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000600, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_TransitionResult) == 0x000628, "Member 'UBoltAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000650, "Member 'UBoltAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateResult_1) == 0x0006D0, "Member 'UBoltAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateResult) == 0x000700, "Member 'UBoltAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_StateMachine) == 0x000730, "Member 'UBoltAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0007E0, "Member 'UBoltAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_UseCachedPose) == 0x000938, "Member 'UBoltAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x000960, "Member 'UBoltAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, PlayRate) == 0x000A28, "Member 'UBoltAnimBP_C::PlayRate' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, Owner) == 0x000A30, "Member 'UBoltAnimBP_C::Owner' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, ShouldFire) == 0x000A38, "Member 'UBoltAnimBP_C::ShouldFire' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, Mega_Arrow) == 0x000A39, "Member 'UBoltAnimBP_C::Mega_Arrow' has a wrong offset!");
static_assert(offsetof(UBoltAnimBP_C, Mega_Gattling) == 0x000A3A, "Member 'UBoltAnimBP_C::Mega_Gattling' has a wrong offset!");

}

