#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FPSChessGameInstance

#include "Basic.hpp"

#include "OnlineSubsystemUtils_structs.hpp"
#include "AdvancedSessions_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FPSChessGameInstance.FPSChessGameInstance_C.ExecuteUbergraph_FPSChessGameInstance
// 0x0950 (0x0950 - 0x0000)
struct FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results_3;                      // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results_2;                      // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        Temp_struct_Variable;                              // 0x0060(0x0010)(ReferenceParm)
	TDelegate<void(TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results_1;                      // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FBlueprintSessionResult>        K2Node_CustomEvent_Results;                        // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<struct FBlueprintSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FBlueprintSessionResult>        Temp_struct_Variable_1;                            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x00D0(0x0108)()
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetExtraSettings_ExtraSettings;           // 0x01D8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetSessionID_AsString_SessionID;          // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyBool_SearchResult;      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionPropertyBool_SettingValue;      // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_1;                         // 0x0228(0x0108)()
	class FString                                 CallFunc_GetSessionID_AsString_SessionID_1;        // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsLAN;                          // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RoomName;                       // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Desciption;                     // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PasswordProtected;              // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Password;                       // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                K2Node_CustomEvent_Session;                        // 0x0380(0x0108)()
	class UUMG_Session_C*                         K2Node_CustomEvent_UMGSession;                     // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CheckFull;                      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_LAN;                            // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue; // 0x0498(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSessionID_AsString_SessionID_2;        // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSessionID_AsString_SessionID_3;        // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyBool_ReturnValue; // 0x04E8(0x0020)()
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue_1; // 0x0508(0x0020)()
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue_2; // 0x0528(0x0020)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0558(0x0010)(ZeroConstructor, NoDestructor)
	class UJoinSessionCallbackProxy*              CallFunc_JoinSession_ReturnValue;                  // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_JoiningGame_C*                     CallFunc_Create_ReturnValue;                       // 0x0570(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_LocalPlayerNum_1;                     // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         K2Node_Event_PersonInviting;                       // 0x0580(0x0020)()
	class FString                                 K2Node_Event_AppId;                                // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                K2Node_Event_SessionToJoin_1;                      // 0x05B0(0x0108)(ConstParm)
	int32                                         K2Node_Event_LocalPlayerNum;                       // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         K2Node_Event_PersonInvited;                        // 0x06C0(0x0020)()
	struct FBlueprintSessionResult                K2Node_Event_SessionToJoin;                        // 0x06E0(0x0108)(ConstParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7ED[0x3];                                      // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F5[0x3];                                      // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_1; // 0x07F8(0x0020)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetID_UniqueNetId;               // 0x0820(0x0020)()
	TArray<struct FSessionsSearchSetting>         Temp_struct_Variable_2;                            // 0x0840(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0850(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyString_ReturnValue_3; // 0x0860(0x0020)()
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetExtraSettings_ExtraSettings_1;         // 0x0880(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyBool_SearchResult_1;    // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionPropertyBool_SettingValue_1;    // 0x0899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A[0x6];                                      // 0x089A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFindSessionsCallbackProxyAdvanced*     CallFunc_FindSessionsAdvanced_ReturnValue;         // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8AA[0x6];                                      // 0x08AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionsSearchSetting>         Temp_struct_Variable_3;                            // 0x08B0(0x0010)(ConstParm, ReferenceParm)
	class UFindSessionsCallbackProxyAdvanced*     CallFunc_FindSessionsAdvanced_ReturnValue_1;       // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Sensitivity_1;                  // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Player2;                        // 0x08CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x08CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENetworkFailure                               K2Node_Event_FailureType;                          // 0x08CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsServer;                            // 0x08CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x08D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InvertY;                        // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E2[0x2];                                      // 0x08E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Sensitivity;                    // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ChatEnabled;                    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8EA[0x6];                                      // 0x08EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyInt_ReturnValue; // 0x08F0(0x0020)()
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_2; // 0x0910(0x0020)()
	TArray<struct FSessionPropertyKeyPair>        K2Node_MakeArray_Array;                            // 0x0930(0x0010)(ConstParm, ReferenceParm)
	class UCreateSessionCallbackProxyAdvanced*    CallFunc_CreateAdvancedSession_ReturnValue;        // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance");
static_assert(sizeof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance) == 0x000950, "Wrong size on FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, EntryPoint) == 0x000000, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Results_3) == 0x000020, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Results_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Results_2) == 0x000040, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Results_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_struct_Variable) == 0x000060, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Results_1) == 0x000088, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Results_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Results) == 0x000098, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Results' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_struct_Variable_1) == 0x0000B8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetExtraSettings_ExtraSettings) == 0x0001D8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetExtraSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionID_AsString_SessionID) == 0x0001E8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionID_AsString_SessionID' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionPropertyBool_SearchResult) == 0x0001F8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionPropertyBool_SearchResult' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionPropertyBool_SettingValue) == 0x0001F9, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionPropertyBool_SettingValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_SwitchEnum_CmpSuccess) == 0x0001FA, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Array_Length_ReturnValue_1) == 0x0001FC, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_5) == 0x000200, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_bool_True_if_break_was_hit_Variable) == 0x000210, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Not_PreBool_ReturnValue) == 0x000211, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_int_Loop_Counter_Variable) == 0x000214, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000218, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00021C, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000220, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_int_Array_Index_Variable_1) == 0x000224, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Array_Get_Item_1) == 0x000228, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionID_AsString_SessionID_1) == 0x000330, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionID_AsString_SessionID_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Not_PreBool_ReturnValue_1) == 0x000340, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_BooleanAND_ReturnValue) == 0x000341, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_IsLAN) == 0x000342, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_IsLAN' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_RoomName) == 0x000348, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_RoomName' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Desciption) == 0x000358, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Desciption' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_PasswordProtected) == 0x000368, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_PasswordProtected' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Password) == 0x000370, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Password' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Session) == 0x000380, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Session' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_UMGSession) == 0x000488, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_UMGSession' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_CheckFull) == 0x000490, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_CheckFull' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_LAN) == 0x000491, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_LAN' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue) == 0x000498, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue) == 0x0004B8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue_1) == 0x0004B9, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionID_AsString_SessionID_2) == 0x0004C0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionID_AsString_SessionID_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionID_AsString_SessionID_3) == 0x0004D0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionID_AsString_SessionID_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0004E0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0004E1, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyBool_ReturnValue) == 0x0004E8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue_1) == 0x000508, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue_2) == 0x000528, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000548, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetPlayerController_ReturnValue_1) == 0x000550, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_6) == 0x000558, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_JoinSession_ReturnValue) == 0x000568, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_JoinSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Create_ReturnValue) == 0x000570, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue_2) == 0x000578, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_LocalPlayerNum_1) == 0x00057C, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_LocalPlayerNum_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_PersonInviting) == 0x000580, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_PersonInviting' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_AppId) == 0x0005A0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_AppId' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_SessionToJoin_1) == 0x0005B0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_SessionToJoin_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_LocalPlayerNum) == 0x0006B8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_LocalPlayerNum' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_PersonInvited) == 0x0006C0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_PersonInvited' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_SessionToJoin) == 0x0006E0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_SessionToJoin' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_int_Loop_Counter_Variable_1) == 0x0007E8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007EC, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_Add_IntInt_ReturnValue_1) == 0x0007F0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_BooleanAND_ReturnValue_1) == 0x0007F4, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_1) == 0x0007F8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetPlayerController_ReturnValue_2) == 0x000818, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetUniqueNetID_UniqueNetId) == 0x000820, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetUniqueNetID_UniqueNetId' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_struct_Variable_2) == 0x000840, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_UniqueNetIdToString_String) == 0x000850, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyString_ReturnValue_3) == 0x000860, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetExtraSettings_ExtraSettings_1) == 0x000880, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetExtraSettings_ExtraSettings_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetPlayerController_ReturnValue_3) == 0x000890, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionPropertyBool_SearchResult_1) == 0x000898, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionPropertyBool_SearchResult_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_GetSessionPropertyBool_SettingValue_1) == 0x000899, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_GetSessionPropertyBool_SettingValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_FindSessionsAdvanced_ReturnValue) == 0x0008A0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_FindSessionsAdvanced_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue_3) == 0x0008A8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_SwitchEnum_CmpSuccess_1) == 0x0008A9, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, Temp_struct_Variable_3) == 0x0008B0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_FindSessionsAdvanced_ReturnValue_1) == 0x0008C0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_FindSessionsAdvanced_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Sensitivity_1) == 0x0008C8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Sensitivity_1' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Player2) == 0x0008CC, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Player2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue_4) == 0x0008CD, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_FailureType) == 0x0008CE, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_FailureType' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_Event_bIsServer) == 0x0008CF, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_Event_bIsServer' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CreateDelegate_OutputDelegate_7) == 0x0008D0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_SwitchEnum_CmpSuccess_2) == 0x0008E0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_InvertY) == 0x0008E1, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_InvertY' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_Sensitivity) == 0x0008E4, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_Sensitivity' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_CustomEvent_ChatEnabled) == 0x0008E8, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_CustomEvent_ChatEnabled' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0008E9, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyInt_ReturnValue) == 0x0008F0, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_2) == 0x000910, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_MakeLiteralSessionPropertyBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, K2Node_MakeArray_Array) == 0x000930, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_CreateAdvancedSession_ReturnValue) == 0x000940, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_CreateAdvancedSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance, CallFunc_IsValid_ReturnValue_5) == 0x000948, "Member 'FPSChessGameInstance_C_ExecuteUbergraph_FPSChessGameInstance::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.ChangeChatEnabledEvent
// 0x0001 (0x0001 - 0x0000)
struct FPSChessGameInstance_C_ChangeChatEnabledEvent final
{
public:
	bool                                          ChatEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_ChangeChatEnabledEvent) == 0x000001, "Wrong alignment on FPSChessGameInstance_C_ChangeChatEnabledEvent");
static_assert(sizeof(FPSChessGameInstance_C_ChangeChatEnabledEvent) == 0x000001, "Wrong size on FPSChessGameInstance_C_ChangeChatEnabledEvent");
static_assert(offsetof(FPSChessGameInstance_C_ChangeChatEnabledEvent, ChatEnabled) == 0x000000, "Member 'FPSChessGameInstance_C_ChangeChatEnabledEvent::ChatEnabled' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.ChangeSensitivityScopedEvent
// 0x0004 (0x0004 - 0x0000)
struct FPSChessGameInstance_C_ChangeSensitivityScopedEvent final
{
public:
	float                                         Sensitivity;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPSChessGameInstance_C_ChangeSensitivityScopedEvent) == 0x000004, "Wrong alignment on FPSChessGameInstance_C_ChangeSensitivityScopedEvent");
static_assert(sizeof(FPSChessGameInstance_C_ChangeSensitivityScopedEvent) == 0x000004, "Wrong size on FPSChessGameInstance_C_ChangeSensitivityScopedEvent");
static_assert(offsetof(FPSChessGameInstance_C_ChangeSensitivityScopedEvent, Sensitivity) == 0x000000, "Member 'FPSChessGameInstance_C_ChangeSensitivityScopedEvent::Sensitivity' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.ChangeInvertYEvent
// 0x0001 (0x0001 - 0x0000)
struct FPSChessGameInstance_C_ChangeInvertYEvent final
{
public:
	bool                                          InvertY;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_ChangeInvertYEvent) == 0x000001, "Wrong alignment on FPSChessGameInstance_C_ChangeInvertYEvent");
static_assert(sizeof(FPSChessGameInstance_C_ChangeInvertYEvent) == 0x000001, "Wrong size on FPSChessGameInstance_C_ChangeInvertYEvent");
static_assert(offsetof(FPSChessGameInstance_C_ChangeInvertYEvent, InvertY) == 0x000000, "Member 'FPSChessGameInstance_C_ChangeInvertYEvent::InvertY' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.HandleNetworkError
// 0x0002 (0x0002 - 0x0000)
struct FPSChessGameInstance_C_HandleNetworkError final
{
public:
	ENetworkFailure                               FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsServer;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_HandleNetworkError) == 0x000001, "Wrong alignment on FPSChessGameInstance_C_HandleNetworkError");
static_assert(sizeof(FPSChessGameInstance_C_HandleNetworkError) == 0x000002, "Wrong size on FPSChessGameInstance_C_HandleNetworkError");
static_assert(offsetof(FPSChessGameInstance_C_HandleNetworkError, FailureType) == 0x000000, "Member 'FPSChessGameInstance_C_HandleNetworkError::FailureType' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_HandleNetworkError, bIsServer) == 0x000001, "Member 'FPSChessGameInstance_C_HandleNetworkError::bIsServer' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.ChangeSensitivityEvent
// 0x0008 (0x0008 - 0x0000)
struct FPSChessGameInstance_C_ChangeSensitivityEvent final
{
public:
	float                                         Sensitivity;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player2;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_ChangeSensitivityEvent) == 0x000004, "Wrong alignment on FPSChessGameInstance_C_ChangeSensitivityEvent");
static_assert(sizeof(FPSChessGameInstance_C_ChangeSensitivityEvent) == 0x000008, "Wrong size on FPSChessGameInstance_C_ChangeSensitivityEvent");
static_assert(offsetof(FPSChessGameInstance_C_ChangeSensitivityEvent, Sensitivity) == 0x000000, "Member 'FPSChessGameInstance_C_ChangeSensitivityEvent::Sensitivity' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_ChangeSensitivityEvent, Player2) == 0x000004, "Member 'FPSChessGameInstance_C_ChangeSensitivityEvent::Player2' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnSessionInviteAccepted
// 0x0130 (0x0130 - 0x0000)
struct FPSChessGameInstance_C_OnSessionInviteAccepted final
{
public:
	int32                                         LocalPlayerNum;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         PersonInvited;                                     // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBlueprintSessionResult                SessionToJoin;                                     // 0x0028(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnSessionInviteAccepted) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnSessionInviteAccepted");
static_assert(sizeof(FPSChessGameInstance_C_OnSessionInviteAccepted) == 0x000130, "Wrong size on FPSChessGameInstance_C_OnSessionInviteAccepted");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteAccepted, LocalPlayerNum) == 0x000000, "Member 'FPSChessGameInstance_C_OnSessionInviteAccepted::LocalPlayerNum' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteAccepted, PersonInvited) == 0x000008, "Member 'FPSChessGameInstance_C_OnSessionInviteAccepted::PersonInvited' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteAccepted, SessionToJoin) == 0x000028, "Member 'FPSChessGameInstance_C_OnSessionInviteAccepted::SessionToJoin' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnSessionInviteReceived
// 0x0140 (0x0140 - 0x0000)
struct FPSChessGameInstance_C_OnSessionInviteReceived final
{
public:
	int32                                         LocalPlayerNum;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         PersonInviting;                                    // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 AppId;                                             // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                SessionToJoin;                                     // 0x0038(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnSessionInviteReceived) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnSessionInviteReceived");
static_assert(sizeof(FPSChessGameInstance_C_OnSessionInviteReceived) == 0x000140, "Wrong size on FPSChessGameInstance_C_OnSessionInviteReceived");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteReceived, LocalPlayerNum) == 0x000000, "Member 'FPSChessGameInstance_C_OnSessionInviteReceived::LocalPlayerNum' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteReceived, PersonInviting) == 0x000008, "Member 'FPSChessGameInstance_C_OnSessionInviteReceived::PersonInviting' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteReceived, AppId) == 0x000028, "Member 'FPSChessGameInstance_C_OnSessionInviteReceived::AppId' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_OnSessionInviteReceived, SessionToJoin) == 0x000038, "Member 'FPSChessGameInstance_C_OnSessionInviteReceived::SessionToJoin' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.JoinGame
// 0x0118 (0x0118 - 0x0000)
struct FPSChessGameInstance_C_JoinGame final
{
public:
	struct FBlueprintSessionResult                Session;                                           // 0x0000(0x0108)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMG_Session_C*                         UMGSession;                                        // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckFull;                                         // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LAN;                                               // 0x0111(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FPSChessGameInstance_C_JoinGame) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_JoinGame");
static_assert(sizeof(FPSChessGameInstance_C_JoinGame) == 0x000118, "Wrong size on FPSChessGameInstance_C_JoinGame");
static_assert(offsetof(FPSChessGameInstance_C_JoinGame, Session) == 0x000000, "Member 'FPSChessGameInstance_C_JoinGame::Session' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_JoinGame, UMGSession) == 0x000108, "Member 'FPSChessGameInstance_C_JoinGame::UMGSession' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_JoinGame, CheckFull) == 0x000110, "Member 'FPSChessGameInstance_C_JoinGame::CheckFull' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_JoinGame, LAN) == 0x000111, "Member 'FPSChessGameInstance_C_JoinGame::LAN' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.HostGame
// 0x0040 (0x0040 - 0x0000)
struct FPSChessGameInstance_C_HostGame final
{
public:
	bool                                          isLAN_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName_0;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Desciption;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          PasswordProtected_0;                               // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Password;                                          // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FPSChessGameInstance_C_HostGame) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_HostGame");
static_assert(sizeof(FPSChessGameInstance_C_HostGame) == 0x000040, "Wrong size on FPSChessGameInstance_C_HostGame");
static_assert(offsetof(FPSChessGameInstance_C_HostGame, isLAN_0) == 0x000000, "Member 'FPSChessGameInstance_C_HostGame::isLAN_0' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_HostGame, RoomName_0) == 0x000008, "Member 'FPSChessGameInstance_C_HostGame::RoomName_0' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_HostGame, Desciption) == 0x000018, "Member 'FPSChessGameInstance_C_HostGame::Desciption' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_HostGame, PasswordProtected_0) == 0x000028, "Member 'FPSChessGameInstance_C_HostGame::PasswordProtected_0' has a wrong offset!");
static_assert(offsetof(FPSChessGameInstance_C_HostGame, Password) == 0x000030, "Member 'FPSChessGameInstance_C_HostGame::Password' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnSuccess_5083F3354C593952FDE933BE08129C41
// 0x0010 (0x0010 - 0x0000)
struct FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41");
static_assert(sizeof(FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41) == 0x000010, "Wrong size on FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41");
static_assert(offsetof(FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41, Results) == 0x000000, "Member 'FPSChessGameInstance_C_OnSuccess_5083F3354C593952FDE933BE08129C41::Results' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnFailure_5083F3354C593952FDE933BE08129C41
// 0x0010 (0x0010 - 0x0000)
struct FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41");
static_assert(sizeof(FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41) == 0x000010, "Wrong size on FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41");
static_assert(offsetof(FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41, Results) == 0x000000, "Member 'FPSChessGameInstance_C_OnFailure_5083F3354C593952FDE933BE08129C41::Results' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1
// 0x0010 (0x0010 - 0x0000)
struct FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1");
static_assert(sizeof(FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1) == 0x000010, "Wrong size on FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1");
static_assert(offsetof(FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1, Results) == 0x000000, "Member 'FPSChessGameInstance_C_OnSuccess_0E679B8D440EAE38D8F3D8934BC522C1::Results' has a wrong offset!");

// Function FPSChessGameInstance.FPSChessGameInstance_C.OnFailure_0E679B8D440EAE38D8F3D8934BC522C1
// 0x0010 (0x0010 - 0x0000)
struct FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1 final
{
public:
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1) == 0x000008, "Wrong alignment on FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1");
static_assert(sizeof(FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1) == 0x000010, "Wrong size on FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1");
static_assert(offsetof(FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1, Results) == 0x000000, "Member 'FPSChessGameInstance_C_OnFailure_0E679B8D440EAE38D8F3D8934BC522C1::Results' has a wrong offset!");

}

