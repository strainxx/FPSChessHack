#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrapplingHook

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GrapplingHook.GrapplingHook_C.ExecuteUbergraph_GrapplingHook
// 0x01C8 (0x01C8 - 0x0000)
struct GrapplingHook_C_ExecuteUbergraph_GrapplingHook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0058(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0108(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook) == 0x000008, "Wrong alignment on GrapplingHook_C_ExecuteUbergraph_GrapplingHook");
static_assert(sizeof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook) == 0x0001C8, "Wrong size on GrapplingHook_C_ExecuteUbergraph_GrapplingHook");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, EntryPoint) == 0x000000, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::EntryPoint' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_MyComp) == 0x000018, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_Other) == 0x000020, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_OtherComp) == 0x000028, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_bSelfMoved) == 0x000030, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_HitLocation) == 0x000034, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_HitNormal) == 0x000040, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_NormalImpulse) == 0x00004C, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_Event_Hit) == 0x000058, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000E8, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F0, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F8, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000100, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_bFromSweep) == 0x000104, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, K2Node_ComponentBoundEvent_SweepResult) == 0x000108, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000194, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A0, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001A4, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0001B0, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0001BC, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ExecuteUbergraph_GrapplingHook, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001C0, "Member 'GrapplingHook_C_ExecuteUbergraph_GrapplingHook::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function GrapplingHook.GrapplingHook_C.BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'GrapplingHook_C_BndEvt__GrapplingHook_Endpoint_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function GrapplingHook.GrapplingHook_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct GrapplingHook_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GrapplingHook_C_ReceiveHit) == 0x000008, "Wrong alignment on GrapplingHook_C_ReceiveHit");
static_assert(sizeof(GrapplingHook_C_ReceiveHit) == 0x0000D0, "Wrong size on GrapplingHook_C_ReceiveHit");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, MyComp) == 0x000000, "Member 'GrapplingHook_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, Other) == 0x000008, "Member 'GrapplingHook_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, OtherComp) == 0x000010, "Member 'GrapplingHook_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'GrapplingHook_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'GrapplingHook_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, HitNormal) == 0x000028, "Member 'GrapplingHook_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'GrapplingHook_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(GrapplingHook_C_ReceiveHit, Hit) == 0x000040, "Member 'GrapplingHook_C_ReceiveHit::Hit' has a wrong offset!");

// Function GrapplingHook.GrapplingHook_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GrapplingHook_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrapplingHook_C_ReceiveTick) == 0x000004, "Wrong alignment on GrapplingHook_C_ReceiveTick");
static_assert(sizeof(GrapplingHook_C_ReceiveTick) == 0x000004, "Wrong size on GrapplingHook_C_ReceiveTick");
static_assert(offsetof(GrapplingHook_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GrapplingHook_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

