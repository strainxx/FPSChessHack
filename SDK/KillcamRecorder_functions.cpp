#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillcamRecorder

#include "Basic.hpp"

#include "KillcamRecorder_classes.hpp"
#include "KillcamRecorder_parameters.hpp"


namespace SDK
{

// Function KillcamRecorder.KillcamRecorder_C.ExecuteUbergraph_KillcamRecorder
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UKillcamRecorder_C::ExecuteUbergraph_KillcamRecorder(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "ExecuteUbergraph_KillcamRecorder");

	Params::KillcamRecorder_C_ExecuteUbergraph_KillcamRecorder Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KillcamRecorder.KillcamRecorder_C.SimulateDestruction
// (BlueprintCallable, BlueprintEvent)

void UKillcamRecorder_C::SimulateDestruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "SimulateDestruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KillcamRecorder.KillcamRecorder_C.SetBlack
// (BlueprintCallable, BlueprintEvent)

void UKillcamRecorder_C::SetBlack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "SetBlack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KillcamRecorder.KillcamRecorder_C.SendTransformIfChanged
// (BlueprintCallable, BlueprintEvent)

void UKillcamRecorder_C::SendTransformIfChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "SendTransformIfChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KillcamRecorder.KillcamRecorder_C.SetProtagonist
// (BlueprintCallable, BlueprintEvent)

void UKillcamRecorder_C::SetProtagonist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "SetProtagonist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KillcamRecorder.KillcamRecorder_C.RecordEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EKillcamEvents                          EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EventInput                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UKillcamRecorder_C::RecordEvent(EKillcamEvents EventType, const struct FVector& EventInput, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "RecordEvent");

	Params::KillcamRecorder_C_RecordEvent Parms{};

	Parms.EventType = EventType;
	Parms.EventInput = std::move(EventInput);
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KillcamRecorder.KillcamRecorder_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UKillcamRecorder_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "ReceiveEndPlay");

	Params::KillcamRecorder_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KillcamRecorder.KillcamRecorder_C.SendTransformEvent
// (BlueprintCallable, BlueprintEvent)

void UKillcamRecorder_C::SendTransformEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "SendTransformEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KillcamRecorder.KillcamRecorder_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UKillcamRecorder_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KillcamRecorder_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

