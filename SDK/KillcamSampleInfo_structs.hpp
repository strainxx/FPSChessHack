#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillcamSampleInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KillcamEventType_structs.hpp"
#include "KillcamEvents_structs.hpp"


namespace SDK
{

// UserDefinedStruct KillcamSampleInfo.KillcamSampleInfo
// 0x0060 (0x0060 - 0x0000)
struct FKillcamSampleInfo final
{
public:
	EKillcamEventType                             EventType_2_5AC24EB346988D6028CA63A6A61CCDB3;      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp_5_5763A68D47FD3D46F837C68BD5FA66BC;      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ActorID_8_D06E0FEE4B1BDC50AABC72804BCEEE83;        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform_11_37D83E17439A1AC8DA4C028A01416504;     // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UClass*                                 ActorType_14_07C7368740F1EC74E18B4C992349EBE4;     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EventInput_17_E3BDA5F84C39FF6DF06DCBA1024E8C2B;    // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKillcamEvents                                EventType_23_54C1F72449DDFADBEC5450B07CA72000;     // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FKillcamSampleInfo) == 0x000010, "Wrong alignment on FKillcamSampleInfo");
static_assert(sizeof(FKillcamSampleInfo) == 0x000060, "Wrong size on FKillcamSampleInfo");
static_assert(offsetof(FKillcamSampleInfo, EventType_2_5AC24EB346988D6028CA63A6A61CCDB3) == 0x000000, "Member 'FKillcamSampleInfo::EventType_2_5AC24EB346988D6028CA63A6A61CCDB3' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, Timestamp_5_5763A68D47FD3D46F837C68BD5FA66BC) == 0x000004, "Member 'FKillcamSampleInfo::Timestamp_5_5763A68D47FD3D46F837C68BD5FA66BC' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, ActorID_8_D06E0FEE4B1BDC50AABC72804BCEEE83) == 0x000008, "Member 'FKillcamSampleInfo::ActorID_8_D06E0FEE4B1BDC50AABC72804BCEEE83' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, Transform_11_37D83E17439A1AC8DA4C028A01416504) == 0x000010, "Member 'FKillcamSampleInfo::Transform_11_37D83E17439A1AC8DA4C028A01416504' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, ActorType_14_07C7368740F1EC74E18B4C992349EBE4) == 0x000040, "Member 'FKillcamSampleInfo::ActorType_14_07C7368740F1EC74E18B4C992349EBE4' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, EventInput_17_E3BDA5F84C39FF6DF06DCBA1024E8C2B) == 0x000048, "Member 'FKillcamSampleInfo::EventInput_17_E3BDA5F84C39FF6DF06DCBA1024E8C2B' has a wrong offset!");
static_assert(offsetof(FKillcamSampleInfo, EventType_23_54C1F72449DDFADBEC5450B07CA72000) == 0x000054, "Member 'FKillcamSampleInfo::EventType_23_54C1F72449DDFADBEC5450B07CA72000' has a wrong offset!");

}

