#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PieceHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "PieceTypes_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PieceHUD.PieceHUD_C
// 0x0100 (0x0360 - 0x0260)
class UPieceHUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       ActivateAura;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnhighlightMovement;                               // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightMovement;                                 // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnhighlightAbility;                                // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HighlightAbilty;                                   // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Ability;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AbilityHighlight;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             AbilityKey;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Aura;                                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BowCrosshairCircle;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BowCrosshairLine;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Countdown;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cracks;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 crosshair;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairPiece1;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairPiece2;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairPiece3;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairPiece4;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hitmarker;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MainAbilityCooldown;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MovementAbility;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MovementAbilityHighlight;                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MovementKey;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Result;                                            // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        Scope;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SniperCrossX;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SniperCrossY;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         HitmarkerClearRate;                                // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             AbilityIcon;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             MovementAbilityIcon;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Gamepad;                                           // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_PieceHUD(int32 EntryPoint);
	void AutoResize(const class FText& Name_0, class UTextBlock* Text);
	void SetCrackage(float Value);
	void DisableAura();
	void EnableAura();
	void SetCrosshair(float Distance, const struct FVector2D& Size);
	void BowCrosshairPulling(bool Pulling);
	void BowCrosshairPower(float Charge);
	void SetCrosshairDefault();
	void SetCrosshairBow();
	void EndHighlightMovement();
	void StartHighlightMovement();
	void UpdateMovementAbilityKeyText();
	void UpdateAbilityKeyText();
	void EndHighlightAbility();
	void StartHighlightAbility();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void HitmarkerOn();
	void HitmarkerPieceColor();
	void HitmarkerPieceCharColor(bool Headshot);
	void Set_Ability_Cooldown(float Cooldown, bool Movement);
	void ActivateScope();
	void DeactivateScope();
	void SetCountdown(int32 Number);
	void SetResultText(bool Tie, EPieceTypes Type, bool Black);
	void Set_Scope_Black();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PieceHUD_C">();
	}
	static class UPieceHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPieceHUD_C>();
	}
};
static_assert(alignof(UPieceHUD_C) == 0x000008, "Wrong alignment on UPieceHUD_C");
static_assert(sizeof(UPieceHUD_C) == 0x000360, "Wrong size on UPieceHUD_C");
static_assert(offsetof(UPieceHUD_C, UberGraphFrame) == 0x000260, "Member 'UPieceHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, ActivateAura) == 0x000268, "Member 'UPieceHUD_C::ActivateAura' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, UnhighlightMovement) == 0x000270, "Member 'UPieceHUD_C::UnhighlightMovement' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, HighlightMovement) == 0x000278, "Member 'UPieceHUD_C::HighlightMovement' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, UnhighlightAbility) == 0x000280, "Member 'UPieceHUD_C::UnhighlightAbility' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, HighlightAbilty) == 0x000288, "Member 'UPieceHUD_C::HighlightAbilty' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Ability) == 0x000290, "Member 'UPieceHUD_C::Ability' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, AbilityHighlight) == 0x000298, "Member 'UPieceHUD_C::AbilityHighlight' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, AbilityKey) == 0x0002A0, "Member 'UPieceHUD_C::AbilityKey' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Aura) == 0x0002A8, "Member 'UPieceHUD_C::Aura' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, BowCrosshairCircle) == 0x0002B0, "Member 'UPieceHUD_C::BowCrosshairCircle' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, BowCrosshairLine) == 0x0002B8, "Member 'UPieceHUD_C::BowCrosshairLine' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Countdown) == 0x0002C0, "Member 'UPieceHUD_C::Countdown' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Cracks) == 0x0002C8, "Member 'UPieceHUD_C::Cracks' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, crosshair) == 0x0002D0, "Member 'UPieceHUD_C::crosshair' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, CrosshairPiece1) == 0x0002D8, "Member 'UPieceHUD_C::CrosshairPiece1' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, CrosshairPiece2) == 0x0002E0, "Member 'UPieceHUD_C::CrosshairPiece2' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, CrosshairPiece3) == 0x0002E8, "Member 'UPieceHUD_C::CrosshairPiece3' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, CrosshairPiece4) == 0x0002F0, "Member 'UPieceHUD_C::CrosshairPiece4' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Hitmarker) == 0x0002F8, "Member 'UPieceHUD_C::Hitmarker' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, MainAbilityCooldown) == 0x000300, "Member 'UPieceHUD_C::MainAbilityCooldown' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, MovementAbility) == 0x000308, "Member 'UPieceHUD_C::MovementAbility' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, MovementAbilityHighlight) == 0x000310, "Member 'UPieceHUD_C::MovementAbilityHighlight' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, MovementKey) == 0x000318, "Member 'UPieceHUD_C::MovementKey' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Result) == 0x000320, "Member 'UPieceHUD_C::Result' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Scope) == 0x000328, "Member 'UPieceHUD_C::Scope' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, SniperCrossX) == 0x000330, "Member 'UPieceHUD_C::SniperCrossX' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, SniperCrossY) == 0x000338, "Member 'UPieceHUD_C::SniperCrossY' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, HitmarkerClearRate) == 0x000340, "Member 'UPieceHUD_C::HitmarkerClearRate' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, AbilityIcon) == 0x000348, "Member 'UPieceHUD_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, MovementAbilityIcon) == 0x000350, "Member 'UPieceHUD_C::MovementAbilityIcon' has a wrong offset!");
static_assert(offsetof(UPieceHUD_C, Gamepad) == 0x000358, "Member 'UPieceHUD_C::Gamepad' has a wrong offset!");

}

