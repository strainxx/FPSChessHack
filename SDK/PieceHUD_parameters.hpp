#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PieceHUD

#include "Basic.hpp"

#include "PieceTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PieceHUD.PieceHUD_C.ExecuteUbergraph_PieceHUD
// 0x02E8 (0x02E8 - 0x0000)
struct PieceHUD_C_ExecuteUbergraph_PieceHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Name;                           // 0x0008(0x0018)()
	class UTextBlock*                             K2Node_CustomEvent_Text;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0040(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x009C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0100(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0110(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0028)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0168(0x0018)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0180(0x0018)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings_1;     // 0x01A0(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_2;                         // 0x01B0(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_3;                         // 0x01D8(0x0028)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_2;         // 0x0208(0x0018)()
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_3;         // 0x0220(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Charge;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Pulling;                        // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Distance;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Size;                           // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PieceHUD_C_ExecuteUbergraph_PieceHUD) == 0x000008, "Wrong alignment on PieceHUD_C_ExecuteUbergraph_PieceHUD");
static_assert(sizeof(PieceHUD_C_ExecuteUbergraph_PieceHUD) == 0x0002E8, "Wrong size on PieceHUD_C_ExecuteUbergraph_PieceHUD");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, EntryPoint) == 0x000000, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Name) == 0x000008, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Text) == 0x000020, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Len_ReturnValue) == 0x000038, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_MakeStruct_SlateFontInfo) == 0x000040, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_Event_MyGeometry) == 0x00009C, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_Event_InDeltaTime) == 0x0000D4, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetRenderOpacity_ReturnValue) == 0x0000D8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000DC, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimation_ReturnValue) == 0x0000E8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000F0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetInputSettings_ReturnValue) == 0x0000F8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetActionMappingByName_OutMappings) == 0x000100, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Array_Get_Item) == 0x000110, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000160, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000168, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000180, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetInputSettings_ReturnValue_1) == 0x000198, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetActionMappingByName_OutMappings_1) == 0x0001A0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetActionMappingByName_OutMappings_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Array_Get_Item_2) == 0x0001B0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Array_Get_Item_3) == 0x0001D8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x000200, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_GetDisplayName_ReturnValue_2) == 0x000208, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Key_GetDisplayName_ReturnValue_3) == 0x000220, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Key_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimation_ReturnValue_2) == 0x000238, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimation_ReturnValue_3) == 0x000240, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Charge) == 0x000248, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Charge' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_MapRangeClamped_ReturnValue) == 0x00024C, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000250, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000254, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_FClamp_ReturnValue) == 0x000258, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000260, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Pulling) == 0x000268, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Pulling' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00026C, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Distance) == 0x000270, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Distance' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Size) == 0x000274, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Size' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_MakeVector2D_ReturnValue) == 0x00027C, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_MakeVector2D_ReturnValue_1) == 0x000284, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00028C, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_MakeVector2D_ReturnValue_2) == 0x000290, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_MakeVector2D_ReturnValue_3) == 0x000298, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0002A0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0002A8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x0002B0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0002B8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, K2Node_CustomEvent_Value) == 0x0002C0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0002C8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_PlayAnimationForward_ReturnValue) == 0x0002D0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0002D8, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0002E0, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_ExecuteUbergraph_PieceHUD, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0002E1, "Member 'PieceHUD_C_ExecuteUbergraph_PieceHUD::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.AutoResize
// 0x0020 (0x0020 - 0x0000)
struct PieceHUD_C_AutoResize final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTextBlock*                             Text;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_AutoResize) == 0x000008, "Wrong alignment on PieceHUD_C_AutoResize");
static_assert(sizeof(PieceHUD_C_AutoResize) == 0x000020, "Wrong size on PieceHUD_C_AutoResize");
static_assert(offsetof(PieceHUD_C_AutoResize, Name_0) == 0x000000, "Member 'PieceHUD_C_AutoResize::Name_0' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_AutoResize, Text) == 0x000018, "Member 'PieceHUD_C_AutoResize::Text' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.SetCrackage
// 0x0004 (0x0004 - 0x0000)
struct PieceHUD_C_SetCrackage final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_SetCrackage) == 0x000004, "Wrong alignment on PieceHUD_C_SetCrackage");
static_assert(sizeof(PieceHUD_C_SetCrackage) == 0x000004, "Wrong size on PieceHUD_C_SetCrackage");
static_assert(offsetof(PieceHUD_C_SetCrackage, Value) == 0x000000, "Member 'PieceHUD_C_SetCrackage::Value' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.SetCrosshair
// 0x000C (0x000C - 0x0000)
struct PieceHUD_C_SetCrosshair final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_SetCrosshair) == 0x000004, "Wrong alignment on PieceHUD_C_SetCrosshair");
static_assert(sizeof(PieceHUD_C_SetCrosshair) == 0x00000C, "Wrong size on PieceHUD_C_SetCrosshair");
static_assert(offsetof(PieceHUD_C_SetCrosshair, Distance) == 0x000000, "Member 'PieceHUD_C_SetCrosshair::Distance' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetCrosshair, Size) == 0x000004, "Member 'PieceHUD_C_SetCrosshair::Size' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.BowCrosshairPulling
// 0x0001 (0x0001 - 0x0000)
struct PieceHUD_C_BowCrosshairPulling final
{
public:
	bool                                          Pulling;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PieceHUD_C_BowCrosshairPulling) == 0x000001, "Wrong alignment on PieceHUD_C_BowCrosshairPulling");
static_assert(sizeof(PieceHUD_C_BowCrosshairPulling) == 0x000001, "Wrong size on PieceHUD_C_BowCrosshairPulling");
static_assert(offsetof(PieceHUD_C_BowCrosshairPulling, Pulling) == 0x000000, "Member 'PieceHUD_C_BowCrosshairPulling::Pulling' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.BowCrosshairPower
// 0x0004 (0x0004 - 0x0000)
struct PieceHUD_C_BowCrosshairPower final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_BowCrosshairPower) == 0x000004, "Wrong alignment on PieceHUD_C_BowCrosshairPower");
static_assert(sizeof(PieceHUD_C_BowCrosshairPower) == 0x000004, "Wrong size on PieceHUD_C_BowCrosshairPower");
static_assert(offsetof(PieceHUD_C_BowCrosshairPower, Charge) == 0x000000, "Member 'PieceHUD_C_BowCrosshairPower::Charge' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct PieceHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_Tick) == 0x000004, "Wrong alignment on PieceHUD_C_Tick");
static_assert(sizeof(PieceHUD_C_Tick) == 0x00003C, "Wrong size on PieceHUD_C_Tick");
static_assert(offsetof(PieceHUD_C_Tick, MyGeometry) == 0x000000, "Member 'PieceHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'PieceHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.HitmarkerPieceCharColor
// 0x0001 (0x0001 - 0x0000)
struct PieceHUD_C_HitmarkerPieceCharColor final
{
public:
	bool                                          Headshot;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PieceHUD_C_HitmarkerPieceCharColor) == 0x000001, "Wrong alignment on PieceHUD_C_HitmarkerPieceCharColor");
static_assert(sizeof(PieceHUD_C_HitmarkerPieceCharColor) == 0x000001, "Wrong size on PieceHUD_C_HitmarkerPieceCharColor");
static_assert(offsetof(PieceHUD_C_HitmarkerPieceCharColor, Headshot) == 0x000000, "Member 'PieceHUD_C_HitmarkerPieceCharColor::Headshot' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.Set Ability Cooldown
// 0x0090 (0x0090 - 0x0000)
struct PieceHUD_C_Set_Ability_Cooldown final
{
public:
	float                                         Cooldown;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Movement;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_Select_Default_1;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PieceHUD_C_Set_Ability_Cooldown) == 0x000008, "Wrong alignment on PieceHUD_C_Set_Ability_Cooldown");
static_assert(sizeof(PieceHUD_C_Set_Ability_Cooldown) == 0x000090, "Wrong size on PieceHUD_C_Set_Ability_Cooldown");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Cooldown) == 0x000000, "Member 'PieceHUD_C_Set_Ability_Cooldown::Cooldown' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Movement) == 0x000004, "Member 'PieceHUD_C_Set_Ability_Cooldown::Movement' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_bool_Variable) == 0x000005, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000006, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_bool_Variable_1) == 0x00000C, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_int_Variable) == 0x000018, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable) == 0x000020, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_1) == 0x000028, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_2) == 0x000030, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_3) == 0x000038, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_4) == 0x000040, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_5) == 0x000048, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_6) == 0x000050, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_7) == 0x000058, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, Temp_object_Variable_8) == 0x000060, "Member 'PieceHUD_C_Set_Ability_Cooldown::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, K2Node_Select_Default) == 0x000068, "Member 'PieceHUD_C_Set_Ability_Cooldown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, K2Node_Select_Default_1) == 0x000070, "Member 'PieceHUD_C_Set_Ability_Cooldown::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, K2Node_Select_Default_2) == 0x000078, "Member 'PieceHUD_C_Set_Ability_Cooldown::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_Set_Ability_Cooldown, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000088, "Member 'PieceHUD_C_Set_Ability_Cooldown::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.SetCountdown
// 0x0020 (0x0020 - 0x0000)
struct PieceHUD_C_SetCountdown final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(PieceHUD_C_SetCountdown) == 0x000008, "Wrong alignment on PieceHUD_C_SetCountdown");
static_assert(sizeof(PieceHUD_C_SetCountdown) == 0x000020, "Wrong size on PieceHUD_C_SetCountdown");
static_assert(offsetof(PieceHUD_C_SetCountdown, Number) == 0x000000, "Member 'PieceHUD_C_SetCountdown::Number' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetCountdown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'PieceHUD_C_SetCountdown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetCountdown, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'PieceHUD_C_SetCountdown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'PieceHUD_C_SetCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function PieceHUD.PieceHUD_C.SetResultText
// 0x00C8 (0x00C8 - 0x0000)
struct PieceHUD_C_SetResultText final
{
public:
	bool                                          Tie;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPieceTypes                                   Type;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Black;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0088(0x0028)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
};
static_assert(alignof(PieceHUD_C_SetResultText) == 0x000008, "Wrong alignment on PieceHUD_C_SetResultText");
static_assert(sizeof(PieceHUD_C_SetResultText) == 0x0000C8, "Wrong size on PieceHUD_C_SetResultText");
static_assert(offsetof(PieceHUD_C_SetResultText, Tie) == 0x000000, "Member 'PieceHUD_C_SetResultText::Tie' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, Type) == 0x000001, "Member 'PieceHUD_C_SetResultText::Type' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, Black) == 0x000002, "Member 'PieceHUD_C_SetResultText::Black' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'PieceHUD_C_SetResultText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'PieceHUD_C_SetResultText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, CallFunc_ToUpper_ReturnValue) == 0x000040, "Member 'PieceHUD_C_SetResultText::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'PieceHUD_C_SetResultText::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'PieceHUD_C_SetResultText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, K2Node_MakeStruct_SlateColor_2) == 0x000088, "Member 'PieceHUD_C_SetResultText::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(PieceHUD_C_SetResultText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'PieceHUD_C_SetResultText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

