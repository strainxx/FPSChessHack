#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Slam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Slam.Slam_C.ExecuteUbergraph_Slam
// 0x0108 (0x0108 - 0x0000)
struct Slam_C_ExecuteUbergraph_Slam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PieceChar_C*                        K2Node_DynamicCast_AsBP_Piece_Char;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Piece_C*                            K2Node_DynamicCast_AsBP_Piece;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_Component;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bReset;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      K2Node_ComponentBoundEvent_PSystem;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Slam_C_ExecuteUbergraph_Slam) == 0x000008, "Wrong alignment on Slam_C_ExecuteUbergraph_Slam");
static_assert(sizeof(Slam_C_ExecuteUbergraph_Slam) == 0x000108, "Wrong size on Slam_C_ExecuteUbergraph_Slam");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, EntryPoint) == 0x000000, "Member 'Slam_C_ExecuteUbergraph_Slam::EntryPoint' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_Event_OtherActor) == 0x000020, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_DynamicCast_AsBP_Piece_Char) == 0x000030, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_DynamicCast_AsBP_Piece_Char' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_DynamicCast_AsBP_Piece) == 0x000040, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_DynamicCast_AsBP_Piece' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_ComponentBoundEvent_Component) == 0x000068, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_ComponentBoundEvent_Component' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_ComponentBoundEvent_bReset) == 0x000070, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_ComponentBoundEvent_bReset' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00008C, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Normal_ReturnValue) == 0x0000A4, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000B0, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, K2Node_ComponentBoundEvent_PSystem) == 0x0000C0, "Member 'Slam_C_ExecuteUbergraph_Slam::K2Node_ComponentBoundEvent_PSystem' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C8, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_Array_Contains_ReturnValue) == 0x0000D0, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_BooleanOR_ReturnValue) == 0x0000D1, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_IsValid_ReturnValue_1) == 0x0000D2, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D8, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_HasAuthority_ReturnValue) == 0x0000E0, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x0000E8, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x0000F0, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Slam_C_ExecuteUbergraph_Slam, CallFunc_IsValid_ReturnValue_2) == 0x000100, "Member 'Slam_C_ExecuteUbergraph_Slam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Slam.Slam_C.BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature) == 0x000008, "Wrong alignment on Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature");
static_assert(sizeof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature) == 0x000008, "Wrong size on Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature");
static_assert(offsetof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature, PSystem) == 0x000000, "Member 'Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature::PSystem' has a wrong offset!");

// Function Slam.Slam_C.BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature) == 0x000008, "Wrong alignment on Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature");
static_assert(sizeof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature) == 0x000010, "Wrong size on Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature");
static_assert(offsetof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature, Component) == 0x000000, "Member 'Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature::Component' has a wrong offset!");
static_assert(offsetof(Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature, bReset) == 0x000008, "Member 'Slam_C_BndEvt__Slam_Effect_K2Node_ComponentBoundEvent_1_ActorComponentActivatedSignature__DelegateSignature::bReset' has a wrong offset!");

// Function Slam.Slam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Slam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Slam_C_ReceiveTick) == 0x000004, "Wrong alignment on Slam_C_ReceiveTick");
static_assert(sizeof(Slam_C_ReceiveTick) == 0x000004, "Wrong size on Slam_C_ReceiveTick");
static_assert(offsetof(Slam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Slam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Slam.Slam_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct Slam_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Slam_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on Slam_C_ReceiveActorBeginOverlap");
static_assert(sizeof(Slam_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on Slam_C_ReceiveActorBeginOverlap");
static_assert(offsetof(Slam_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'Slam_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

