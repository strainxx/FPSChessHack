#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwordSwingObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SwordSwingObject.SwordSwingObject_C
// 0x0020 (0x0240 - 0x0220)
class ASwordSwingObject_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UNiagaraComponent*                      SwordTrailF;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       ForwardSpline;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SwordSwingObject(int32 EntryPoint);
	void Reverse();
	void BndEvt__SwordSwingObject_SwordTrailF_K2Node_ComponentBoundEvent_0_OnNiagaraSystemFinished__DelegateSignature(class UNiagaraComponent* PSystem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SwordSwingObject_C">();
	}
	static class ASwordSwingObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASwordSwingObject_C>();
	}
};
static_assert(alignof(ASwordSwingObject_C) == 0x000008, "Wrong alignment on ASwordSwingObject_C");
static_assert(sizeof(ASwordSwingObject_C) == 0x000240, "Wrong size on ASwordSwingObject_C");
static_assert(offsetof(ASwordSwingObject_C, UberGraphFrame) == 0x000220, "Member 'ASwordSwingObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASwordSwingObject_C, SwordTrailF) == 0x000228, "Member 'ASwordSwingObject_C::SwordTrailF' has a wrong offset!");
static_assert(offsetof(ASwordSwingObject_C, ForwardSpline) == 0x000230, "Member 'ASwordSwingObject_C::ForwardSpline' has a wrong offset!");
static_assert(offsetof(ASwordSwingObject_C, DefaultSceneRoot) == 0x000238, "Member 'ASwordSwingObject_C::DefaultSceneRoot' has a wrong offset!");

}

