#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_AudioOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_AudioOption.UMG_AudioOption_C
// 0x0030 (0x0290 - 0x0260)
class UUMG_AudioOption_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UUMG_Slider_C*                          MasterVolumeSlider;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_Slider_C*                          MusicVolumeSlider;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_Slider_C*                          SFXVolumeSlider;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          GameSetting;                                       // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MasterVolume;                                      // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MusicVolume;                                       // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SFXVolume;                                         // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UMG_AudioOption(int32 EntryPoint);
	void BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature(float Value);
	void BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature(float Value);
	void BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature(float Value);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Completed_D9055C344D23958E5841C5A8979EF8D5(class USaveGame* SaveGame, bool bSuccess);
	void Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1(class USaveGame* SaveGame, bool bSuccess);
	void Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1(class USaveGame* SaveGame, bool bSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_AudioOption_C">();
	}
	static class UUMG_AudioOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_AudioOption_C>();
	}
};
static_assert(alignof(UUMG_AudioOption_C) == 0x000008, "Wrong alignment on UUMG_AudioOption_C");
static_assert(sizeof(UUMG_AudioOption_C) == 0x000290, "Wrong size on UUMG_AudioOption_C");
static_assert(offsetof(UUMG_AudioOption_C, UberGraphFrame) == 0x000260, "Member 'UUMG_AudioOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, MasterVolumeSlider) == 0x000268, "Member 'UUMG_AudioOption_C::MasterVolumeSlider' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, MusicVolumeSlider) == 0x000270, "Member 'UUMG_AudioOption_C::MusicVolumeSlider' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, SFXVolumeSlider) == 0x000278, "Member 'UUMG_AudioOption_C::SFXVolumeSlider' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, GameSetting) == 0x000280, "Member 'UUMG_AudioOption_C::GameSetting' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, MasterVolume) == 0x000284, "Member 'UUMG_AudioOption_C::MasterVolume' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, MusicVolume) == 0x000288, "Member 'UUMG_AudioOption_C::MusicVolume' has a wrong offset!");
static_assert(offsetof(UUMG_AudioOption_C, SFXVolume) == 0x00028C, "Member 'UUMG_AudioOption_C::SFXVolume' has a wrong offset!");

}

