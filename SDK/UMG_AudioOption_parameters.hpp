#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_AudioOption

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_AudioOption.UMG_AudioOption_C.ExecuteUbergraph_UMG_AudioOption
// 0x0130 (0x0130 - 0x0000)
struct UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              K2Node_CustomEvent_SaveGame_2;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_2;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame_1;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_2;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0084(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioSave_C*                           CallFunc_CreateSaveGameObject_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioSave_C*                           CallFunc_CreateSaveGameObject_ReturnValue_1;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioSave_C*                           CallFunc_CreateSaveGameObject_ReturnValue_2;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioSave_C*                           K2Node_DynamicCast_AsAudio_Save;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption) == 0x000008, "Wrong alignment on UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption");
static_assert(sizeof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption) == 0x000130, "Wrong size on UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, EntryPoint) == 0x000000, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_SaveGame_2) == 0x000008, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_SaveGame_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_bSuccess_2) == 0x000010, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_bool_Variable) == 0x000024, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_object_Variable) == 0x000028, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_SaveGame_1) == 0x000030, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_SaveGame_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_bSuccess_1) == 0x000038, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_bool_Variable_1) == 0x00004C, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_object_Variable_1) == 0x000050, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_SaveGame) == 0x000058, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CustomEvent_bSuccess) == 0x000060, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CustomEvent_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_bool_Variable_2) == 0x000074, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, Temp_object_Variable_2) == 0x000078, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_Event_IsDesignTime) == 0x000080, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_Event_MyGeometry) == 0x000084, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_Event_InDeltaTime) == 0x0000BC, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_ComponentBoundEvent_Value_2) == 0x0000C0, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_ComponentBoundEvent_Value_1) == 0x0000C4, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_ComponentBoundEvent_Value) == 0x0000C8, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0000D0, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_AsyncSaveGameToSlot_ReturnValue) == 0x0000D8, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_AsyncSaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_CreateSaveGameObject_ReturnValue_1) == 0x0000E8, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_CreateSaveGameObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_1) == 0x0000F0, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_CreateSaveGameObject_ReturnValue_2) == 0x000100, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_CreateSaveGameObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_2) == 0x000108, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_IsValid_ReturnValue_2) == 0x000110, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000118, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_DynamicCast_AsAudio_Save) == 0x000120, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_DynamicCast_AsAudio_Save' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'UMG_AudioOption_C_ExecuteUbergraph_UMG_AudioOption::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature");
static_assert(sizeof(UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature");
static_assert(offsetof(UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'UMG_AudioOption_C_BndEvt__SFXVolumeSlider_K2Node_ComponentBoundEvent_3_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature");
static_assert(sizeof(UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature");
static_assert(offsetof(UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'UMG_AudioOption_C_BndEvt__MusicVolumeSlider_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature");
static_assert(sizeof(UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature");
static_assert(offsetof(UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'UMG_AudioOption_C_BndEvt__MasterVolumeSlider_K2Node_ComponentBoundEvent_1_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_AudioOption_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_AudioOption_C_Tick) == 0x000004, "Wrong alignment on UMG_AudioOption_C_Tick");
static_assert(sizeof(UMG_AudioOption_C_Tick) == 0x00003C, "Wrong size on UMG_AudioOption_C_Tick");
static_assert(offsetof(UMG_AudioOption_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_AudioOption_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_AudioOption_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_AudioOption_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_AudioOption_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_AudioOption_C_PreConstruct");
static_assert(sizeof(UMG_AudioOption_C_PreConstruct) == 0x000001, "Wrong size on UMG_AudioOption_C_PreConstruct");
static_assert(offsetof(UMG_AudioOption_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_AudioOption_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.Completed_D9055C344D23958E5841C5A8979EF8D5
// 0x0010 (0x0010 - 0x0000)
struct UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5) == 0x000008, "Wrong alignment on UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5");
static_assert(sizeof(UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5) == 0x000010, "Wrong size on UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5");
static_assert(offsetof(UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5, SaveGame) == 0x000000, "Member 'UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5, bSuccess) == 0x000008, "Member 'UMG_AudioOption_C_Completed_D9055C344D23958E5841C5A8979EF8D5::bSuccess' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1
// 0x0010 (0x0010 - 0x0000)
struct UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1) == 0x000008, "Wrong alignment on UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1");
static_assert(sizeof(UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1) == 0x000010, "Wrong size on UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1");
static_assert(offsetof(UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1, SaveGame) == 0x000000, "Member 'UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1, bSuccess) == 0x000008, "Member 'UMG_AudioOption_C_Completed_A43520BA4E2FEF16A88B9DA2DA0F05A1::bSuccess' has a wrong offset!");

// Function UMG_AudioOption.UMG_AudioOption_C.Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1
// 0x0010 (0x0010 - 0x0000)
struct UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1) == 0x000008, "Wrong alignment on UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1");
static_assert(sizeof(UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1) == 0x000010, "Wrong size on UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1");
static_assert(offsetof(UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1, SaveGame) == 0x000000, "Member 'UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1, bSuccess) == 0x000008, "Member 'UMG_AudioOption_C_Completed_DB29D97648ECA204E1F7FCBC6C4D5DF1::bSuccess' has a wrong offset!");

}

