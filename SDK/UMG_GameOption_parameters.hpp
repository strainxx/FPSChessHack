#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_GameOption

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_GameOption.UMG_GameOption_C.ExecuteUbergraph_UMG_GameOption
// 0x0270 (0x0270 - 0x0000)
struct UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              K2Node_CustomEvent_SaveGame_3;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_3;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame_2;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              K2Node_CustomEvent_SaveGame_1;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class USaveGame*                              K2Node_CustomEvent_SaveGame;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_3;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                Temp_byte_Variable_2;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_3;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USaveGame* SaveGame, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default_1;                           // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Temp_object_Variable_4;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplaySave_C*                        CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save_1;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_1;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_2;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance_1;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save_2;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplaySave_C*                        CallFunc_CreateSaveGameObject_ReturnValue_1;       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_2;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_3;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance_2;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save_3;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplaySave_C*                        CallFunc_CreateSaveGameObject_ReturnValue_2;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              K2Node_CustomEvent_SaveGame_4;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess_4;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_3;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFPSChessGameInstance_C*                K2Node_DynamicCast_AsFPSChess_Game_Instance_3;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_4;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplaySave_C*                        K2Node_DynamicCast_AsGameplay_Save_4;              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplaySave_C*                        CallFunc_CreateSaveGameObject_ReturnValue_3;       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncActionHandleSaveGame*             CallFunc_AsyncSaveGameToSlot_ReturnValue_4;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption) == 0x000008, "Wrong alignment on UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption");
static_assert(sizeof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption) == 0x000270, "Wrong size on UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, EntryPoint) == 0x000000, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_SaveGame_3) == 0x000008, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_SaveGame_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_bSuccess_3) == 0x000010, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable) == 0x000024, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_object_Variable) == 0x000028, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_SaveGame_2) == 0x000030, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_SaveGame_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_bSuccess_2) == 0x000038, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_1) == 0x00004C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_object_Variable_1) == 0x000050, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_2) == 0x000058, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_byte_Variable) == 0x000059, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_byte_Variable_1) == 0x00005A, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_SaveGame_1) == 0x000060, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_SaveGame_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_bSuccess_1) == 0x000068, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CreateDelegate_OutputDelegate_2) == 0x00006C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_3) == 0x00007C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_object_Variable_2) == 0x000080, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CreateDelegate_OutputDelegate_3) == 0x000088, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_SaveGame) == 0x000098, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_bSuccess) == 0x0000A0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_4) == 0x0000A1, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_object_Variable_3) == 0x0000A8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_5) == 0x0000B0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_byte_Variable_2) == 0x0000B1, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_byte_Variable_3) == 0x0000B2, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_GetGameInstance_ReturnValue) == 0x0000B8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_ComponentBoundEvent_Value_1) == 0x0000C0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsFPSChess_Game_Instance) == 0x0000C8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsFPSChess_Game_Instance' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_Event_MyGeometry) == 0x0000D4, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_Event_InDeltaTime) == 0x00010C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_Event_IsDesignTime) == 0x000110, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000118, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsGameplay_Save) == 0x000120, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsGameplay_Save' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CreateDelegate_OutputDelegate_4) == 0x00012C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_Select_Default) == 0x00013C, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_Select_Default_1) == 0x00013D, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsStandalone_ReturnValue) == 0x00013E, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_object_Variable_4) == 0x000140, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, Temp_bool_Variable_6) == 0x000148, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsStandalone_ReturnValue_1) == 0x000149, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_LoadGameFromSlot_ReturnValue_1) == 0x000150, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_LoadGameFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000158, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsGameplay_Save_1) == 0x000160, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsGameplay_Save_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_AsyncSaveGameToSlot_ReturnValue) == 0x000170, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_AsyncSaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_1) == 0x000178, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsValid_ReturnValue_1) == 0x000181, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x000182, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_GetGameInstance_ReturnValue_1) == 0x000188, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_LoadGameFromSlot_ReturnValue_2) == 0x000190, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_LoadGameFromSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsFPSChess_Game_Instance_1) == 0x000198, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsFPSChess_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsGameplay_Save_2) == 0x0001A8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsGameplay_Save_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_CreateSaveGameObject_ReturnValue_1) == 0x0001B8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_CreateSaveGameObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_2) == 0x0001C0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_ComponentBoundEvent_Value) == 0x0001CC, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_GetGameInstance_ReturnValue_2) == 0x0001D0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_LoadGameFromSlot_ReturnValue_3) == 0x0001D8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_LoadGameFromSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsFPSChess_Game_Instance_2) == 0x0001E0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsFPSChess_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_5) == 0x0001E8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsGameplay_Save_3) == 0x0001F0, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsGameplay_Save_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_6) == 0x0001F8, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_CreateSaveGameObject_ReturnValue_2) == 0x000200, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_CreateSaveGameObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_SaveGame_4) == 0x000208, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_SaveGame_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_CustomEvent_bSuccess_4) == 0x000210, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_CustomEvent_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_3) == 0x000218, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsValid_ReturnValue_3) == 0x000220, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_ComponentBoundEvent_bIsChecked) == 0x000221, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_GetGameInstance_ReturnValue_3) == 0x000228, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsFPSChess_Game_Instance_3) == 0x000230, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsFPSChess_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_7) == 0x000238, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_LoadGameFromSlot_ReturnValue_4) == 0x000240, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_LoadGameFromSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_AsGameplay_Save_4) == 0x000248, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_AsGameplay_Save_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, K2Node_DynamicCast_bSuccess_8) == 0x000250, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_CreateSaveGameObject_ReturnValue_3) == 0x000258, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_CreateSaveGameObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_AsyncSaveGameToSlot_ReturnValue_4) == 0x000260, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_AsyncSaveGameToSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption, CallFunc_IsValid_ReturnValue_4) == 0x000268, "Member 'UMG_GameOption_C_ExecuteUbergraph_UMG_GameOption::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'UMG_GameOption_C_BndEvt__UMG_GameOption_ChatEnabledBox_K2Node_ComponentBoundEvent_2_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature");
static_assert(sizeof(UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature");
static_assert(offsetof(UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'UMG_GameOption_C_BndEvt__UMG_GameOption_ScopeSensitivity_K2Node_ComponentBoundEvent_2_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'UMG_GameOption_C_BndEvt__UMG_GameOption_CheckBox_90_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_GameOption_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_GameOption_C_PreConstruct");
static_assert(sizeof(UMG_GameOption_C_PreConstruct) == 0x000001, "Wrong size on UMG_GameOption_C_PreConstruct");
static_assert(offsetof(UMG_GameOption_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_GameOption_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_GameOption_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_GameOption_C_Tick) == 0x000004, "Wrong alignment on UMG_GameOption_C_Tick");
static_assert(sizeof(UMG_GameOption_C_Tick) == 0x00003C, "Wrong size on UMG_GameOption_C_Tick");
static_assert(offsetof(UMG_GameOption_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_GameOption_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_GameOption_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature");
static_assert(sizeof(UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature) == 0x000004, "Wrong size on UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature");
static_assert(offsetof(UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature, Value) == 0x000000, "Member 'UMG_GameOption_C_BndEvt__UMG_GameOption_MouseSensitivity_K2Node_ComponentBoundEvent_0_ValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Completed_B605B86E4BFF982CA3859D901D7FB3B9
// 0x0010 (0x0010 - 0x0000)
struct UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9) == 0x000008, "Wrong alignment on UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9");
static_assert(sizeof(UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9) == 0x000010, "Wrong size on UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9");
static_assert(offsetof(UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9, SaveGame) == 0x000000, "Member 'UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9, bSuccess) == 0x000008, "Member 'UMG_GameOption_C_Completed_B605B86E4BFF982CA3859D901D7FB3B9::bSuccess' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Completed_9CD5C034411DE6427764C4B89463E04A
// 0x0010 (0x0010 - 0x0000)
struct UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A) == 0x000008, "Wrong alignment on UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A");
static_assert(sizeof(UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A) == 0x000010, "Wrong size on UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A");
static_assert(offsetof(UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A, SaveGame) == 0x000000, "Member 'UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A, bSuccess) == 0x000008, "Member 'UMG_GameOption_C_Completed_9CD5C034411DE6427764C4B89463E04A::bSuccess' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Completed_2FD4BE2A4257E03F9E1F37BDAB03C310
// 0x0010 (0x0010 - 0x0000)
struct UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310) == 0x000008, "Wrong alignment on UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310");
static_assert(sizeof(UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310) == 0x000010, "Wrong size on UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310");
static_assert(offsetof(UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310, SaveGame) == 0x000000, "Member 'UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310, bSuccess) == 0x000008, "Member 'UMG_GameOption_C_Completed_2FD4BE2A4257E03F9E1F37BDAB03C310::bSuccess' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Completed_62BBD69F445881EE92793EA1EC421AEC
// 0x0010 (0x0010 - 0x0000)
struct UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC) == 0x000008, "Wrong alignment on UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC");
static_assert(sizeof(UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC) == 0x000010, "Wrong size on UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC");
static_assert(offsetof(UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC, SaveGame) == 0x000000, "Member 'UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC, bSuccess) == 0x000008, "Member 'UMG_GameOption_C_Completed_62BBD69F445881EE92793EA1EC421AEC::bSuccess' has a wrong offset!");

// Function UMG_GameOption.UMG_GameOption_C.Completed_46CF0F3E43FF0F3997A05182379E4298
// 0x0010 (0x0010 - 0x0000)
struct UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298 final
{
public:
	class USaveGame*                              SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298) == 0x000008, "Wrong alignment on UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298");
static_assert(sizeof(UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298) == 0x000010, "Wrong size on UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298");
static_assert(offsetof(UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298, SaveGame) == 0x000000, "Member 'UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298::SaveGame' has a wrong offset!");
static_assert(offsetof(UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298, bSuccess) == 0x000008, "Member 'UMG_GameOption_C_Completed_46CF0F3E43FF0F3997A05182379E4298::bSuccess' has a wrong offset!");

}

