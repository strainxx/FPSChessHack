#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_KeymapOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_KeymapOption.UMG_KeymapOption_C
// 0x0070 (0x02D0 - 0x0260)
class UUMG_KeymapOption_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UUMG_ActionMapper_C*                    Action_Block;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_ActionMapper_C*                    Action_Fire;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_ActionMapper_C*                    Action_Jump;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_ActionMapper_C*                    Action_MainAbility;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_ActionMapper_C*                    Action_Movement;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_ActionMapper_C*                    Action_OpenChatWheel;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_AxisMapper_C*                      Axis_Backward;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_AxisMapper_C*                      Axis_Forward;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_AxisMapper_C*                      Axis_Left;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_AxisMapper_C*                      Axis_Right;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             KeymapContainer;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FName>                           ActionNames;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UMG_KeymapOption(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_KeymapOption_C">();
	}
	static class UUMG_KeymapOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_KeymapOption_C>();
	}
};
static_assert(alignof(UUMG_KeymapOption_C) == 0x000008, "Wrong alignment on UUMG_KeymapOption_C");
static_assert(sizeof(UUMG_KeymapOption_C) == 0x0002D0, "Wrong size on UUMG_KeymapOption_C");
static_assert(offsetof(UUMG_KeymapOption_C, UberGraphFrame) == 0x000260, "Member 'UUMG_KeymapOption_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_Block) == 0x000268, "Member 'UUMG_KeymapOption_C::Action_Block' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_Fire) == 0x000270, "Member 'UUMG_KeymapOption_C::Action_Fire' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_Jump) == 0x000278, "Member 'UUMG_KeymapOption_C::Action_Jump' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_MainAbility) == 0x000280, "Member 'UUMG_KeymapOption_C::Action_MainAbility' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_Movement) == 0x000288, "Member 'UUMG_KeymapOption_C::Action_Movement' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Action_OpenChatWheel) == 0x000290, "Member 'UUMG_KeymapOption_C::Action_OpenChatWheel' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Axis_Backward) == 0x000298, "Member 'UUMG_KeymapOption_C::Axis_Backward' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Axis_Forward) == 0x0002A0, "Member 'UUMG_KeymapOption_C::Axis_Forward' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Axis_Left) == 0x0002A8, "Member 'UUMG_KeymapOption_C::Axis_Left' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, Axis_Right) == 0x0002B0, "Member 'UUMG_KeymapOption_C::Axis_Right' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, KeymapContainer) == 0x0002B8, "Member 'UUMG_KeymapOption_C::KeymapContainer' has a wrong offset!");
static_assert(offsetof(UUMG_KeymapOption_C, ActionNames) == 0x0002C0, "Member 'UUMG_KeymapOption_C::ActionNames' has a wrong offset!");

}

