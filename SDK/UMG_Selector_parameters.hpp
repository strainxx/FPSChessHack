#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Selector

#include "Basic.hpp"


namespace SDK::Params
{

// Function UMG_Selector.UMG_Selector_C.ExecuteUbergraph_UMG_Selector
// 0x0034 (0x0034 - 0x0000)
struct UMG_Selector_C_ExecuteUbergraph_UMG_Selector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector) == 0x000004, "Wrong alignment on UMG_Selector_C_ExecuteUbergraph_UMG_Selector");
static_assert(sizeof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector) == 0x000034, "Wrong size on UMG_Selector_C_ExecuteUbergraph_UMG_Selector");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, EntryPoint) == 0x000000, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, K2Node_CustomEvent_Index) == 0x000004, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, Temp_bool_Variable) == 0x000008, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, Temp_int_Variable) == 0x00000C, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, Temp_bool_Variable_1) == 0x000010, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, K2Node_Event_IsDesignTime) == 0x000011, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, K2Node_Select_Default) == 0x000028, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_ExecuteUbergraph_UMG_Selector, K2Node_Select_Default_1) == 0x000030, "Member 'UMG_Selector_C_ExecuteUbergraph_UMG_Selector::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.SetIndexAndUpdate
// 0x0004 (0x0004 - 0x0000)
struct UMG_Selector_C_SetIndexAndUpdate final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Selector_C_SetIndexAndUpdate) == 0x000004, "Wrong alignment on UMG_Selector_C_SetIndexAndUpdate");
static_assert(sizeof(UMG_Selector_C_SetIndexAndUpdate) == 0x000004, "Wrong size on UMG_Selector_C_SetIndexAndUpdate");
static_assert(offsetof(UMG_Selector_C_SetIndexAndUpdate, Index_0) == 0x000000, "Member 'UMG_Selector_C_SetIndexAndUpdate::Index_0' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Selector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Selector_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Selector_C_PreConstruct");
static_assert(sizeof(UMG_Selector_C_PreConstruct) == 0x000001, "Wrong size on UMG_Selector_C_PreConstruct");
static_assert(offsetof(UMG_Selector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Selector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.SetItemNames
// 0x0010 (0x0010 - 0x0000)
struct UMG_Selector_C_SetItemNames final
{
public:
	TArray<class FString>                         Names;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UMG_Selector_C_SetItemNames) == 0x000008, "Wrong alignment on UMG_Selector_C_SetItemNames");
static_assert(sizeof(UMG_Selector_C_SetItemNames) == 0x000010, "Wrong size on UMG_Selector_C_SetItemNames");
static_assert(offsetof(UMG_Selector_C_SetItemNames, Names) == 0x000000, "Member 'UMG_Selector_C_SetItemNames::Names' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.SetCurrentIndex
// 0x0004 (0x0004 - 0x0000)
struct UMG_Selector_C_SetCurrentIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Selector_C_SetCurrentIndex) == 0x000004, "Wrong alignment on UMG_Selector_C_SetCurrentIndex");
static_assert(sizeof(UMG_Selector_C_SetCurrentIndex) == 0x000004, "Wrong size on UMG_Selector_C_SetCurrentIndex");
static_assert(offsetof(UMG_Selector_C_SetCurrentIndex, Index_0) == 0x000000, "Member 'UMG_Selector_C_SetCurrentIndex::Index_0' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.Set Item Text
// 0x0020 (0x0020 - 0x0000)
struct UMG_Selector_C_Set_Item_Text final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
};
static_assert(alignof(UMG_Selector_C_Set_Item_Text) == 0x000008, "Wrong alignment on UMG_Selector_C_Set_Item_Text");
static_assert(sizeof(UMG_Selector_C_Set_Item_Text) == 0x000020, "Wrong size on UMG_Selector_C_Set_Item_Text");
static_assert(offsetof(UMG_Selector_C_Set_Item_Text, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'UMG_Selector_C_Set_Item_Text::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Selector_C_Set_Item_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'UMG_Selector_C_Set_Item_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UMG_Selector.UMG_Selector_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct UMG_Selector_C_SetEnable final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Selector_C_SetEnable) == 0x000001, "Wrong alignment on UMG_Selector_C_SetEnable");
static_assert(sizeof(UMG_Selector_C_SetEnable) == 0x000001, "Wrong size on UMG_Selector_C_SetEnable");
static_assert(offsetof(UMG_Selector_C_SetEnable, Enabled) == 0x000000, "Member 'UMG_Selector_C_SetEnable::Enabled' has a wrong offset!");

}

