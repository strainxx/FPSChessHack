#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_SliderValue

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_SliderValue.UMG_SliderValue_C.ExecuteUbergraph_UMG_SliderValue
// 0x0080 (0x0080 - 0x0000)
struct UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0028(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0068(0x0018)()
};
static_assert(alignof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue) == 0x000008, "Wrong alignment on UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue");
static_assert(sizeof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue) == 0x000080, "Wrong size on UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, EntryPoint) == 0x000000, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, K2Node_ComponentBoundEvent_Text) == 0x000028, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, K2Node_ComponentBoundEvent_CommitMethod) == 0x000040, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000058, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_IsNumeric_ReturnValue) == 0x00005C, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_GetValue_ReturnValue) == 0x000060, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000068, "Member 'UMG_SliderValue_C_ExecuteUbergraph_UMG_SliderValue::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");

// Function UMG_SliderValue.UMG_SliderValue_C.BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'UMG_SliderValue_C_BndEvt__UMG_SliderValue_EditableText_65_K2Node_ComponentBoundEvent_3_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function UMG_SliderValue.UMG_SliderValue_C.BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'UMG_SliderValue_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function UMG_SliderValue.UMG_SliderValue_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_SliderValue_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_SliderValue_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_SliderValue_C_PreConstruct");
static_assert(sizeof(UMG_SliderValue_C_PreConstruct) == 0x000001, "Wrong size on UMG_SliderValue_C_PreConstruct");
static_assert(offsetof(UMG_SliderValue_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_SliderValue_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_SliderValue.UMG_SliderValue_C.SetSliderProperty
// 0x000C (0x000C - 0x0000)
struct UMG_SliderValue_C_SetSliderProperty final
{
public:
	float                                         Min_0;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_0;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default_0;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SliderValue_C_SetSliderProperty) == 0x000004, "Wrong alignment on UMG_SliderValue_C_SetSliderProperty");
static_assert(sizeof(UMG_SliderValue_C_SetSliderProperty) == 0x00000C, "Wrong size on UMG_SliderValue_C_SetSliderProperty");
static_assert(offsetof(UMG_SliderValue_C_SetSliderProperty, Min_0) == 0x000000, "Member 'UMG_SliderValue_C_SetSliderProperty::Min_0' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_SetSliderProperty, Max_0) == 0x000004, "Member 'UMG_SliderValue_C_SetSliderProperty::Max_0' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_SetSliderProperty, Default_0) == 0x000008, "Member 'UMG_SliderValue_C_SetSliderProperty::Default_0' has a wrong offset!");

// Function UMG_SliderValue.UMG_SliderValue_C.SetValue
// 0x0020 (0x0020 - 0x0000)
struct UMG_SliderValue_C_SetValue final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
};
static_assert(alignof(UMG_SliderValue_C_SetValue) == 0x000008, "Wrong alignment on UMG_SliderValue_C_SetValue");
static_assert(sizeof(UMG_SliderValue_C_SetValue) == 0x000020, "Wrong size on UMG_SliderValue_C_SetValue");
static_assert(offsetof(UMG_SliderValue_C_SetValue, Val) == 0x000000, "Member 'UMG_SliderValue_C_SetValue::Val' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_SetValue, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'UMG_SliderValue_C_SetValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SliderValue_C_SetValue, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'UMG_SliderValue_C_SetValue::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

}

