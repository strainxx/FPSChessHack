#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Slider

#include "Basic.hpp"


namespace SDK::Params
{

// Function UMG_Slider.UMG_Slider_C.ExecuteUbergraph_UMG_Slider
// 0x000C (0x000C - 0x0000)
struct UMG_Slider_C_ExecuteUbergraph_UMG_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Slider_C_ExecuteUbergraph_UMG_Slider) == 0x000004, "Wrong alignment on UMG_Slider_C_ExecuteUbergraph_UMG_Slider");
static_assert(sizeof(UMG_Slider_C_ExecuteUbergraph_UMG_Slider) == 0x00000C, "Wrong size on UMG_Slider_C_ExecuteUbergraph_UMG_Slider");
static_assert(offsetof(UMG_Slider_C_ExecuteUbergraph_UMG_Slider, EntryPoint) == 0x000000, "Member 'UMG_Slider_C_ExecuteUbergraph_UMG_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Slider_C_ExecuteUbergraph_UMG_Slider, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UMG_Slider_C_ExecuteUbergraph_UMG_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_Slider_C_ExecuteUbergraph_UMG_Slider, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'UMG_Slider_C_ExecuteUbergraph_UMG_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");

// Function UMG_Slider.UMG_Slider_C.BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'UMG_Slider_C_BndEvt__Slider_56_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function UMG_Slider.UMG_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Slider_C_PreConstruct");
static_assert(sizeof(UMG_Slider_C_PreConstruct) == 0x000001, "Wrong size on UMG_Slider_C_PreConstruct");
static_assert(offsetof(UMG_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_Slider.UMG_Slider_C.SetSliderProperty
// 0x000C (0x000C - 0x0000)
struct UMG_Slider_C_SetSliderProperty final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Slider_C_SetSliderProperty) == 0x000004, "Wrong alignment on UMG_Slider_C_SetSliderProperty");
static_assert(sizeof(UMG_Slider_C_SetSliderProperty) == 0x00000C, "Wrong size on UMG_Slider_C_SetSliderProperty");
static_assert(offsetof(UMG_Slider_C_SetSliderProperty, Min) == 0x000000, "Member 'UMG_Slider_C_SetSliderProperty::Min' has a wrong offset!");
static_assert(offsetof(UMG_Slider_C_SetSliderProperty, Max) == 0x000004, "Member 'UMG_Slider_C_SetSliderProperty::Max' has a wrong offset!");
static_assert(offsetof(UMG_Slider_C_SetSliderProperty, Default) == 0x000008, "Member 'UMG_Slider_C_SetSliderProperty::Default' has a wrong offset!");

// Function UMG_Slider.UMG_Slider_C.SetValue
// 0x0004 (0x0004 - 0x0000)
struct UMG_Slider_C_SetValue final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Slider_C_SetValue) == 0x000004, "Wrong alignment on UMG_Slider_C_SetValue");
static_assert(sizeof(UMG_Slider_C_SetValue) == 0x000004, "Wrong size on UMG_Slider_C_SetValue");
static_assert(offsetof(UMG_Slider_C_SetValue, Val) == 0x000000, "Member 'UMG_Slider_C_SetValue::Val' has a wrong offset!");

}

