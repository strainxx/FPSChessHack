#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WhipHitbox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "WhipTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WhipHitbox.WhipHitbox_C
// 0x0060 (0x0280 - 0x0220)
class AWhipHitbox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USphereComponent*                       BreakHitbox;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HitHitbox;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Aura;                                              // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWhipTypes                                    Whip_Type;                                         // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> OnBiggerHitbox;                                    // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> OnSmallerHitbox;                                   // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class AActor*>                         NoHitList;                                         // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         WhipPierceTime;                                    // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WhipHitbox(int32 EntryPoint);
	void DestroyHitboxDelayed();
	void BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void DestroySelf();
	void DestroyHitbox();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WhipHitbox_C">();
	}
	static class AWhipHitbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWhipHitbox_C>();
	}
};
static_assert(alignof(AWhipHitbox_C) == 0x000008, "Wrong alignment on AWhipHitbox_C");
static_assert(sizeof(AWhipHitbox_C) == 0x000280, "Wrong size on AWhipHitbox_C");
static_assert(offsetof(AWhipHitbox_C, UberGraphFrame) == 0x000220, "Member 'AWhipHitbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, BreakHitbox) == 0x000228, "Member 'AWhipHitbox_C::BreakHitbox' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, HitHitbox) == 0x000230, "Member 'AWhipHitbox_C::HitHitbox' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, Aura) == 0x000238, "Member 'AWhipHitbox_C::Aura' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, Whip_Type) == 0x000240, "Member 'AWhipHitbox_C::Whip_Type' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, OnBiggerHitbox) == 0x000248, "Member 'AWhipHitbox_C::OnBiggerHitbox' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, OnSmallerHitbox) == 0x000258, "Member 'AWhipHitbox_C::OnSmallerHitbox' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, NoHitList) == 0x000268, "Member 'AWhipHitbox_C::NoHitList' has a wrong offset!");
static_assert(offsetof(AWhipHitbox_C, WhipPierceTime) == 0x000278, "Member 'AWhipHitbox_C::WhipPierceTime' has a wrong offset!");

}

