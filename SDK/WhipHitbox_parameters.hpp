#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WhipHitbox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WhipHitbox.WhipHitbox_C.ExecuteUbergraph_WhipHitbox
// 0x01A8 (0x01A8 - 0x0000)
struct WhipHitbox_C_ExecuteUbergraph_WhipHitbox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0114(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox) == 0x000008, "Wrong alignment on WhipHitbox_C_ExecuteUbergraph_WhipHitbox");
static_assert(sizeof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox) == 0x0001A8, "Wrong size on WhipHitbox_C_ExecuteUbergraph_WhipHitbox");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, EntryPoint) == 0x000000, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000018, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_Event_EndPlayReason) == 0x000028, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000030, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000040, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000048, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000050, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000058, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_HitComponent) == 0x0000F0, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F8, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_OtherComp) == 0x000100, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000108, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, K2Node_ComponentBoundEvent_Hit) == 0x000114, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, CallFunc_Array_Contains_ReturnValue) == 0x0001A0, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_ExecuteUbergraph_WhipHitbox, CallFunc_Array_Add_ReturnValue) == 0x0001A4, "Member 'WhipHitbox_C_ExecuteUbergraph_WhipHitbox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WhipHitbox.WhipHitbox_C.BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_BreakHitbox_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function WhipHitbox.WhipHitbox_C.BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'WhipHitbox_C_BndEvt__WhipHitbox_HitHitbox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function WhipHitbox.WhipHitbox_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct WhipHitbox_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WhipHitbox_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on WhipHitbox_C_ReceiveEndPlay");
static_assert(sizeof(WhipHitbox_C_ReceiveEndPlay) == 0x000001, "Wrong size on WhipHitbox_C_ReceiveEndPlay");
static_assert(offsetof(WhipHitbox_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'WhipHitbox_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

